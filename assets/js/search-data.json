{
  
    
        "post0": {
            "title": "Week of 05-08, AP Week 2",
            "content": "Plans Week 33 . Monday: AP Exam Day | Tuesday: Programming Labs, and Projects: Stack from ArrayList and Queues | Wednesday: | Thursday: | Friday: | . Look ahead .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/33",
            "relUrl": "/points/33",
            "date": " • May 8, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Week of 05-01, AP Week 1",
            "content": "Plans Week 32 . Monday: AP Review | Tuesday: AP Review | Wednesday: AP Review | Thursday: AP Review | Friday: AP MCQ 2021 Practice Exam | . Look ahead . AP Exam on Monday 5/8 .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/32",
            "relUrl": "/points/32",
            "date": " • May 1, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Week of 04-24, Computing Systems and Networks",
            "content": "Plans Week 31 . Monday: Live Review | Tuesday: Big Idea 4 Review | Wednesday: | Thursday: | Friday: AP MCQ 2020 Practice Exam | . Look ahead . AP Project Due on Tuesday 5/8 .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/31",
            "relUrl": "/points/31",
            "date": " • Apr 24, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Binary Math Lesson Plan",
            "content": "Vocab and notes: . Logic gates (AND, OR, NOR, NAND) | Binary conversion | Bitwise operations | Binary search | Huffman coding | . In-class practice hacks (2-3) . Logic gate program | String to binary conversion program | . Homework hacks (1-2) . Binary calculator conversion | Huffman coding program | .",
            "url": "https://nighthawkcoders.github.io/APCSP/lesson/2023/04/23/ram-lesson-plan.html",
            "relUrl": "/lesson/2023/04/23/ram-lesson-plan.html",
            "date": " • Apr 23, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Binary Math",
            "content": "WGET Link . Binary Recap and Notes . &gt; In the bullet points below, record 5 things that you already knew about binary before this lecture . - . &gt; Binary is can be applied in many ways to store, access, and manipulate information. Think of three applications that rely on binary. . - . Why is binary such an effective system for storing information? Why don&#39;t computers use the decimal system instead? . Bitwise Opperations . Fill in the blank spots below during the lecture . Opearator Name Action . &amp; | AND | | . | OR | | . ^ | XOR | | . ~ | NOT | | . &lt;&lt; | Left Shift | | . &gt;&gt; | Right Shift | | . &gt;&gt;&gt; | Zero-fill Right Shift | | . In this program, the binary operators &amp; (AND), | (OR), ^ (XOR), and ~ (NOT) are used to perform the binary operations on the input numbers. The results are stored in separate variables as decimal numbers. Then, the bin() function is used to convert each decimal result to binary, and the binary strings are stored in separate variables. Finally, the program returns a tuple of tuples, with each inner tuple containing both the decimal and binary result for each operation. The outer tuple is unpacked into separate variables for printing, and the results are displayed as both decimal and binary. . def binary_operations(num1, num2): # Perform the binary operations and_result_decimal = num1 &amp; num2 or_result_decimal = num1 | num2 xor_result_decimal = num1 ^ num2 not_result_decimal = ~num1 # Convert results to binary and_result_binary = bin(and_result_decimal)[2:] or_result_binary = bin(or_result_decimal)[2:] xor_result_binary = bin(xor_result_decimal)[2:] not_result_binary = bin(not_result_decimal)[2:] # Return the results as a tuple of tuples return ((and_result_decimal, and_result_binary), (or_result_decimal, or_result_binary), (xor_result_decimal, xor_result_binary), (not_result_decimal, not_result_binary)) # Ask the user for input num1 = int(input(&quot;Enter the first number: &quot;)) num2 = int(input(&quot;Enter the second number: &quot;)) # Call the binary_operations function and print the results and_result, or_result, xor_result, not_result = binary_operations(num1, num2) print(&quot;AND result: decimal =&quot;, and_result[0], &quot;, binary =&quot;, and_result[1]) print(&quot;OR result: decimal =&quot;, or_result[0], &quot;, binary =&quot;, or_result[1]) print(&quot;XOR result: decimal =&quot;, xor_result[0], &quot;, binary =&quot;, xor_result[1]) print(&quot;NOT result: decimal =&quot;, not_result[0], &quot;, binary =&quot;, not_result[1]) . AND result: decimal = 2 , binary = 10 OR result: decimal = 58 , binary = 111010 XOR result: decimal = 56 , binary = 111000 NOT result: decimal = -11 , binary = b1011 . Bitwise operations are used in a variety of applications, particularly in low-level programming and computer science. Some common used of bitwise operations include:&gt; - Flag Management: Flags are used to keep track of the state of a system or a program. Bitwise operations can be used to set, clear, and toggle flags.&gt; - Bit Manipulation:Bitwise operations can be used to manipulate individual bits in a binary number. This is often used to extract specific bits from a number, set specific bits to a particular value, or flip the value of specific bits.&gt; - Masking:Masking is used to extract a specific subset of bits from a binary number. Bitwise operations are commonly used for masking, particularly in low-level programming.&gt; - Encryption:Bitwise operations can be used in cryptographic applications to scramble and unscramble data. One common application of bitwise operations in encryption is the XOR operation.&gt; - Graphics:Bitwise operations can be used in computer graphics to manipulate individual pixels on a screen. This can be used to draw shapes, change colors, and create special effects.&gt; - Networking:Bitwise operations are used extensively in networking applications, particularly in the handling of IP addresses and port numbers. . Binary to String Conversion . This program defines a string_to_binary function that takes a string as input and returns the binary representation of the string. The function uses a for loop to iterate over each character in the string. For each character, the ord function is used to get its ASCII code, which is then converted to binary using the format function with the &#39;08b&#39; format specifier to ensure that each binary number is 8 digits long. The resulting binary numbers are concatenated to form the final binary string. . . # Function to convert a string to binary def string_to_binary(string): binary = &#39;&#39; for char in string: binary += format(ord(char), &#39;08b&#39;) # Convert the character to binary and append to the binary string return binary # Example usage word = input(&quot;Enter a word to convert to binary: &quot;) binary_word = string_to_binary(word) print(f&quot;The binary representation of &#39;{word}&#39; is {binary_word}&quot;) . The binary representation of &#39;word&#39; is 01110111011011110111001001100100 . Many programs use binary conversion, particularly those related to computer science, electrical engineering, and mathematics. Programs that rely on binary conversion include:&gt; - Networking: Programs that deal with network addresses, such as IP addresses and subnet masks, use binary conversion to represent and manipulate the addresses.&gt; - Cryptography:Programs that deal with encryption and decryption use binary conversion to encode and decode data.&gt; - Computer Hardware:Programs that interface with computer hardware, such as drivers and firmware, often use binary conversion to communicate with the hardware at the binary level.&gt; - Mathematical Applications:Programs that deal with complex calculations and mathematical analysis, such as statistical analysis or machine learning algorithms, may use binary conversion to represent large numbers or complex data sets.&gt; - Finance:Programs that deal with financial calculations and accounting may use binary conversion to represent fractional amounts or complex financial data. . Binary Search . An algorithm made to find an item from a list of items | Works by dividing the list repeatedly to narrow down which half (the low or high half) that contains the item | Lists of integers are often used with binary search | Binary search makes searching more efficient, as it ensures the program won&#39;t have to search through an entire list of items one by one | List must be sorted | . What are some situations in which binary search could be used? . Real Example of Binary Search . Binary search operates a lot like a &quot;guess the number&quot; game. Try the game and explain how the two are similar. . import random hid = random.randint(0,100) gues = 0 def game(): global gues gues += 1 num = int(input(&#39;Pick a number&#39;)) if num &lt; hid: print(&#39;higher&#39;) game() if num &gt; hid: print(&#39;lower&#39;) game() if num == hid: print(hid) print(&#39;You Win !!!&#39;) print(&#39;guesses: &#39;, gues) game() . Logic Gates . Accepts inputs and then outputs a result based on what the inputs were . NOT Gate (aka inverter) | Accepts a single input and outputs the opposite value. | Ex: If the input is 0, the output is 1 | . AND Gates | Multiple inputs | Accepts two inputs. | If both inputs &quot;true,&quot; it returns &quot;true.&quot; | If both inputs are &quot;false,&quot; it returns &quot;false.&quot; | What would it return if one input was &quot;true&quot; and the other was &quot;false&quot;? Discuss. | . OR Gates | Accepts two inputs. | As long as one of the two inputs is &quot;true,&quot; it returns &quot;true.&quot; | If both inputs are &quot;false,&quot; what would the OR gate return? Discuss. | . Universal Logic Gates . NAND Gate | Accepts two inputs. | Outputs &quot;false&quot; ONLY when both of its inputs are &quot;true.&quot; At all other times, the gate produces an output of &quot;true.&quot; | . NOR Gate | Accepts two inputs. | Outputs &quot;true&quot; only when both of its inputs are &quot;false.&quot; At all other times, the gate produces an output of &quot;false.&quot; | . Collegeboard Practice . Hacks . Take notes and answer the questions above. Make sure you understand the purpose and function of the xample programs. (0.9) . | Complete this quiz and attach a screen shot of your score below. If you missed any questions, explain why you got it wrong and write a short summary of your understanding of the content. (0.9) . | As your tangible, create a program that allows a user to input two numbers and an operation, converts the numbers to binary and performs the given operation, and returns the value in decimal values. (0.9) . | . Applying Binary Math - Calculator Hack . Calculators use binary math to perform arithmetic operations such as addition, subtraction, multiplication, and division.In a calculator, the binary digits are represented by electronic switches that can be either on or off, corresponding to 1 or 0 respectively. These switches are arranged in groups of eight to form bytes, which are used to represent larger numbers. When a user enters a number into a calculator, the number is converted into binary form and stored in the calculator&#39;s memory.To perform an arithmetic operation, the calculator retrieves the numbers from its memory and performs the operation using binary math. . For example, to add the binary numbers 1010 and 1101, the calculator would perform the following steps:&gt; 1. Add the rightmost digits, 0 and 1, which gives a sum of 1.&gt; 2. Move to the next digit to the left and add the digits along with any carry from the previous step. In this case, we have 1 + 0 + 1, which gives a sum of 10. The carry of 1 is then carried over to the next digit. . Repeat step 2 for the remaining digits until all digits have been added. | The result of the addition in this example is the binary number 10111, which is equivalent to the decimal number 23. | Similarly, subtraction, multiplication, and division are performed using binary math. The algorithms for these operations are based on the same principles as those used in decimal arithmetic, but with binary digits and powers of 2 instead of decimal digits and powers of 10. . def binary_math(num1, num2, operator): # Write your calculator function here # Ask the user for input num1 = int(input(&quot;Enter the first number: &quot;)) num2 = int(input(&quot;Enter the second number: &quot;)) operator = input(&quot;Enter the operator (+, -, *, /): &quot;) # Call the binary_math function and print the result result = binary_math(num1, num2, operator) print(&quot;Result:&quot;, result) .",
            "url": "https://nighthawkcoders.github.io/APCSP/student/2023/04/21/P5Y-BinaryMathLesson.html",
            "relUrl": "/student/2023/04/21/P5Y-BinaryMathLesson.html",
            "date": " • Apr 21, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Binary Math",
            "content": "Binary Recap and Notes . &gt; In the bullet points below, record 5 things that you already knew about binary before this lecture . - . &gt; Binary is can be applied in many ways to store, access, and manipulate information. Think of three applications that rely on binary. . - . Why is binary such an effective system for storing information? Why don&#39;t computers use the decimal system instead? . Bitwise Opperations . Fill in the blank spots below during the lecture . Opearator Name Action . &amp; | AND | | . | OR | | . ^ | XOR | | . ~ | NOT | | . &lt;&lt; | Left Shift | | . &gt;&gt; | Right Shift | | . &gt;&gt;&gt; | Zero-fill Right Shift | | . In this program, the __ &amp; (AND), | (OR), ^ (XOR), and ~ (NOT) are used to perform the binary operations on the input numbers. The results are stored in separate variables as __. Then, the ___ function is used to convert each decimal result to binary, and the binary strings are stored in separate variables. Finally, the program returns a tuple of tuples, with each inner tuple containing both the decimal and binary result for each operation. The outer tuple is __ into separate variables for printing, and the results are displayed as both decimal and binary. . def binary_operations(num1, num2): # Perform the binary operations and_result_decimal = num1 &amp; num2 or_result_decimal = num1 | num2 xor_result_decimal = num1 ^ num2 not_result_decimal = ~num1 # Convert results to binary and_result_binary = bin(and_result_decimal)[2:] or_result_binary = bin(or_result_decimal)[2:] xor_result_binary = bin(xor_result_decimal)[2:] not_result_binary = bin(not_result_decimal)[2:] # Return the results as a tuple of tuples return ((and_result_decimal, and_result_binary), (or_result_decimal, or_result_binary), (xor_result_decimal, xor_result_binary), (not_result_decimal, not_result_binary)) # Ask the user for input num1 = int(input(&quot;Enter the first number: &quot;)) num2 = int(input(&quot;Enter the second number: &quot;)) # Call the binary_operations function and print the results and_result, or_result, xor_result, not_result = binary_operations(num1, num2) print(&quot;AND result: decimal =&quot;, and_result[0], &quot;, binary =&quot;, and_result[1]) print(&quot;OR result: decimal =&quot;, or_result[0], &quot;, binary =&quot;, or_result[1]) print(&quot;XOR result: decimal =&quot;, xor_result[0], &quot;, binary =&quot;, xor_result[1]) print(&quot;NOT result: decimal =&quot;, not_result[0], &quot;, binary =&quot;, not_result[1]) . AND result: decimal = 2 , binary = 10 OR result: decimal = 58 , binary = 111010 XOR result: decimal = 56 , binary = 111000 NOT result: decimal = -11 , binary = b1011 . Bitwise operations are used in a variety of applications, particularly in low-level programming and computer science. Some common used of bitwise operations include:&gt; - Flag Management: Flags are used to keep track of the __. Bitwise operations can be used to set, clear, and toggle flags.&gt; - Bit Manipulation:Bitwise operations can be used to __ in a binary number. This is often used to __ specific bits from a number, set specific bits to a particular value, or flip the value of specific bits.&gt; - Masking:Masking is used to extract a __ from a binary number. Bitwise operations are commonly used for masking, particularly in low-level programming. . Encryption:Bitwise operations can be used in cryptographic applications to scramble and unscramble data. One common application of bitwise operations in encryption is the __ operation.&gt; - Graphics:Bitwise operations can be used in computer graphics to manipulate individual __ on a screen. This can be used to draw shapes, change colors, and create special effects.&gt; - Networking:Bitwise operations are used extensively in __ applications, particularly in the handling of IP addresses and port numbers. | . Binary to String Conversion . This program defines a string_to_binary function that takes a string as input and returns the binary representation of the string. The function uses a for loop to iterate over each character in the string. For each character, the ord function is used to get its ASCII code, which is then converted to binary using the format function with the &#39;08b&#39; format specifier to ensure that each binary number is 8 digits long. The resulting binary numbers are concatenated to form the final binary string. . . # Function to convert a string to binary def string_to_binary(string): binary = &#39;&#39; for char in string: binary += format(ord(char), &#39;08b&#39;) # Convert the character to binary and append to the binary string return binary # Example usage word = input(&quot;Enter a word to convert to binary: &quot;) binary_word = string_to_binary(word) print(f&quot;The binary representation of &#39;{word}&#39; is {binary_word}&quot;) . The binary representation of &#39;word&#39; is 01110111011011110111001001100100 . Many programs use binary conversion, particularly those related to computer science, electrical engineering, and mathematics. Programs that rely on binary conversion include:&gt; - Networking: Programs that deal with network addresses, such as IP addresses and subnet masks, use binary conversion to represent and manipulate the addresses.&gt; - Cryptography:Programs that deal with encryption and decryption use binary conversion to encode and decode data.&gt; - Computer Hardware:Programs that interface with computer hardware, such as drivers and firmware, often use binary conversion to communicate with the hardware at the binary level.&gt; - Mathematical Applications:Programs that deal with complex calculations and mathematical analysis, such as statistical analysis or machine learning algorithms, may use binary conversion to represent large numbers or complex data sets.&gt; - Finance:Programs that deal with financial calculations and accounting may use binary conversion to represent fractional amounts or complex financial data. . Binary Search . An algorithm made to find an __ from a list of __ | Works by dividing the list repeatedly to narrow down which half (the low or high half) that contains the item | Lists of __ are often used with binary search | Binary search makes searching more efficient, as it ensures the program won&#39;t have to search through an entire list of items one by one | List must be sorted | . What are some situations in which binary search could be used? . - . ### Real Example of Binary Search . | . Binary search operates a lot like a &quot;guess the number&quot; game. Try the game and explain how the two are similar. . import random hid = random.randint(0,100) gues = 0 def game(): global gues gues += 1 num = int(input(&#39;Pick a number&#39;)) if num &lt; hid: print(&#39;higher&#39;) game() if num &gt; hid: print(&#39;lower&#39;) game() if num == hid: print(hid) print(&#39;You Win !!!&#39;) print(&#39;guesses: &#39;, gues) game() . Logic Gates . Accepts inputs and then outputs a result based on what the inputs were . NOT Gate (aka inverter) | Accepts a single input and outputs the opposite value. | Ex: If the input is 0, the output is 1 | . AND Gates | Multiple inputs | Accepts two inputs. | If both inputs &quot;true,&quot; it returns &quot;true.&quot; | If both inputs are &quot;false,&quot; it returns &quot;false.&quot; | What would it return if one input was &quot;true&quot; and the other was &quot;false&quot;? Discuss and record below. . | | . OR Gates | Accepts two inputs. | As long as one of the two inputs is &quot;true,&quot; it returns &quot;true.&quot; | If both inputs are &quot;false,&quot; what would the OR gate return? Discuss and record below. . | | . Universal Logic Gates . NAND Gate | Accepts two inputs. | Outputs &quot;false&quot; ONLY when both of its inputs are &quot;true.&quot; At all other times, the gate produces an output of &quot;true.&quot; | . NOR Gate | Accepts two inputs. | Outputs &quot;true&quot; only when both of its inputs are &quot;false.&quot; At all other times, the gate produces an output of &quot;false.&quot; | . Collegeboard Practice . Hacks . Take notes and answer the questions above. Make sure you understand the purpose and function of the xample programs. (0.9) . | Complete this quiz and attach a screen shot of your score below. If you missed any questions, explain why you got it wrong and write a short summary of your understanding of the content. (0.9) . | As your tangible, create a program that allows a user to input two numbers and an operation, converts the numbers to binary and performs the given operation, and returns the value in decimal values. (0.9) . | . Applying Binary Math - Calculator Hack . Calculators use binary math to perform arithmetic operations such as addition, subtraction, multiplication, and division.In a calculator, the binary digits are represented by electronic switches that can be either on or off, corresponding to 1 or 0 respectively. These switches are arranged in groups of eight to form bytes, which are used to represent larger numbers. When a user enters a number into a calculator, the number is converted into binary form and stored in the calculator&#39;s memory.To perform an arithmetic operation, the calculator retrieves the numbers from its memory and performs the operation using binary math. . For example, to add the binary numbers 1010 and 1101, the calculator would perform the following steps:&gt; 1. Add the rightmost digits, 0 and 1, which gives a sum of 1.&gt; 2. Move to the next digit to the left and add the digits along with any carry from the previous step. In this case, we have 1 + 0 + 1, which gives a sum of 10. The carry of 1 is then carried over to the next digit. . Repeat step 2 for the remaining digits until all digits have been added. | The result of the addition in this example is the binary number 10111, which is equivalent to the decimal number 23. | Similarly, subtraction, multiplication, and division are performed using binary math. The algorithms for these operations are based on the same principles as those used in decimal arithmetic, but with binary digits and powers of 2 instead of decimal digits and powers of 10. . def binary_math(num1, num2, operator): # Write your calculator function here # Ask the user for input num1 = int(input(&quot;Enter the first number: &quot;)) num2 = int(input(&quot;Enter the second number: &quot;)) operator = input(&quot;Enter the operator (+, -, *, /): &quot;) # Call the binary_math function and print the result result = binary_math(num1, num2, operator) print(&quot;Result:&quot;, result) .",
            "url": "https://nighthawkcoders.github.io/APCSP/student/2023/04/21/P5Y-BinaryMathLesson-student-copy.html",
            "relUrl": "/student/2023/04/21/P5Y-BinaryMathLesson-student-copy.html",
            "date": " • Apr 21, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Quiz Questions",
            "content": "",
            "url": "https://nighthawkcoders.github.io/APCSP/data/quiz",
            "relUrl": "/data/quiz",
            "date": " • Apr 17, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Week of 04-17, Search and Sort",
            "content": "Plans Week 30 . Monday: Live Review - Hashmap, Arrays, MCQ Test #5 | Tuesday: Data Structures: Search and Sorting Algorithms: Bubble, Insertion, Selection, Merge, Linear Search, Binary Search | Wednesday: Work Day | Thursday: Work Day | Friday: AP MCQ 2018 Practice Exam | . Look ahead .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/30",
            "relUrl": "/points/30",
            "date": " • Apr 17, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Week of 04-03, Arrays",
            "content": "Plans Week 29 . Monday: Live Review Project | Tuesday: Data Structures: 1D Arrays, 2D Arrays, ArrayList | Wednesday: Work Day | Thursday: Work Day | Friday: MCQ Test #5 | . Look ahead .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/29",
            "relUrl": "/points/29",
            "date": " • Apr 3, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Binary Math",
            "content": "Binary Recap and Notes . &gt; In the bullet points below, record 5 things that you already knew about binary before this lecture . - . &gt; Binary is can be applied in many ways to store, access, and manipulate information. Think of three applications that rely on binary. . - . Why is binary such an effective system for storing information? Why don&#39;t computers use the decimal system instead? . Bitwise Opperations . Fill in the blank spots below during the lecture . Opearator Name Action . &amp; | AND | | . | OR | | . ^ | XOR | | . ~ | NOT | | . &lt;&lt; | Left Shift | | . &gt;&gt; | Right Shift | | . &gt;&gt;&gt; | Zero-fill Right Shift | | . In this program, the binary operators &amp; (AND), | (OR), ^ (XOR), and ~ (NOT) are used to perform the binary operations on the input numbers. The results are stored in separate variables as decimal numbers. Then, the bin() function is used to convert each decimal result to binary, and the binary strings are stored in separate variables. Finally, the program returns a tuple of tuples, with each inner tuple containing both the decimal and binary result for each operation. The outer tuple is unpacked into separate variables for printing, and the results are displayed as both decimal and binary. . def binary_operations(num1, num2): # Perform the binary operations and_result_decimal = num1 &amp; num2 or_result_decimal = num1 | num2 xor_result_decimal = num1 ^ num2 not_result_decimal = ~num1 # Convert results to binary and_result_binary = bin(and_result_decimal)[2:] or_result_binary = bin(or_result_decimal)[2:] xor_result_binary = bin(xor_result_decimal)[2:] not_result_binary = bin(not_result_decimal)[2:] # Return the results as a tuple of tuples return ((and_result_decimal, and_result_binary), (or_result_decimal, or_result_binary), (xor_result_decimal, xor_result_binary), (not_result_decimal, not_result_binary)) # Ask the user for input num1 = int(input(&quot;Enter the first number: &quot;)) num2 = int(input(&quot;Enter the second number: &quot;)) # Call the binary_operations function and print the results and_result, or_result, xor_result, not_result = binary_operations(num1, num2) print(&quot;AND result: decimal =&quot;, and_result[0], &quot;, binary =&quot;, and_result[1]) print(&quot;OR result: decimal =&quot;, or_result[0], &quot;, binary =&quot;, or_result[1]) print(&quot;XOR result: decimal =&quot;, xor_result[0], &quot;, binary =&quot;, xor_result[1]) print(&quot;NOT result: decimal =&quot;, not_result[0], &quot;, binary =&quot;, not_result[1]) . AND result: decimal = 2 , binary = 10 OR result: decimal = 58 , binary = 111010 XOR result: decimal = 56 , binary = 111000 NOT result: decimal = -11 , binary = b1011 . Bitwise operations are used in a variety of applications, particularly in low-level programming and computer science. Some common used of bitwise operations include:&gt; - Flag Management: Flags are used to keep track of the state of a system or a program. Bitwise operations can be used to set, clear, and toggle flags.&gt; - Bit Manipulation:Bitwise operations can be used to manipulate individual bits in a binary number. This is often used to extract specific bits from a number, set specific bits to a particular value, or flip the value of specific bits.&gt; - Masking:Masking is used to extract a specific subset of bits from a binary number. Bitwise operations are commonly used for masking, particularly in low-level programming.&gt; - Encryption:Bitwise operations can be used in cryptographic applications to scramble and unscramble data. One common application of bitwise operations in encryption is the XOR operation.&gt; - Graphics:Bitwise operations can be used in computer graphics to manipulate individual pixels on a screen. This can be used to draw shapes, change colors, and create special effects.&gt; - Networking:Bitwise operations are used extensively in networking applications, particularly in the handling of IP addresses and port numbers. . Binary to String Conversion . This program defines a string_to_binary function that takes a string as input and returns the binary representation of the string. The function uses a for loop to iterate over each character in the string. For each character, the ord function is used to get its ASCII code, which is then converted to binary using the format function with the &#39;08b&#39; format specifier to ensure that each binary number is 8 digits long. The resulting binary numbers are concatenated to form the final binary string. . # Function to convert a string to binary def string_to_binary(string): binary = &#39;&#39; for char in string: binary += format(ord(char), &#39;08b&#39;) # Convert the character to binary and append to the binary string return binary # Example usage word = input(&quot;Enter a word to convert to binary: &quot;) binary_word = string_to_binary(word) print(f&quot;The binary representation of &#39;{word}&#39; is {binary_word}&quot;) . The binary representation of &#39;word&#39; is 01110111011011110111001001100100 . Many programs use binary conversion, particularly those related to computer science, electrical engineering, and mathematics. Programs that rely on binary conversion include:&gt; - Networking: Programs that deal with network addresses, such as IP addresses and subnet masks, use binary conversion to represent and manipulate the addresses.&gt; - Cryptography:Programs that deal with encryption and decryption use binary conversion to encode and decode data.&gt; - Computer Hardware:Programs that interface with computer hardware, such as drivers and firmware, often use binary conversion to communicate with the hardware at the binary level.&gt; - Mathematical Applications:Programs that deal with complex calculations and mathematical analysis, such as statistical analysis or machine learning algorithms, may use binary conversion to represent large numbers or complex data sets.&gt; - Finance:Programs that deal with financial calculations and accounting may use binary conversion to represent fractional amounts or complex financial data. . Hacks . Take notes and answer the questions above. Make sure you understand the purpose and function of the xample programs. (0.9) . | Complete this quiz and attach a screen shot of your score below. If you missed any questions, explain why you got it wrong and write a short summary of your understanding of the content. (0.9) . | As your tangible, create a program that allows a user to input two numbers and an operation, converts the numbers to binary and performs the given operation, and returns the value in decimal values. (0.9) . | . Applying Binary Math - Calculator Hack . Calculators use binary math to perform arithmetic operations such as addition, subtraction, multiplication, and division.In a calculator, the binary digits are represented by electronic switches that can be either on or off, corresponding to 1 or 0 respectively. These switches are arranged in groups of eight to form bytes, which are used to represent larger numbers. When a user enters a number into a calculator, the number is converted into binary form and stored in the calculator&#39;s memory.To perform an arithmetic operation, the calculator retrieves the numbers from its memory and performs the operation using binary math. . For example, to add the binary numbers 1010 and 1101, the calculator would perform the following steps:&gt; 1. Add the rightmost digits, 0 and 1, which gives a sum of 1.&gt; 2. Move to the next digit to the left and add the digits along with any carry from the previous step. In this case, we have 1 + 0 + 1, which gives a sum of 10. The carry of 1 is then carried over to the next digit. . Repeat step 2 for the remaining digits until all digits have been added. | The result of the addition in this example is the binary number 10111, which is equivalent to the decimal number 23. | Similarly, subtraction, multiplication, and division are performed using binary math. The algorithms for these operations are based on the same principles as those used in decimal arithmetic, but with binary digits and powers of 2 instead of decimal digits and powers of 10. . def binary_math(num1, num2, operator): # Write your calculator function here # Ask the user for input num1 = int(input(&quot;Enter the first number: &quot;)) num2 = int(input(&quot;Enter the second number: &quot;)) operator = input(&quot;Enter the operator (+, -, *, /): &quot;) # Call the binary_math function and print the result result = binary_math(num1, num2, operator) print(&quot;Result:&quot;, result) . Result: 13.5 .",
            "url": "https://nighthawkcoders.github.io/APCSP/2023/04/02/BinaryMath.html",
            "relUrl": "/2023/04/02/BinaryMath.html",
            "date": " • Apr 2, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Week of 03-27, Hashmaps",
            "content": "Plans Week 28 . Monday: Live Review - Space/Time, MCQ Test #4 | Tuesday: Work Day | Wednesday: Data Structures: Hashmaps, Sets, Hash Tables, Hashing and Collisions | Thursday: Work Day | Friday: Work Day | . Scoring . Notes and questions answered for Hashmaps (.9) | Project (.9) | MCQ Test #4 | . Look ahead .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/28",
            "relUrl": "/points/28",
            "date": " • Mar 27, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Week of 03-20, Space and Time Complexity",
            "content": "Plans Week 27 . Monday: Live Review 2.4 | Tuesday: Form Teams for Project | Wednesday: Data Structures: Space and Time Complexity and Big Oh Notation | Thursday: Work Day | Friday: MCQ Test #4 | . Scoring . Notes and questions answered for Space and Time Complexity (.9) | Plan for improvement for Final Project | Big Idea 2 Quiz (.9 for &gt; 50%) with test corrections Must score &gt; 90% for .9+ | . | . Look ahead .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/27",
            "relUrl": "/points/27",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Big Teams",
            "content": ". Agile Development . It has been said: if you want to produce the same result, do the same thing over and over again. Well, this Teacher thinks it is time for a change. Thus, we are going to scale our Agile Development process to slightly larger teams. . EOY project . Objective of each presentation Teach key Data Structure / AP Content. Here are some of the Teacher ideas. . Build a learning site, using Full Stack capilities. | Login and Identification is not be required initially but it will be taught before EOY. Learning site should be specific to user. | User should be able to interact with your Web Site and learn a key CompSci topic | Topics should come from materials we have learned from the year, they should enhance or improve Teacher topics, adding more depth, your specific interests, and creativity. | Topics should have a Teaching system to conduct a lesson, lab to be performed, and plan for hacks/grading. | Topics should have Web based presentation and interaction, this portion will be really important at N@tM where you will be showing you topic/learnings for about 3 minutes. | Topic Options Developing Frontend/Backend Application (Big Idea 1). Define how to get started with Python Development and APIs. Improve on 1st trimister curriculm and add visualization to these concepts. Setting up machines with Conda Scripts | Setting up GitHub Pages with FastPages features | Buiding requirements and pull requests in GitHub | Fetching and filtering content using JavaScript, HTML, CSS | Developing Backend 3rd Party APIs with analysis and cleaning Python, Flask, Pandas | . | A System / Guide to adding data related to user (Big Idea 2). Build a system to allow key informaton exchange as in most Social Media applications. Blogging and Direct Messaging. | Adding Images Uploads and customization, Frontend and Backend (some code and hacks to be provided) | . | Data Analysis including Numpy and Pandas (Big Idea 2). Learn something that is a hot technlogy. Looking for deeper analysis, like predictive analysis | Here is Handwritting Recogonition and resources Tensor Flow, Pandas, Numpy | . | A Guide to Binary Math, truth tables and logic (some code and hacks to be provided) (Big Idea 2). Teach these concepts through visualization. Building Simulations/Interactions using Binary Math | Learning/Teaching about key usages of binary in Computer Science | . | Data Structures including List, Dictionaries, 2D arrays and Iteration (Big Idea 3). Teach these concepts by visualization. Building Simulation/Interaction using Lists and Iteration | Building or improving on previous lessons and topics | Storing List and Dictionary content in Databases | . | A Guide to SASS and and building a customized Front End (some code and hack to be provided) (Big Idea 3). Become more expert in Design. Includes a Guide and steps on customizing Themes and Layouts | Includes a Guide to building a JavaScript Game or JavaScript application | . | Devops Guide to Setting up your Development Environment (Big Idea 4). There is a big need here for next years planning on systems. Become more expert in Linux. Learn how to work entirely in the cloud. KASM on EC2 (Virtual Desktop) | DNS and setting up nighthawk service | AWS and Deployment, Docker, Nginx improvements | Advanced Security Certbot, Cross-origing Security advancemnts | Transition from SQLite to AWS Databases (RDS, DocumentDB) | . | . | . Note, you can deviate from these topics by producing and getting approval on an outline with teacher. | . Agile and Roles . We will deviate from the picture slightly. . Every group of 5 - 7 will have a Product Owner/Manager, these people will be final say on requirements for the project. | Every group of 5 - 7 will have a Technical Lead / DevOps Lead. These people will guide team in technical task, according to Product Owner requirements. They will provide guideance or starter code for everyones tasks. They will ask Teacher to assist on technical research or clarifications on things team is having trouble solving. | Each group of 5 - 7 will have a Scrum Master, and there will only be one Scrum Master for entire team. These people will alert Product Owner, Technical Lead or Teacher of an obstacles in getting work done. | Remaining 2 - 4 Developers, roles of Front End, Back End, or topic expert will be given. | Roles are not final and adaptations could be made through the trimester to promote function. Everyone needs to CODE, CODE, CODE!!! | . Purpose and Timeline . AP Exam Prep and Night of the Museum Showcase . Project should re-teach your topic to your peers in preparation of the AP Exam. | Project should be complete by April 24 to be presented to the class. | Project ideas or concepts could be used to enhance or update your CPT project | Project can be improved upon after the AP Exam to be presented to visitors at Night of the Museum | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2023/03/20/HM-teams.html",
            "relUrl": "/2023/03/20/HM-teams.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Week of 03-13, Extracting and Using Data",
            "content": "Plans Week 26 . Monday: Live Review 2.2, 2.3 | Tuesday: 2.4 Using Programs with Data A | Wednesday: Work Day | Thursday: 2.4 Using Programs with Data B | Friday: Big Idea 2 Quiz | . Scoring . Build copies of Notebooks with answers/comments for all questions and hacks in 2.4a and 2.4b. Debugging screenshoots showing understanding of key Objects. (.9+) | Create your own Jupyter Notebook, using your own table. (.9) | Create Menu/Tester with all CRUD operations, including Delete and Update). (.9) | . Look ahead . Making project improvements based on the lessons of the last 2 weeks .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/26",
            "relUrl": "/points/26",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Week of 03-06, Data Compression and Image Lab",
            "content": "Plans Week 25 . Kickoff College Course . Monday: Minimum Day, Review 2.2 | Tuesday: Present Early Seed award, 2.2 Data Compression and Image Lab | Wednesday: Work Day | Thursday: 2.3 Extracting Information from Data | Friday: Work Day | . Scoring . Notes and questions answered for 2.2 and 2.3 (.9) | Complete Hacks for 2.2 and 2.3 (.9) Must incorparate ideas from 2.2 or 2.3 into your Final Project for .9+ | . | MCQ Test #3 (.9 for &gt; 50%) with test corrections Must score &gt; 90% for .9+ | . | . Look ahead . Continuing to use Pandas to look at data .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/25",
            "relUrl": "/points/25",
            "date": " • Mar 6, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Flask Security using JSON Web Tokens (research reqd)",
            "content": "Flask Security using JSON Web Tokens (JWT)) . Geeks | Reference | Real Python | . JWT concepts via ChatGPT with added illustrations . To implement a JWT-based authentication system with a JavaScript frontend and a Python Flask backend, you can follow these steps: . JSON Web Token (JWT) is a popular way to authenticate users in a web application. It is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is digitally signed using JSON Web Signature (JWS). Here is an example of how you might use JWT for authentication in a JavaScript application: . Frontend: In the JavaScript frontend, you can use the fetch API to send a request to the backend with the user credentials. The client sends a login request to the server with the user’s credentials (e.g., username and password). On a successful login, the backend returns a JSON Web Token (JWT) that the frontend can store in local storage. Frontend/Client/Origin: https://myclient.github.io | Backend/Server/Host: flask.nighthawkcodingsociety.com | . | Backend: On the Python Flask backend, you can write an API endpoint that accepts the user credentials, verifies them, and returns a JWT. You can use a library such as PyJWT to encode and decode the JWT. If the credentials are valid (CORS, cross-site, etc), the server generates a JWT and sends it back to the client. Here ae some samples of required credentials. Sec-Fetch-Mode: cors | Sec-Fetch-Site: cross-site | . | Frontend: The client stores the JWT in a cookie. For subsequent requests, the frontend can send the JWT in the Authorization header, allowing the backend to verify the authenticity of the request. Here is cookie in Chrome Inspect properties | Sample Cookie. jwt=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqbTEwMjFAZ21haWwuY29tIiwiZXhwIjoxNjc1ODA0MTg2LCJpYXQiOjE2NzU3ODYxODZ9.rHoLxTcBJOBv36gH5qNI1VhgGv2Jub1OPtpddf1-fHd84BcL5MeGxiBhi2M0MpEJcuhTjeC2TYWVaOjT7ek0tg; Path=/; Max-Age=3600; Expires=Tue, 07 Feb 2023 17:09:46 GMT; Secure; HttpOnly; SameSite=None; Secure | . | Backend: On the backend, you can write code that checks the JWT in the Authorization header on every incoming request. If the JWT is valid, the backend determine the identity of the user and allows the request to proceed. Here is successful response. | . | Frontend: When the user logs out, the frontend needs to remove the JWT. | A JWT consists of three parts, separated by dots (.). The first part is the header, which specifies the algorithm used to sign the JWT (e.g., HS256). The second part is the payload, which contains the claims. The third part is the signature, which is used to verify that the sender of the JWT is who it claims to be and to ensure that the message wasn’t changed along the way. . It is important to use HTTPS when transmitting JWTs to ensure that the JWT is not intercepted by an attacker. It is also a good idea to use short-lived JWTs (e.g., with an expiration time of one hour) and to refresh them frequently to reduce the risk of unauthorized access. . Storing JWT . There are a few different options for storing a JWT in a JavaScript application: . Cookies: You can store the JWT in a cookie and send it back to the server with each request. This is a simple and widely-supported option, but it has some limitations. For example, you can’t access cookies from JavaScript on a different domain, and some users may have cookies disabled in their browser settings. | Local storage: You can store the JWT in the browser’s local storage (localStorage) or session storage (sessionStorage). This option allows you to access the JWT from JavaScript on the same domain, but it is vulnerable to cross-site scripting (XSS) attacks, where an attacker can inject malicious code into your application and steal the JWT from the storage. | HttpOnly cookie: You can store the JWT in an HttpOnly cookie, which is a cookie that can only be accessed by the server and not by client-side JavaScript. This option provides some protection against XSS attacks, but it is still vulnerable to other types of attacks, such as cross-site request forgery (CSRF). | ChatGPT says … It is generally recommended to use a combination of options to provide the best security for your application. For example, you could store the JWT in an HttpOnly cookie and also in local storage, and use JavaScript to send the JWT from local storage to the server with each request. This way, you can still access the JWT from JavaScript on the same domain, while also protecting against XSS attacks. . However, for implementation we we will use ** #3 HttpOnly Cookie **. . Key Configuration Areas . Nginx configuration snippet (Client to this Server): . Nginx. Focus on add_header in preflight section that allow cross domain (github.io) to access server. java location / { proxy_pass http://localhost:8085; . # Preflighted requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Credentials&quot; &quot;true&quot;; add_header &quot;Access-Control-Allow-Origin&quot; &quot;https://myclient.github.io&quot;; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-MaxAge&quot; 600; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Content-Type, Authorization, x-csrf-token&quot;; return 200; } } . Python. JWT / Authenticate API . Python. Build an API to respond with a Cookie. This will have type, path, age, and allow for cross-origin (sameSite). . Response Cookie: {“jwt”, jwt} | HTTP Only: true | Secure: true | Path: “/” | Max Age: 3600 | Same Site: “None, Secure” / | . Python. Security Config . Setup access control credentials . “Access-Control-Allow-Credentials”, “true” | “Access-Control-Allow-ExposedHeaders”, “*”, “Authorization” | “Access-Control-Allow-Headers”, “Content-Type”, “Authorization”, “x-csrf-token” | “Access-Control-Allow-MaxAge”, “600” | “Access-Control-Allow-Methods”, “POST”, “GET”, “OPTIONS”, “HEAD” | AllowedOrigins: “https://myclient.github.io, http://localhost:4000” | . Authenticate with JWT in a JavaScript application: . This example sends a POST request to the /authorize endpoint with the user’s credentials in the request body. If the login was successful, the server will return a 200 OK response with the JWT set to Application properties. . /// URL for deployment var url = &quot;https://flask.nighthawkcodingsociety.com&quot; // Comment out next line for local testing // url = &quot;http://localhost:8085&quot; // Authenticate endpoint const login_url = url + &#39;/authenticate&#39;; function login_user(){ // Set body to include login data const body = { email: document.getElementById(&quot;uid&quot;).value, password: document.getElementById(&quot;password&quot;).value, }; // Set Headers to support cross origin const requestOptions = { method: &#39;POST&#39;, mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;no-cache&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;include&#39;, // include, *same-origin, omit body: JSON.stringify(body), headers: { &quot;content-type&quot;: &quot;application/json&quot;, }, }; // Fetch JWT fetch(login_url, requestOptions) .then(response =&gt; { // trap error response from Web API if (!response.ok) { const errorMsg = &#39;Login error: &#39; + response.status; console.log(errorMsg); return; } // Success!!! // Redirect to Database location window.location.href = &quot;/APCSA/data/database&quot;; }) } . You can then use the JWT for authentication in subsequent fetch requests as the browser sends JWT in the Authorization header. Here is an example, but there is ** Nothing Unique ** in this example, as client/browser send authorization to server, just make sure to capture errors. . // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare URL var url = &quot;https://flask.nighthawkcodingsociety.com/api/person/&quot;; // Uncomment next line for localhost testing // url = &quot;http://localhost:8085/api/person/&quot;; // set options for cross origin header request const options = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;include&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39;, }, }; // fetch the API fetch(url, options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors and display if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will contain json data response.json().then(data =&gt; { console.log(data); for (const row of data) { // tr and td build out for each row const tr = document.createElement(&quot;tr&quot;); const name = document.createElement(&quot;td&quot;); const id = document.createElement(&quot;td&quot;); const age = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.name; id.innerHTML = row.email; age.innerHTML = row.age; // this build td&#39;s into tr tr.appendChild(name); tr.appendChild(id); tr.appendChild(age); // add HTML to container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err + &quot;: &quot; + url; tr.appendChild(td); resultContainer.appendChild(tr); }); . Hacks . This is first time that a nighthawkcoding society apps are under JWT. There are some best practices, but these are simply preliminary thoughts. These can be done in your project or on mine. . GitHub Pages Application Make a Login and SignUp option in upper left corner of page. To handle this well it may require some them adjustment. Login or Name should alway be displayed in upper right corner, review csa.nighthawkcodingsociety.com for example. | Only block or present login/signup page when someone fails on a fetch of something that is unauthorized. | . | Flask Application Add Roles to authentication | Bring JavaScript or Flask/Jinja2 Admin operations into this page. Some Jinja2 exists in the flask_portfolio project, | . | Blog or Video on your successes and how you got there. | . Hack Helpers for Flask . Additional user and security elements. . Flask-Security is a Flask extension that provides many security features, including user authentication and authorization. It allows you to easily integrate user authentication into your Flask application by providing a set of pre-built views and forms for login, registration, password reset, and more. | To use Flask-Security with your own user database, you will need to configure the extension to use your database instead of the default SQLite database. Here are the steps you can follow to configure Flask-Security to use your own user database: | Install Flask-Security and the necessary database driver. For example, if you are using PostgreSQL, you would install Flask-Security and the psycopg2 driver with the following commands: | Add to requirements.txt: Flask-Security, psycopg2-binary, Flask-JWT-Extended | Add Flask-Security extension in your Flask application: __init__py | . from flask_security import Security, SQLAlchemyUserDatastore from flask_sqlalchemy import SQLAlchemy from flask_jwt_extended import JWTManager, create_access_token, jwt_required app = Flask(__name__) app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = &#39;your_database_uri&#39; app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SECRET_KEY&#39;] = &#39;your_secret_key&#39; app.config[&#39;JWT_SECRET_KEY&#39;] = &#39;your_secret_key&#39; jwt = JWTManager(app) db = SQLAlchemy(app) security = Security(app, SQLAlchemyUserDatastore(db)) . This initializes the extension with a SQLAlchemyUserDatastore, which is responsible for interacting with your database. . | Define your User and Role models in your application. These models should inherit from the SQLAlchemy db.Model class and implement the necessary fields and methods required by Flask-Security. For example: RoleMixin and UserMixin . | . class Role(db.Model, RoleMixin): id = db.Column(db.Integer(), primary_key=True) name = db.Column(db.String(80), unique=True) description = db.Column(db.String(255)) class User(db.Model, UserMixin): id = db.Column(db.Integer, primary_key=True) email = db.Column(db.String(255), unique=True) password = db.Column(db.String(255)) active = db.Column(db.Boolean()) confirmed_at = db.Column(db.DateTime()) roles = db.relationship(&#39;Role&#39;, secondary=roles_users, backref=db.backref(&#39;users&#39;, lazy=&#39;dynamic&#39;)) . Create a SQLAlchemyUserDatastore and initialize the Flask-Security extension: | . user_datastore = SQLAlchemyUserDatastore(db, User, Role) security = Security(app, user_datastore) . The create_access_token() function creates a JWT with the user’s ID as the token’s identity. You can customize the contents of the token by passing additional parameters to the function. For example, to include the user’s email in the token, you can do: | . access_token = create_access_token(identity=user.id, additional_claims={&#39;email&#39;: user.email}) . Define a route for user authentication, where the user provides their email and password in the request body. In this example, we’ll assume that the email and password are stored in the User model we defined earlier. | . from models import User @app.route(&#39;/login&#39;, methods=[&#39;POST&#39;]) def login(): email = request.json.get(&#39;email&#39;, None) password = request.json.get(&#39;password&#39;, None) user = User.query.filter_by(email=email).first() if not user or not user.check_password(password): return jsonify({&#39;message&#39;: &#39;Invalid credentials&#39;}), 401 access_token = create_access_token(identity=user.id) return jsonify({&#39;access_token&#39;: access_token}), 200 . Use the @login_required and @roles_accepted decorators to secure endpoints in your Flask views. The @login_required decorator ensures that only authenticated users can access the endpoint, while the @roles_accepted decorator ensures that only users with the specified roles can access the endpoint. | . @app.route(&#39;/protected&#39;, methods=[&#39;GET&#39;]) @jwt_required() def protected(): return jsonify({&#39;message&#39;: &#39;This is a protected endpoint!&#39;}) @app.route(&#39;/admin&#39;) @roles_accepted(&#39;admin&#39;) def admin(): return &#39;This is a secured endpoint for users with the admin role only!&#39; . Restrict access to the admin endpoint to users with the admin role, you need to create a role with the name admin and assign it to the appropriate user(s): | . # create an admin role admin_role = user_datastore.create_role(name=&#39;admin&#39;, description=&#39;Administrator&#39;) # create a user with the admin role admin_user = user_datastore.create_user(email=&#39;admin@example.com&#39;, password=&#39;password&#39;) user_datastore.add_role_to_user(admin_user, admin_role) # commit the changes to the database db.session.commit() . To implement authentication and return a JWT (JSON Web Token) in Flask, you can use the Flask-JWT-Extended extension. Here’s an example of how to implement authentication and return a JWT: | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2023/02/28/PBL-jwt_challenge.html",
            "relUrl": "/2023/02/28/PBL-jwt_challenge.html",
            "date": " • Feb 28, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "Week of 02-27, Performance Task Scoring, peer reviews",
            "content": "Plans Week 24 . Peer Review and Silent Reviews . Monday: Pick CPT crossovers. 1 minute presentations to class. CPT Scoring, each team crossover score members from two other tables. Every individual should perform two scores with comments. | Tuesday: CPT project finalization. Prepare Silent Review Ticket for Teacher on entire project with Team and Individual Scores. Show average from Crossover scoring. | Wednesday: Finals | Thursday: Finals | Friday: Finals (MCQ Test #3 Due next Tuesday) | . See Canvas for more N@tM Final Project Scoring. . Look ahead . Data Structures 1 - this class will be focussing in on data and key algorithms commonly used with data. . Preview Week 25 . Start Data Structures 1 .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/24",
            "relUrl": "/points/24",
            "date": " • Feb 27, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Week of 02-13, N@tM and complete classroom coding hours for CPT",
            "content": "Plans Week 23 . Big Coding week, focus on completing issues . Monday: Coding hour 8. See canvas for points and reviews. | Tuesday: Coding hour 9. | Wednesday: Coding hour 10. | Thursday: Coding hour 11. N@tM | Friday: Coding hour 12. Blog a draft of college board write-up. Create a video to demo runtime. | . See Canvas for more N@tM Final Project Scoring. . Look ahead . Finals Week, capture the moment activities. Write-up and video are required, these will be peer-2-peer reviewed. Reviews will be graded 1st week of trimester 3. .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/23",
            "relUrl": "/points/23",
            "date": " • Feb 13, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "Big Idea 5.6 Safe Computing",
            "content": "Safe Computing . Personal Identifiable Information (PII) . As we create a Web Site and post information we are adding to the Searchable PII. However, there is a dichotomy as a site like LinkedIn is a place where we want to be known for our accomplishments. But be aware, the person that looks at your LinkedIn will, most likely, look at things like TikTok, Instagram or Facebook. . PII considerations . Things that will be known by everyone: Name, Email (suggest a junk email), Picture, High School attended, College Attended, Properties you own, State-City of residence, all State-City of previous residence, Credit Reports, … | Gray area items, more cautious: Birth date, Place of Birth, Street Address, Phone Number, Maiden names of Mother and Grandmother, Drivers License Number, … | Things that you should strive to keep absolutely secret: Credentials for Access, Two-Factor Authentication on Financial accounts, Social Security Number, Tax records, … | . Beware, Establish practices for your own Safety . Multi-factor authentication often requires you to enter a code that has been texted or emailed to you. Other types of authentication are biometrics (finger print or facial recognition). | Malware is often sent in attachments to things in email. Often they request you to click on an attachment and it starts the process of adding a virus to your computer. | Phishing is where unknown sources try to entice you into a response, like click here and receive $500. Often such systems impersonate someone like Amazon asking for login information. Be careful to look closely at source of email (ie amzn.com vs amazon.com). | . Factors to Increase Security of System (recommend Watch 5.6 Video 2) . Most of my financials or critical systems use Multi Factor authentication | Biometrics is something that is used secure systems, fingerprints or facial recognition | Symmetric encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. | Asymmetric cryptography, also known as public-key cryptography, is a process that uses a pair of related keys – one public key and one private key – to encrypt and decrypt a message and protect it from unauthorized access or use. | SSL Uses both Asymmetric and Symmetric Encryption | . Nefarious Uses of Internet . A Virus or Malware compromise security, they are opposite of increasing security. | Phishing is a way to get a Virus on your machine, or a way to get you to input PII. | After a Virus or being compromised by Phishing it is advised to review all of you PII vulnerabilities. | . Blog Post Reflection: . Describe PII you have seen on project in CompSci Principles. | What are your feelings about PII and your personal exposure? | Describe good and bad passwords? What is another step that is used to assist in authentication. | Try to describe Symmetric and Asymmetric encryption. | Provide an example of encryption we used in AWS deployment. | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. |",
            "url": "https://nighthawkcoders.github.io/APCSP/safe",
            "relUrl": "/safe",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "Big Idea 5.5 Legal and Ethical Concerns",
            "content": "Cost of Free . In Mr Mortensen’s most recent years in industry, there were many Lawyers making a profession on Patents and how they can be impacted on General Public Licensing (GPL). . Qualcomm makes its money on patents, if you use GPL software you could be voiding your rights to charge for software and patents. Open Source by nature, specifically GPL, says any derivative work is free and code should be shared. Qualcomm wants all derivative work to require a royalty payment payment, also anyone who uses the idea/patent pays royalty. . . From synopsis.com, “Black Duck® software composition analysis (SCA) helps teams manage the security, quality, and license compliance risks that come from the use of open source and third-party code in applications and containers.” Qualcomm has had 20 technical jobs and 3 lawyers analyzing all the code produced, analyzing code for Open Source inclusion, and analyzing impact of such licenses to its ability to charge royalties for the use of their Patents. . This may sound like a simple problem, but think about the Students of Today, often they are given an assignment and instead of developing their own algorithm they opt to copy something off the internet. Well, don’t think the Workers of Today are entirely different. In summary, it is important to know the type of software license you are copying, it could impact billions of dollars in business. . License Communities, License Types Guide . Adding and selecting a license GitHub instructions. An author, a licensor, needs to determine a license. This may result in asking… Do I want to waive default copyright in reuse? | Do I want to allow derivative works or not? | Do I want to require all derivative code to be shared? | | . Creative Commons Zero v1.0 Universal . The Creative Commons CC0 Public Domain Dedication waives copyright interest in a work you’ve created and dedicates it to the world-wide public domain. . Open Source MIT License . This license in friendly to someone like Qualcomm! This allows using code freely and making and distributing closed source versions. Typically, the author of software with MIT License want credit. Credit could be as simple as adding the authors name in comments. . Close source means the GitHub project could be private. . Open Source GPL License . The GNU GPLv3 also lets people do almost anything they want with your project, except distributing closed source versions. . Open source means the GitHub project must be public. . For a company like Qualcomm, they are required to institute many practices to deliver their code in parts (public vs private). Isolating their patent and secret code, far away from the GPL or Creative Commons code. In fact, a company that is protecting their patents may need to division engineers, split distribution, not deploy to public, etc. After distribution, the customer of the Patented (ie Qualcomm) product is required to put the public/private domain code back together again. . Legal and Ethically . We need to comply with the terms of licenses. We need to cite sources. (I am particularly bad with internet pictures. However, in the picture of the Black Duck above I am actually advertising the Company). . As consumers, we have become aware that Music and Movie companies own content. These companies build DRM (Digital Rights Management) software to protect, play, and/or distribute content. Most of us buy subscriptions to services. However, some figure out ways to bypass systems and allow download. Often we will see these sites disappear, as they are illegal. . In software, it can be more complicated to understand all the Creative Commons licenses and its impact to our own ideas and businesses. Mostly, if we use things in class, there is “no problem” with Open Source as our usage is considered educational use. Creative Commons software has enabled amazing innovation as we are able to do so much for free, as we have done in this class. However, Individuals and Companies are required to figure out techniques and business models in order to use Open Source software according to terms of license. . Long ago, I remember being amazed that Red Hat was not selling its Linux distribution, they were giving away the software. They had to! This was in the terms of the licenses they were using, GPL. However, as an early pioneers in Linux distributions, they established a business model around buying their support agreement. They rose in fortune, became a public company, and had an amazing Initial Public Offering (IPO). Many, many vendors have followed the Red Hat model in building free distributions and establishing unique business models. Qualcomm figured out how to mix Patent and GPL businesses and have flourished since abandoning all proprietary, to include Android in its very complicated business model using Android. . Creative Commons, Open Source are free terminologies! However, businesses will not last without income. And today, businesses won’t last without engineers pulling Open Source software. . Blog Post Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. |",
            "url": "https://nighthawkcoders.github.io/APCSP/legal",
            "relUrl": "/legal",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Week of 02-06, Continuous Integration / Continuous Delivery starts.",
            "content": "Plans Week 22 . Student work on Issues from projects. DevOps engineer puts CI/CD processes in place. . Monday: Live Review - Scrum Master + Coding Hour 5.a | Tuesday: Live Review - Individuals + Coding hour 5.b | Wednesday:Tech Talk: CI/CD on Flask and Unit 5.5 and 5.6 | Thursday: Work Day - Coding hour 6 | Friday: Work Day - Coding hour 7. Update of review tickets with tangible artifacts per person. | . Look ahead . Big Coding week, focus on completing issues . Monday: DevOps, Scrum Master, Frontend, Backend Live Reviews | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/22",
            "relUrl": "/points/22",
            "date": " • Feb 6, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "Big Idea 5.4 Crowdsourcing",
            "content": "Crowdsourcing . The more you crowdsource, the more you reach beyond your own community, the more likely you will reduce Computer Bias. Crowdsourcing provides the ability to obtain shared information, share information, and participate in distributed computing. . . Evidence of Crowdsourcing . Wikipedia has a ton of information from crowdsourcing, see Wikipedia definition on crowdsourcing. It can have inaccuracies, but when it does it often is corrected through a self-policing community. Reviews and many authors have made this, according to many, better than “official” information. | Crypto currency and associated block chain. All exchanges of money are validated at least 3-times by independent miners. If there is a flaw in the independent calculations the process is checked and performed again. Innovation of crypto crowdsourcing has impact on how governments think about currency. Additionally, block chain algorithms are being considered for many other crowdsourcing most private data (ie medical records). | COVID data, it is easy to recognize areas that are contributing and not contributing. This data has impacted all our lives and decision we make on attending public events, flying on planes, or wearing masks. The community of data and analysts will spawn many new ways of thinking about data that impacts lives. | . Obtaining Data via Crowdsourcing (Crossover Group Up, ~10 minutes) . We have all experienced Crowdsourcing by using external data through API’s, namely RapidAPI. This data has influenced how we code and shown possibilities in obtaining and analyzing data. Discuss APIs you have used. | We have all participated in code Crowdsourcing by using GitHub. Many of you have forked from the Teacher repository, or exchanged code with fellow students. Not only can we analyze GitHub code, but we can obtain profiles and history about the persons coding history. What is the biggest discovery you have found in GitHub? | Kaggle datasets for code and science exploration. The avenue of data points us youtube or netflix channels. Analyzing crowd data helps us make decisions. Exam top 10 to 20. Did you see anything interesting? | . Hacks . Think of a use case for crowdsourcing in you project … . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? | What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? | What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/crowdsourcing",
            "relUrl": "/crowdsourcing",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "Big Idea 5.3 Computing Bias",
            "content": "Computer Bias . Earlier we talked about beneficial and harmful effects of computing. Such conversation often lead to conversations on computer bias, particularly when bias creates a harmful effect. . As programmers, you now have the possibility of creating algorithms. It has been said, “Humans are error-prone and biased”. So, does that mean algorithms and the computers they run on are better? . . Intentional or Purposeful bias (Crossover Group Up, 10 minutes) . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business? | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) | . As Pairs (5 minutes) . Watch the video… HP computers are racist | Come up with some thoughts on the video and be ready to discuss them as I call on you. Here are some ideas… Does the owner of the computer think this was intentional? | If yes or no, justify you conclusion. | How do you think this happened? | Is this harmful? Was it intended to be harmful or exclude? | Should it be corrected? | What would you or should you do to produce a better outcome? | . | . Hacks . Write summary/thoughts/conclusions from each of the exercises above. Focus on avoiding Bias in algorithms or code you write. .",
            "url": "https://nighthawkcoders.github.io/APCSP/bias",
            "relUrl": "/bias",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Week of 01-30, Scrum Board and Python Data Tools.",
            "content": "Plans Week 21 . Teams continue in working on CPT projects. . Monday: No School | Tuesday: Scrum Master Review on Practice MCQ and Unit 5.1 and 5.2 Hacks | Wednesday: AP/Tech Talk: Unit 5.3 and 5.4 | Thursday: Work Day - Coding hour 3 | Friday: Work Day - Coding hour 4 | . Look ahead . Big Coding week, focus in on Deployment . Monday: Team review on hacks from Tech Talks, individual check-in on issues/scrum board | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/21",
            "relUrl": "/points/21",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Big Idea 5.2 Digital Divide",
            "content": "Digital Divide . Deals with “To Have and Have Not” in relation to Computers, Internet, or Technology in general. . Poorer or rural areas in America and other countries may have less or little access to Technology | Some countries may have different or restricted access, for instance China and USA may have divide in service allowed in their countries. | . Contributing factors to divide are socioeconomic (money), geographic (location), demographic (education, nationality, religion, and ethnicity) . Individual may have less access to latest updates, thus may be working on older generations of computers | Religious groups like the Amish choose not to use technology | San Diego county has regional distinction in many categories between Northern and Southern population, usually indicated by Interstate 8. | Sunnyvale CA has been know as technology hub of influence for the entirety of the United States. | . At the start of pandemic 90,000 school children in New Jersey did not have access to computers capable of distance learning. . . In education equity requires school to provide materials like Computers or Chrome books. Here is some counter thinking. . In our environment, Del Norte CS preference is that you have your own computer so that you can work away from school. | In our classroom, internet blockers at router and lack of admin password can make school computer less productive than personally owned computer. | Education is often concerned about cyberbullying, sexting, or student privacy. What do you think of investments being made in protection versus investments being made in technology education? Are digital fears expanding digital divide? | . Blog Post Reflection – Digital Empowerment . How does someone empower themself in a digital world? | How does someone that is empowered help someone that is not empowered? Describe something you could do at Del Norte HS. | Is paper or red tape blocking digital empowerment? Are there such barriers at Del Norte? Elsewhere? | .",
            "url": "https://nighthawkcoders.github.io/APCSP/divide",
            "relUrl": "/divide",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Big Idea 5.1 Beneficial and Harmful Effects",
            "content": "Key Highlights and questions from College Board Videos . . UAVs/Drones are used in search &amp; rescue, aerial photography, and for hobbies. However, there are many unintended usages. Also, there are many military usages. What do people think about drones? . | OpenAI and ChatGPT Google Disrupter, google needs to react | GitHub Copilot, real time code suggestion | Platform shift, money disrupter, revenue model for Google changes | Large amount of computer resources | Some schools are banning it | . | Dopamine plays a role in how we feel pleasure. Video games and Social media are shown to impact people chemically. However, statistically some people’s computer time may be greater than their sleep time. There are positives on games and social media. Name some? Here is something to think about and is related to the CB topic… At age 17, Anthony Rosner of London, England, was a hero in the World of Warcraft online gaming community. He built empires, led raids, and submerged himself in a fantasy world that seemingly fulfilled his every need. Meanwhile, his real life was virtually nonexistent. He neglected his schoolwork, relationships, health, even his hygiene. “I never saw my real friends. I gained weight, became lazy, and spent nearly all of my time slumped over my computer,” says Rosner, who played up to 18 hours a day, every day, for nearly two years. “When you become one of the top players in a game like World of Warcraft, tens of thousands of players are essentially under you, so you become like a virtual god” | For Rosner, gaming was detrimental. His grades suffered, he missed assignments, and he almost failed to complete his first year of college. After turning away from the game, Rosner found other sources of pleasure. He joined a gym, started DJing at his university, and became much more active socially. “I couldn’t believe what I had been missing,” he says. Ironically, World of Warcraft led Rosner to achieve his dream of making films. His documentary, IRL — In Real Life, chronicles his adventures and how he learned to break free from gaming. More than 1 million people worldwide have viewed his film, which can be seen on YouTube. It has been featured at film festivals, on TV, and in newspapers and magazines. | . | Automated telephone trees were designed to save employers money, but also reduce hold time for customers. Innovations in phone trees, voice recognition, or keypads often enables customers to find answers quickly. What are innovation you would like to see in phone tree? Will this phone tree transfer you to relevant department during office hours? Will it always enable you the opportunity for human response? | . Blog Post Reflection . Come up with three of your own Beneficial and corresponding Harmful Effects of Computing | Talk about dopamine issues above. Real? Parent conspiracy? Anything that is impacting your personal study and success in High School? |",
            "url": "https://nighthawkcoders.github.io/APCSP/benefits",
            "relUrl": "/benefits",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Week of 01-23, Half way CPT Classroom Presentations, MCQ Test.",
            "content": "Plans Week 20 . Teams prepare for Classroom presentation / Project Approval. . Monday: Live/Silent Reviews on API and Database assignment, CB MCQ test opened ‘till 8:30 AM Monday to 8:30 AM Tuesday | Tuesday: AP Unit 5.1 &amp; 5.2, work day | Wednesday: Work day - Coding hour 2 | Thursday: Classroom Presentation - Project Approval which includes Team/Ideation, 3-5 minutes per team | Friday: Classroom Presentation - Project Approval which includes Team/Ideation, 3-5 minutes per team | . Look ahead . Development on CPT Issues . Monday: Practice Test Review Ticket, Hacks from 5.1 and 5.2 | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/20",
            "relUrl": "/points/20",
            "date": " • Jan 23, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "Performance Task Scoring 3",
            "content": "Objective . Students will review performance tasks from last year. Using the rubric provided, students will score the submissions. . College Board Rubric . Submission 1 . Video . Written Response . College Board Scoring . Submission 2 . Video . Written Response . College Board Scoring . Submission 3 . Video . Written Response . College Board Scoring . Submission 4 . Video . Written Response . College Board Scoring . Hacks . Create a blog post with your score and reasoning for each performance task submission. Review the score given by the AP scorers and reflect: . on any discrepancies in your scoring versus the ap scoring | on what your program will need to fulfill all requirements | on the criteria and why a submission may have failed to meet the standard | .",
            "url": "https://nighthawkcoders.github.io/APCSP/ptscoring/3",
            "relUrl": "/ptscoring/3",
            "date": " • Jan 18, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Week of 01-16, API and Database Intro",
            "content": "Plans Week 19 . Teams work using Ideation and using last week and this weeks Tech Talks and Hacks, to form code to enable API/Control to connect to Database/Model. This week CPT designs should become stronger as student start CPT coding. . Monday: Silent Review: API and Database | Tuesday: Backend Tech Talk. Database/Model. | Wednesday: Perform Database/Model hacks/videos according to your project | Thursday: Backend Tech Talk. API/Control. | Friday: 1st Coding hour. Prepare for Project Approval Presentation or Tech Talk Hacks/Videos. | . Look ahead . Teams prepare for CPT presentation. . Monday live review which includes Videos of API and Database hacks, plus CB MCQ testing | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/19",
            "relUrl": "/points/19",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "Performance Task Scoring 2",
            "content": "Objective . Students will review performance tasks from last year. Using the rubric provided, students will score the submissions. . College Board Rubric . Submission 1 . Video . Written Response . College Board Scoring . Submission 2 . Video . Written Response . College Board Scoring . Submission 3 . Video . Written Response . College Board Scoring . Submission 4 . Video . Written Response . College Board Scoring . Hacks . Create a blog post with your score and reasoning for each performance task submission. Review the score given by the AP scorers and reflect: . on any discrepancies in your scoring versus the ap scoring | on what your program will need to fulfill all requirements | on the criteria and why a submission may have failed to meet the standard | .",
            "url": "https://nighthawkcoders.github.io/APCSP/ptscoring/2",
            "relUrl": "/ptscoring/2",
            "date": " • Jan 11, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "Database from JavaScript",
            "content": "View of User data . Name ID Actions .",
            "url": "https://nighthawkcoders.github.io/APCSP/c4.7/c7.0/c8.1/c8.6/2023/01/10/PBL-users_view.html",
            "relUrl": "/c4.7/c7.0/c8.1/c8.6/2023/01/10/PBL-users_view.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post31": {
            "title": "Week of 01-09, FE and BE Intro Tech Talks",
            "content": "Plans Week 18 . Teams work on ideation, research, FE, and BE code . Monday: Live Review, perform Performance Task 2 scoring. | Tuesday: Backend Tech Talk, focussing on Model and OOP using Python. | Wednesday: work day, perform Model and OOP hacks. | Thursday: Frontend Tech Talk. View/Frontend coding using JavaScript. | Friday: work day, perform View/Frontend hacks. Continue to ideate/plan project for Create Performance Task. Establish some technical plans for 4 or 5 features features. | . Look ahead . Student enable Control code to connect Frontend and Backend development for their Create Performance Task project. . Monday will be Silent Review focused on Hacks from Tech Talks | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/18",
            "relUrl": "/points/18",
            "date": " • Jan 9, 2023"
        }
        
    
  
    
        ,"post32": {
            "title": "UX, Midnight Theme and SASS",
            "content": "User Experience Design . At Qualcomm, I was involved in projects related to Customer Experience. In this design phase, Corporate User Experience designers would create concepts of what that system would look like. As a second phase, I would give those concepts to Frontend Designers that would put the concepts into code with motion. We are trying to simulate these steps through Markdown, a little HTML, images, etc. In this process, we can build a concept of a system, prior to having functional code behind the scenes, aka JavaScript, APIs, Backend. | . Build GitHub pages SASS files . Build and explore the output of scss. . | Build per instruction in Project README bundle exec jekyll serve -H 0.0.0.0 -P 4002 | . | After you do this, make sure .gitignore blocks ### Jekyll ### _site .sass-cache .jekyll-cache .jekyll-metadata . | Explore output CSS, for example look at customization for h1, h2, … _site/assets/css/style.css | . | Look at other assets, see all the work that goes into Style. Learn to leverage off of it. Learn to customize on top of it using SASS tips in the blog. | . Stylesheet Notes from Midnight Theme . Altering GitHub theme and adding custom styles: . Create a file called /assets/css/style.scss in your site | Add the following content to the top of the file, exactly as shown: @import &quot;minima&quot;; . | Add any custom CSS (or Sass, including imports) you’d like immediately after the @import line | Note: If you’d like to change the theme’s Sass variables, you must set new values before the @import line in your stylesheet. . Layouts Notes from Midnight Theme . If you’d like to change the theme’s HTML layout: . For some changes such as a custom favicon, you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template. | For more extensive changes, copy the original template from the theme’s repository(Pro-tip: click “raw” to make copying easier) | Create a file called /_layouts/default.html in your site | Paste the default layout content copied in the first step | Customize the layout as you’d like | Welcome to SASS . SASS helps process a SASS file and compile it like the usual CSS file. Using SASS let’s us leverage off of a lot of implementation that has already been performed, such as GitHub pages. But it also lets you more programmatically build CSS. . . SASS Prerequisites . Skip downloads section unless you have issues. . Downloads / Command Prompt Lines . Check for npm --version to verify install, or download node.js here (just download the LTS version). . | This line of code is just used to check that you actually have npm installed, if not run installer : npm --version . | Next you will use check for sass : npm view sass version . | Install sass if required : npm install -g sass . | . SASS Tips . Features / Functionality . As the great thing about scss is that it writes the css for you, making it much less tedious. There are many aspects as to why it actually simplifies the process. | . Aspect 1: Partials . Sass naturally transpiles all the .scss files directly. However, when you want to import a file, you do not need the file to be transpiled directly. Sass has a mechanism for this: If you start the filename with an underscore, Sass will not transpile it. Files named this way are called partials and they allow you to work in a much more organized space. | . Aspect 2: Defining Colors / Variables . Rather than retyping the hexadecimal values of each color every single time, you can define all of the ones you want to use in a partial and then just reference them with $[color] when you want to use it. However, make sure you import the partial into the scss file where you are going to use it in. $light: #f7f7f7; $dark: #222121; $lime: #00cc66; $orangeRed: #fb4b4e; $blue: #2541b2; . | Example shown here: .navbar { background: $light; // see how instead of having to retype the hexadecimal, I can just reference it like this WOWOW so COOL height: 80px; display: flex; justify-content: space-between; padding: 0.5rem calc((100vw - 1200px) / 2); z-index: 10; position: relative; . | . Aspect 3: Nested Styling . Another unique aspect about scss is that you can actually nest styles, so if you want an aspect like let’s say color to apply to everything you are working on for that portion of the html, you can actually nest the rest of the formatting, animations, etc within that definition. | Implementation shown here with the Hero section in student scss: .hero { background-color: $light; // see how the rest of the code is indented / nested within .hero &amp;__container { display: grid; grid-template-columns: 1fr 1fr; align-items: center; justify-items: center; margin: 0 auto; height: 90vh; z-index: 1; width: 100%; max-width: 1200px; padding-right: 24px; padding-left: 24px; @include tablet { // @include tablet and @include mobile will be explained next grid-template-columns: 1fr; height: 100%; } &amp;--left { width: 100%; line-height: 1.2; @include tablet { padding: 5rem 0; } @include mobile { line-height: 1.5; } } &amp;--left h1 { font-size: 4rem; color: $lime; @include mobile { font-size: 1.5rem; } } &amp;--left h2 { font-size: 4rem; color: $dark; @include mobile { font-size: 2rem; } } &amp;--left p { font-size: 2rem; color: $dark; margin-top: 1rem; font-weight: 700; @include mobile { font-size: 1.5rem; } } &amp;--btn { font-size: 1rem; background-color: $lime; padding: 14px 32px; border: none; border-radius: 4px; color: $light; margin-top: 2rem; cursor: pointer; position: relative; transition: all 0.3s; outline: none; } &amp;--btn a { position: relative; z-index: 2; color: $light; text-decoration: none; } &amp;--btn:after { // code animates home page button so that it transitions to red when hovered position: absolute; content: &#39;&#39;; top: 0; left: 0; width: 0; height: 100%; background: $orangeRed; transition: all 0.3s; border-radius: 4px; } &amp;--btn:hover:after { width: 100%; } &amp;--right { text-align: center; } &amp;--img { height: 100%; width: 100%; } } } . | You can see how this code works in tandem with the Hero section of the HTML, the class definitions are associated with every definition of styling coded above: | . &lt;!-- Hero HTML, each of the classes here correspond to what&#39;s defined above in the scss &lt;div class=&quot;hero&quot;&gt; &lt;div class=&quot;hero__container&quot;&gt; &lt;div class=&quot;hero__container--left&quot;&gt; &lt;h1&gt;College Apps Are Coming!&lt;/h1&gt; &lt;h2&gt;Be Prepared&lt;/h2&gt; &lt;p&gt;Sign up now to join the list.&lt;/p&gt; &lt;button class=&quot;hero__container--btn&quot;&gt;&lt;a href=&quot;#&quot;&gt;Sign Up&lt;/a&gt;&lt;/button&gt; &lt;/div&gt; &lt;div class=&quot;hero__container--right&quot;&gt; &lt;img src=&quot;images/img-2.svg&quot; class=&quot;hero__container--img&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; --&gt; . Aspect 4: Easily Change Formatting Based on Device . With the power of scss, you can more easily than ever change the formatting of your site based on which device a person is using. | Such can be done by defining the resolutions in a partial like here: | . &lt;!-- @mixin tablet { @media screen and (max-width: 768px) { @content; } } @mixin mobile { @media screen and (max-width: 280px) { @content; } } --&gt; . Then you can use @include to reference these resolutions and change the css/formatting based on the device like here: | . &amp;--left h1 { font-size: 4rem; color: $lime; @include mobile { // in this case the font size changes because it&#39;s mobile font-size: 1.5rem; } } &amp;--left h2 { font-size: 4rem; color: $dark; @include mobile { font-size: 2rem; } } . Aspect 5: Extending, Inheritance, and Calculations . In scss, you can also use @extend if you want certain classes to inherit attributes from previously defined classes, sort of similar to nesting inheritance (where the classes nested within inherit the attributes from outermost classes). An example is shown below: | . &lt;!-- %align-center { display: flex; align-items: center; } logo { color: $dark; cursor: pointer; text-decoration: none; font-size: 2rem; margin-left: 24px; @extend %align-center; //it&#39;s inheriting the above values for display and align:items } --&gt; . Furthermore, you can actually use math operators like multiplication, addition, subtraction and division in scss. In the code below I use it to extend the animation of a button: &amp;--btn:hover:after { width: 100% * 4; //makes the animation extend way farther, past the border of the button } . | . Supporting Videos . These are just some videos Charlie found that he thinks are helpful, click on the images to go directly to the videos! | . Hacks . All hacks related to SASS are with respect to design of your project(s) | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2023/01/05/PBL-midnight_sassy.html",
            "relUrl": "/2023/01/05/PBL-midnight_sassy.html",
            "date": " • Jan 5, 2023"
        }
        
    
  
    
        ,"post33": {
            "title": "Performance Task Scoring 1",
            "content": "Objective . Students will learn performance tasks requirements through the performance task examples from last year. Using the rubric provided, students will perform cross-over like grading on the different elements. . College Board Rubric . Submission 1 . Video . Written Response . College Board Scoring . Submission 2 . Video . Written Response . College Board Scoring . Hacks . Create a blog post with your score and reasoning for each performance task submission. Review the score given by the AP scorers and reflect: . on any discrepancies in your scoring versus the ap scoring | on what your program will need to fulfill all requirements | on the criteria and why a submission may have failed to meet the standard | . Example Table . Reporting Category | Student Score | College Board Score | Comments | . Program Purpose and Function | 1 | 1 | The student met the requirement because… | .",
            "url": "https://nighthawkcoders.github.io/APCSP/ptscoring/1",
            "relUrl": "/ptscoring/1",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post34": {
            "title": "Creative, Collaborative, and Quality Culture",
            "content": "Start with a Comment (Seed -0.2 to +0.1) . These next few weeks can be some of the most creative and productive education you will ever have in High School. Every person listening needs to get involved in this lecture by commenting in this blog… . Express, “What would you code given absolute freedom? | What would motivate you to be productive each day given the freedom to code what you want? | How would you measure success in your team? | In a project, most students are more motivated if the project seems useful, unique, and has an interested consumer. How will you maintain motivation? | . Quality Method and Mantra . Agile fits in the process of building a software engineering culture to enable you to work on applications of interest and purpose. Agile development can help teams prioritize and deliver software while being creative… . Combining Agile methodologies and DevOps practices, you can create a light weight processes to increase efficiency of development and delivery. Create Issues and complete with peer reviews | Make small incremental changes to avoid getting bogged down in bugs | Setup Continuous Integration/Continuous Delivery (CI/CD), always be able to share where you are at, at any moment | Continuous Improvement, be open to change | . | In my experience, Teams that embrace collaborative culture start to produce a creative outcome. Each person need to be teachable, allows suggestions. and avoids dictating orders and demanding changes. | Additionally, be mutually focussed on building something of interest is directly linked to the Teams creativity and quality. | . Caution on Deliverables . In my recent evaluations of personal blogs I have noticed a lack of commitment to quality in personal work. - Definitions incomplete, out of date pages, incomplete review tickets, not posting your score. . Points/grades from now and until the end of the year will be more dependent on quality measures that Teachers see built into your process. | Be sure you can speak to your work, on-time or late. | Late work will only be accepted after the student clarifies what is missed and work is defended as their own. | . Agile tips for success . Take a look at some of these tips from Agile writers … . Become a people who value creativity and quality in their software engineering culture and are committed to it. | Prioritize creativity, quality and set realistic expectations for project deadlines. | Educate the team on the importance of code reviews, automated testing, CI/CD and other elements of quality development. Ensure that source code is only mainlined after it is verified locally with automated tests (ie tester methods at each level of system, FE,BE can be verified independently). | Embrace automation in testing and delivery whenever you code something new. Properly implemented automation can lead to better productivity. | Don’t leave creativity and quality to just one member of the development team. Instill a culture that promotes contribution at every step and from every position in the team. Set goals. | Encourage collaboration between different teams. Review each others contributions, even when not assigned. | Establish metrics to measure and monitor completeness in each feature – identify potential improvement areas after each check point in the project. | . Jobs . Quality 1st and Creativity/Features 2nd will be the keys to 2nd Trimester points. Each team role needs to establish goals. To improve software it is important that all parties in the project have full understanding of requirements through fluid communication channels. Thus, establishing a development plan is a requirement. Here are some ideas … . Feature Focus keep an up to date blog/readme on the features of your project. The focus is to have 4 to 5 major features and the team should keep an up to date status of the progress of those features. This includes how each feature meets all the criteria of College Board Create Task. | Scrum Master should have Team Member Issues and Customer/Teacher/Grader review ticket always in plan. The review ticket should line up with Quality and Feature Focus. Scrum Master maintain features/quality plan and holds team members accountable to plan. Think about Scrum Board, README, and Issues as key artifacts to plan. | DevOps should have CI/CD goals. Process should be able to identify failures when the occur and by what change. | Backend Developer should have tester methods that don’t depend on Frontend code or later CI/CD process to catch errors. Make sure key features are working in backend. | Frontend Developer should establish full system checks before reviews. Don’t be that guy that says, “it worked last time I tried it”. All system checks should be able to be performed on localhost frontend server. | . End with Comment Edits . Every person should modify their comment. . Take a moment to review standards linked on this page. Provide summary in comment on why information is this blog is important?. | Would you rather work on PBL project, or or do assigned free-response coding questions (aka FRQs)? Which would be easier to meet class standards? | Trust and Freedom are often earned. How will you show your passion and ability to succeed in your work? | What key learnings and focusses are a priority for you? | . Hacks . Every Team should review comments, google agile manifesto, and then make a team manifesto. . In a manifesto you should have priority elements, as shown in this blogs image. | In a manifesto, have an element that tells team what is most important, have a supporting element that is less important but needed to support processes. | Have 3 to 5 lines in your manifesto. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/1.b/1.c/2.a/4.c/6.a/c1.1/c1.2/c1.3/c1.4/c2.0/c2.1/2023/01/04/HM-quality.html",
            "relUrl": "/1.b/1.c/2.a/4.c/6.a/c1.1/c1.2/c1.3/c1.4/c2.0/c2.1/2023/01/04/HM-quality.html",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post35": {
            "title": "Week of 01-03, New Years Code Warmup",
            "content": "Plans Week 17 . Teams Ideate their Create Performance Task while reviewing the creation of GitHub Pages Frontend. . Tuesday: Frontend. The Reunion Project Issue 1. workday, hack challenge | Wednesday: Tech Talk Creative, Collaborative, and Quality Culture. workday, clean up personal blogs and/or ideate CPT | Thursday: Tech Talk Frontend Reviews, SASS, work day | Friday: Workday. Ideate/planning data required for Create Performance Task. Populate some static data for 4 or 5 features and add to frontend pages. | . Look ahead . Teams work on ideation, research, fe, and be code. . Monday will be Live Review with 3 points/3 minutes focused per team on see Canvas for scoring. Review tickets are posted in Comments on this blog. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/17",
            "relUrl": "/points/17",
            "date": " • Jan 3, 2023"
        }
        
    
  
    
        ,"post36": {
            "title": "Unit 3 Sections 17-18",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/14/AP-unit3_17_to_18.html",
            "relUrl": "/2022/12/14/AP-unit3_17_to_18.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Unit 3 Sections 16",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/13/AP-unit3_16.html",
            "relUrl": "/2022/12/13/AP-unit3_16.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Week of 12-12, Student Teaching Week 3, Pop Live Reviews",
            "content": "Plans Week 16 . Weeks Plans include final Algorithms Blog and Review Ticket. . Monday: 3.14 and 3.15 Libraries and Random Values | Tuesday: 3.16 Simulations | Wednesday: 3.17 and 3.18 Algorithm Efficiency and Undecidable Problems | Thursday: live reviews, Algorithms Blog and review ticket with scores, 3.9 &amp; 11, 3.12-13, 3.14-15 3pts | Friday: Silent review 3.16, 3.17-18 2pts, 1pt for vocabulary, submit review ticket here by team/table. Party or Kickball during class | . Winter break and 1st week of New Year. Plan frontend / backend project for Create Performance Task. Establish 4 or 5 individual features, each which meet all the Create Performance Task project requirements. .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/16",
            "relUrl": "/points/16",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Unit 3 Sections 14-15",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/12/AP-unit3_14_to_15.html",
            "relUrl": "/2022/12/12/AP-unit3_14_to_15.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Unit 3 Sections 12-13",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/08/AP-unit3_12_to_13.html",
            "relUrl": "/2022/12/08/AP-unit3_12_to_13.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Unit 3 Sections 9 and 11",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/06/AP-unit3_9_and_11.html",
            "relUrl": "/2022/12/06/AP-unit3_9_and_11.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Week of 12-05, Student Teaching Week 2, Pop Live Reviews",
            "content": "Plans Week 15 . Weeks Plans . Monday: 3.8 and 3.10 Boolean Iteration and Lists | Tuesday: 3.9 and 3.11 Developing Algorithms and Binary Search | Wednesday: live reviews, Algo Review #2, 3.5-3.7, 3.8, 3.10, 3 points (2 points unit, 1 point blog quality and organization) | Thursday: 3.12 and 3.13 Calling and Developing Procedures | Friday: work day | . Now, Winter break and 1st week of New Year. Plan frontend / backend project for Create Performance Task. Establish 4 or 5 individual features, each which meet all the Create Performance Task project requirements. .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/15",
            "relUrl": "/points/15",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Unit 3 Sections 8 and 10",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/05/AP-unit3_8_and_10.html",
            "relUrl": "/2022/12/05/AP-unit3_8_and_10.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Unit 3.9 & 3.11",
            "content": "Unit 3.9 . 3.9.1 Algorithms (Claire) lecture style, fluid . A little review on Algorithms: . what are the three components of an algorithm? . sel__ | seq__ | it___ | . Today we will be looking at algorithms from another standpoint. . Main Idea 1: Algorithms can be written in different ways and still do the same thing . However, Algorithms that look similar might not always have the same result | Different algorithms can be used to solve the same problem | . Examples . The goal with the two algorithms below is to show &quot;Wow! Good job!&quot; when you get an A and show &quot;Nice!&quot; when you get a B or C (pass), if you don&#39;t pass (lower than 70) it will show &quot;Do Better&quot; . print(&quot;What Grade Did You Get?&quot;) grade = int(input(&quot;Enter Grade:&quot;)) if grade &gt;= 93: print(&quot;Wow! Good job!&quot;) if 70 &lt;= grade &lt; 93: print(&quot;Nice!&quot;) elif grade &lt; 70: print(&quot;Do Better&quot;) . What Grade Did You Get? Nice! . Yay! it worked! Lets look at the next one. Do you notice any differences? Do you think this algorithm will still achieve the same goal? If not, what is the flaw? . print(&quot;What Grade Did You Get?&quot;) grade = int(input(&quot;Enter Grade:&quot;)) if grade &gt;= 90: print(&quot;Wow! Good job!&quot;) elif 70 &lt; grade &lt; 90: print(&quot;Nice!&quot;) elif grade &lt; 70: print(&quot;Do Better&quot;) . What Grade Did You Get? . So, why is this important? Why are we even doing this? . When 2 algorithms look extremely similar, it is easy to assume they do the same thing. However, that is not the case and we have learn how to notice small differences in code and pretty much debug. . just know that codes that look similar don&#39;t always produce the same things :) | . Real-life situation (Storytime) . Tommy and Billy are working on solving the same issue with an algorithm Tommy creates a functioning code and yells &quot;I did it!&quot; He looks over at his friend Billy which is having a bit of trouble and he offers help However, Billy&#39;s code looks basically the same! which confuses them Then they remeber that they were taught that algorithms that look similar don&#39;t always have the same results and they collaborate to do further investigation:) . Now, without running, investigate the algorithm below. This one looks different. Do you thing it will still achieve the same goal as above? . print(&quot;What Grade Did You Get?&quot;) grade = int(input(&quot;Enter Grade:&quot;)) A = grade &gt;= 90 B = 70 &lt;= grade &lt; 90 C = grade &lt; 70 if A: print(&quot;Wow! Good job!&quot;) elif B: print(&quot;Nice!&quot;) elif C: print(&quot;Do Better&quot;) . What Grade Did You Get? Wow! Good job! . Why is this important? . When collaborating or working on group projects, two people might come up with two different ways to solve a problem, and that happens a lot. . know that same goal can be achieved in many ways (the possibilities are endless) | make notes in you code! (explain how it works to others or you future self) | . How to write Nested Conditionals as Boolean expressions . the following 2 pieces of code is supposed to print &quot;don&#39;t go to school&quot; unless: . it is a weekday | . isHoliday = False isWeekday = True #if holiday, dont go to school if isHoliday == True: print(&quot;don&#39;t go to school!&quot;) # otherwise, if it is a weekday, go to school else: if isWeekday == True: print(&quot;go to school!&quot;) # but if it is neither a weekday or holiday, don&#39;t go to school else: print(&quot;don&#39;t go to school&quot;) . go to school! . isHoliday = False isWeekday = True # setting variables here (same as above to make comparison easier) driveSchool = not(isHoliday) and isWeekday if driveSchool == False: print(&quot;don&#39;t go to school!&quot;) if driveSchool == True: print(&quot;go to school!&quot;) # now we can make a regular conditional/ if statement without having a nested conditional . don&#39;t go to school! . Hacks . why is it important to know that algorithms that look different can do the same thing and that algorithms that look the same might have different results?(0.15) | for the converted conditional to boolean conversion(0.10) | total: 0.25 | . 3.9.2 Developing Algorithms (Annika) very quite, asked basic question, shared float chart and natural language . Developing Algorithms . When creating an algorithm, its good to outline its process before coding This ensures that it is sequenced correctly | . | You should represent the algorithm using a flowchart or natural language Visualization can help you better see the flow of the whole algorithm | This may allow for the coding process to be more efficient and effective | . | . Review of Selection and Iteration . Algorithms with iteration repeat a function until a goal is reached To more easily represent an algorithm without showing all the repeated steps, we can use iteration | . | Algorithms with selection only go through certain functions if certain things are true or false | . Example 1 . Start | The number of pretzels in the pack is 6 | Eat one pretzels, number of pretzels in pack goes down by 1 | How many pretzels are left? | Repeat step 3 until number of pretzels is 0 | Display that pack is empty | Finish | pretzel = 6 while (pretzel &gt; 0): print(pretzel) pretzel -= 1 print(&quot;All done!&quot;) . 6 5 4 3 2 1 All done! . Example 2 . The parking rate for a garage is as follows: Less than one hour: Free 1-2 hours: $5 &lt;br&gt; 2-3 hours: $8 3-4 hours: $10 &lt;br&gt; 4+ hours: $12 . . Start | Input number of hours parked | If hours is less than 1, cost is free | If hours is between 1 and 2, cost is $5 | If hours is between 2 and 3, cost is $8 | If hours is between 3 and 4, cost is $10 | If hours is more than 4, cost is $12 | Display cost and goodbye | Finish | print(&quot;The parking rate is as follows: n Less than one hour: Free n 1-2 hours: $5 n 2-3 hours: $8 n 3-4 hours: $10 n 4+ hours: $12&quot;) time = float(input(&quot;How many hours have you parked at this garage?&quot;)) print(&quot;How many hours have you parked at this garage?&quot;) print(time, &quot;hours costs:&quot;) if time &lt; 1 : print(&quot;Free&quot;) elif time &gt;= 1 and time &lt; 2 : print(&quot;$5&quot;) elif time &gt;= 2 and time &lt; 3 : print(&quot;$8&quot;) elif time &gt;= 3 and time &lt; 4 : print(&quot;$10&quot;) else: print(&quot;$12&quot;) print(&quot;Have a good day!&quot;) . The parking rate is as follows: Less than one hour: Free 1-2 hours: $5 2-3 hours: $8 3-4 hours: $10 4+ hours: $12 How many hours have you parked at this garage? 2.0 hours costs: $8 Have a good day! . Hacks . Develop your own complex algorithm using a flowchart and natural language, then code it! . Requirements: . Includes both a flowchart AND natural language | Working code of the same algorithm | Incorporates selection AND/OR iteration | Make it creative! | . Tips: . This site is good for making flowcharts! | Natural language should just be a list | Think about the whole process, not just the end result | . 3.9.3 Using preexisting algorithms (Grace) . very fast, topic could have python . Main Idea . Knowing existing algorithms can help construct new ones | simple existing algorithms can include determining min or max of two or more numbers | computing the sum or average | identifying if an integer is even or odd | . | Using existing correct algorithms can help as building blocks to reduce development time, testing, and identification of errors | . Create an algorithm that will start with any positive integer n and display the full sequence of numbers that result from following the Collatz Conjecture. . Example: 6 -&gt; 3 -&gt; 10 -&gt; 5 -&gt; 16 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1 . What does this function do? . if (n MOD 2 = 0) { display(&quot;n is even&quot;) } else { display(&quot;n is odd&quot;) } . By modifying the preexisting code, we can write create new code that follows th Collatz Conjecture. . DISPLAY (&quot;Choose a value for n&quot;) n &lt;- INPUT () REPEAT UNTIL (n = 1) { IF (n MOD 2 = 0 ) { n &lt;- n/2 } ELSE { n &lt;- n * 3 + 1 } . Hacks . Fix the number guessing game . Make a flow chart for the algorithm number guessing game | Make a function that gets the user guess | Modify the existing search function to give more encouraging feedback | import random #sets variables for the game num_guesses = 0 user_guess = 0 upper_bound = 100 lower_bound = 0 #generates a random number number = random.randint(1,100) # print(number) #for testing purposes print(f&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): #add something here return #add something here #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if guess &lt; number: print(&quot;You are bad at guessing&quot;) #change this lower_bound = guess elif guess &gt; number: print(&quot;You suck :(&quot;) #change this upper_bound = guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . Unit 3.11 Binary Search (Claire) . Binary Search: . repeatedly dividing a search interval in half . Binary Search Steps: . first put the numbers in order ascending | descending | . | find the middle number first this is found by taking the highest index number plus the lowest index number and divide by 2 | the numbers on the right will be greater and the numbers on the left will be smaller | this can be represented with a binary tree middle number with the smaller number branched off on the left and bigger numbers branched off on the right | . | . | these lists are not always numbers lists can be made with strings | ex. [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;peach&quot;, &quot;watermelon&quot;] | alphabetical order a-z | z-a | . | . | . Practice: . What is the middle number in a Binary Search given the following set of numbers in order: 1, 5, 19, 44, 89 | What is the middle number in a Binary Search given the following set of numbers that are not in order: 3, 87, 12, 66, 22 | Hacks: . calculate the middle index and create a binary tree for each of these lists 12, 14, 43, 57, 79, 80, 99 | 92, 43, 74, 66, 30, 12, 1 | 7, 13, 96, 111, 33, 84, 60 | . | Using one of the sets of numbers from the question above, what would be the second number looked at in a binary search if the number is more than the middle number? | Which of the following lists can NOT a binary search be used in order to find a targeted value? . a. [&quot;amy&quot;, &quot;beverly&quot;, &quot;christian&quot;, &quot;devin&quot;] . b. [-1, 2, 6, 9, 19] . c. [3, 2, 8, 12, 99] . d. [&quot;xylophone&quot;, &quot;snowman&quot;, &quot;snake&quot;, &quot;doorbell&quot;, &quot;author&quot;] . | Rubric: . All 4 hacks are graded the same way . 0.25/0.25 - shows full understanding of the lesson, completes all hacks assigned with explanation to go above and beyond, any extra hacks to show more understanding . 0.23/0.25 - shows understanding of algorithms/binary search and completes all hacks . 0.20/0.25 - does not understand algorithm/binary search and has not completed hacks .",
            "url": "https://nighthawkcoders.github.io/APCSP/trimester%202%20student%20teaching/2022/12/02/unit3-9-11.html",
            "relUrl": "/trimester%202%20student%20teaching/2022/12/02/unit3-9-11.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Unit 3 Sections 5-7",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/12/01/AP-unit3_5_to_7.html",
            "relUrl": "/2022/12/01/AP-unit3_5_to_7.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Unit 3 Sections 3-4",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/11/29/AP-unit3_3_to_4.html",
            "relUrl": "/2022/11/29/AP-unit3_3_to_4.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Week of 11-28, Student Teaching Week 1",
            "content": "Plans Week 14 . Weeks Plans . Monday: 3.1 and 3.2 Variables, Assignments, and Data Abstractions | Tuesday: 3.3 and 3.4 Mathematical Expressions and Strings | Wednesday: work day | Thursday: 3.5-3.7 Boolean Expression, Conditionals, Nested Conditionals | Friday: live reviews Algo Review, 3.1-3.4, 2pts | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/14",
            "relUrl": "/points/14",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Unit 3 Sections 1-2",
            "content": "Objectives . Make sure lesson has the following… . Lesson times is between 20 and 30 minutes | Lesson assigns 30 minutes of Homework / Hacks | Lesson outlines Purpose and Objectives of sections within Unit | Review of Section Materials and Videos from AP Classroom | Key Coding requirements, adapt to Python or JavaScript | Create Jupyter Notebook to transfer to students and encourage participation during discussion | Notebook contains Key Vocabulary | Adapt College Board lessons to teacher/student projects in Data, Data Abstraction, List, APIs, or Binary when possible | Lesson should be interactive and hopefully have fun elements | Highlight any Tricks or Gotchas from the section, this should be added to coding challenge | Games like Jeopardy, Kahoots, etc should be very short or not at all. Hack-a-thon mentality is better | . Process for Presenters . Use “Comments” on this blog page to post materials for lesson | Be sure to include “Period and Teacher” in instructions | Be sure homework assignment, hacks and points/rubric are clearly described | . Process for Individuals . Each participating Team will post a shared review ticket with individual work clearly listed | Be sure to include “Period, Teacher and Table” in review ticket | Collaboration is encouraged but individual and unique work is required | .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/11/28/AP-unit3_1_to_2.html",
            "relUrl": "/2022/11/28/AP-unit3_1_to_2.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Character Octal Hexadecimal Decimal Minus . +1 | 00000000 | | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | | | | | .",
            "url": "https://nighthawkcoders.github.io/APCSP/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 15, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Week of 11-14, Tri 2 Into, Tools and Issues",
            "content": "Plans Week 13 . Weeks Plans . Monday: Check #announcements daily, Form Teams, Pick Teaching Topic, GDP, Setup Team, Carry over or establish new Projects and Team repositories, Establish scrum board . Teachers will have very little tolerance for tools that are not working!!! Verify Tools, Fastpages Kernels, WSL, and Anaconda as applicable (Due Friday). | Tuesday: Binary Logic and Abstractions review, Harvard CS50 minute 0 to minute 50 to provide background on binary, complete all 50 minutes recommended | Wednesday: Substitute, Work Day | Thursday: Lesson Points, Lesson Homework, Tour/highlights of Binary Code 10 minutes, Work Day | Friday: *Tools and Lesson Plan/Issues Verification Due | . Trimester 2 Pre-Holiday Objectives . Unit 2 and Unit 3 mastery. . Students needs to master Big Idea 3 Algorithms and Programming from College Board online curriculum prior to winter break. | Students should master Unit 2, topics 2.1, 2.3, and 2.4 before winter break. | Teams will share a lesson. Every team must present and be clearly involved in preparation. Review tickets are required for each student with links to tangibles. | In lesson preparation and teaching students should try to use Binary as data in lessons. All algorithms need data and there are many applications of Binary that can support the Algorithms from College Board Unit 3 | Exceptions can be made to Binary. But, this must be discussed with Teacher in advance. | . | Students will be working with Fastpages, Jupyter Notebooks: Python, JavaScript kernels. Additionally, students will work in Frontend JavaScript code in Fastpages Markdown files (see Frontend Examples. | Through the Trimester students will be expected to *present Fastpages/Blog with Homework assignments and one-to-many Frontend JavaScrip web applications. | . Trimester 2 Post-Holiday Objectives . Create Performance Task completed. . After additional Data and Algorithm mastery in initial 5 weeks of trimester… students and teams will transition to “Create Performance Task” projects. 12 hours of class time will be allocated to this task over the final 7 weeks. Additionally, you will use this project in Trimester 2 N@tM presentations. Be sure to have an interactive portion to this project, this is key to College Board Video and N@tM presentations. | During the 7 weeks we will be learning more about APIs, creating Frontend forms, storing forms in Databases, posting comments, uploading (images) and continuing with likes. As we transition to Trimester 3 we will creating user login and site security. | Plan your Create Performance Task with these features in mind. FYI, 1-4 people can work on a project, but everyone must have there own feature that represents all the College Board requirements. | We will have Tech Talks in Career Tech, AP Test and Human Development during the last 7 weeks. | . | . Tools and Issue Verification (3 points) . Summary of Points. . Individual Tools Verification, VSCode, JavaScript and Python Kernels working on Laptop/Desktop. “Python Jupyter Notebook” and “Javascript Fastpages Markdown files will be key technical platforms. If you have problems currently, go back and re-install tools from 1st trimester guide. Be sure VS Code is running out of Anaconda environment. Perform make server to pretest prior to commits. Show running code in Fastpages for Binary Markdown and FastPage Python. | Each member of team pick a different hack or pair program 2 hacks. Create Individual Issue with checkboxes. This should be planned in Individual FastPages. However, you should plan a hack that is beneficial to topic that you will be Teaching. Consider this individual research. | . Lesson Plans and Presentation, (7 points) . . See Canvas for official guide on grading for this assignment.Recording for grading will be in parts. . Lesson 4 points (Planning, Topic Coverage, Technicals and Data, Algorithms and Homework) | Grading 3 points (Grading participation, Completeness and quality, Grading summary) | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/13",
            "relUrl": "/points/13",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Binary Logic and Abstraction",
            "content": "Binary, Data, Data Structures, Data Abstraction (ASCII, Unicode, Color Codes), . Algorithms, Data and Data Structures go together. It is required to have a data topic as you venture into Algorithms and Lessons. This blog is a collection of binary, data and data structures that should be your data topic!!! Use a data topic as you learn algorithms and programming. . Explore that topic in Computer Science manner (research, jupyter notebooks, frontend / backend coding) | Build a lesson that is more interesting, by explaining an algorithm and logic using a data topic. | Teach with examples… Segment from CS50 and go to minute 13:15. | Tour the Code. Use Binary Frontend Code to get you started. Better clone APCSP project drag and drop _posts/2022-07-07-PBL-binary.md to your project and Debug | This Tech Talk will finish by reviewing hacks, the remainder of this blog and Binary Frontend Code is part of your research. | . Math in Binary . Learn binary by bitwise operators and more. Shifting bits is a common computer operation and does wonderful things in math like multiply and divide. Last bit always determines odd or even. Look for shift on w3schools . Logic of Shift . Explore right and left shifts with binary numbers. . In an arithmetic shift, the bits that are shifted out of either end are discarded. | In a left arithmetic shift, zeros are shifted in on the right. | . Understand binary Numbers by elaboration of Shift (2^^0, 2^^1, 2^^2) . How does the Power of 2 work? What is a binary number? What is Base2, Base10, Base16. . This example uses an 8-bit register. Math can be represented in much in many more bits, 32 bits or 2 bytes is common for integer in modern computer languages. | Most Significant Bit (MSB), least (LSB) | This example shows negative and positive numbers, using technique called Twos Complement. | In the first case, the leftmost digit was shifted past the end of the register, and a new 0 was shifted into the rightmost position. Positive Multiply. | In the second case, the rightmost 1 was shifted out, and a new 1 was copied into the leftmost position, preserving the sign of the number. Negative Divide, this example obviously needs more study. | . UI Concept/Design . Conceptualize on a UI that will illustrate binary and decimal. In learning these concepts, it is best to code and example to illustrate what is happening. . n Right Shifts (divides by 2^n); n Left Shifts (multiplies by 2^n) | Add buttons for “«” and “ »” | . ASCII and Unicode . Computers represent more than Math. Mostly everyone is familiar with the characters on a keyboard and Emojis. These are all represented in binary, the data abstraction being the characters we visualize. 😂 . Character Data Abstraction . How are characters stored? How many bits do they take? . ASCII is 8 bits, it generally represent keys on keyboard. Look up ASCII Table. | Unicode can be UTF-8, 16 or 32, each representing bits. ASCII is preserved in Unicode. | ASCII - 7 bits, extended to 8 bits with Unicode | UTF-8 | UTF-16 | UTF-32 Sample of Unicode characters. | . UI Concept/Design . The ASCII value in picture should be change based off of the bits in evaluation you are doing. Bits displayed, label, and evaluation would be specific to evaluation type: Original ASCII . Color Codes . Pixels are little dots on Monitors and TVs that make up the display. Each pixel has an Red Green and Blue value (RGB). All pictures we see or take are composed of RGB using a density measurement. These are stored and then represented by digitally or in print. . Monitors 1280 x 1024 Super-eXtended Graphics Array (SXGA) | 1366 x 768 High Definition (HD) | 1600 x 900 High Definition Plus (HD+) | 1920 x 1080 Full High Definition (FHD) | 1920 x 1200 Wide Ultra Extended Graphics Array (WUXGA) | . | TVs 4K Ultra HD: The term 4K means the screen is about 4,000 pixels wide. … | 1080p (Full HD): This resolution is 1,920 x 1,080 pixels. … | 720p (HD Ready): This is mostly found on smaller TVs, and it has a resolution of 1,280 x 720. | . | Camera |Sensor Resolution (megapixels)|Typical Image Resolution (pixels)| |2.16|1800 x 1200| |3.9|2272 x 1704| |5.0|2592 x 1944| |7.1|3072 x 2304| |8.0|3264 x 2448| |10.0|3648 x 2736| |12.1|4000 x 3000| |14.7|4416 x 3312| |21.0|5616 x 3744| | . A Color code is a 24 bit abstraction. . There are 8 bits for Red, 8 bits for Blue, and 8 bits for Green. . Name | Hex Code | RGB Code | . Black | #000000 | rgb(0, 0, 0) | . Red | #FF0000 | rgb(255, 0, 0) | . Maroon | #800000 | rgb(128, 0, 0) | . Yellow | #FFFF00 | rgb(255, 255, 0) | . 255 * 255 * 255 combinations of R, G, B . UI Design . Here is a sample program a student used to visualize color by turning buttons on and off. by Anthony Vo 3 rows representing R, G, B Resulting color displayed in block . Logic Gates . The fundamentals of all decisions in computers is made by logic gates. These gates are visualized by permuting 1 and 0 across many different types of decisions. The result is an expression that evaluated to 1 or 0. These are called Truth Tables. . Logic Gates can be simulated with 2 bits . Look for bitwise operators on w3schools . UI Concept . Visual concept of logic gates . Establish check boxes for A / B on and off | Show result of Boolean Expression using Gate visual Logic Gates | . UI Design . Logic gate lab in JavaScript by Kylie Scharf AB checkboxes with Submit button Table with Symbol, Description, and Result . Logic of Logic Gates . A logic gate can have two inputs (a,b) and by how changing these inputs it impacts the output(c). . There are four possible inputs: 0 0 | 0 1 | 1 0 | 1 1 | . | Understanding the output enables us to understand a logical expressions. All outputs are routed in Logic Gates (similar to how a language is routed in Latin). AND is true for 1 1; NAND is true opposite of AND 0 0, 0 1, 1 0 | OR is true for 1 1, 0 1, 1 0, NOR is true opposite of OR 0 0 | XOR is true for 0 1, 1 0 | . | . Practical Application . Logic gates are used everywhere . Unsigned Addition . Here we are requesting 3 rows of bits to simulate Math. This could be done with 4, 8, or 16 bits. . Initial UI Implementation . Action buttons for +1 and -1 Additional actions for Turn On and Turn Off . Unsigned Addition . . Signed Addition . Integers in most languages are int8, int16, int32, or int64. They typically reserve left most bit for sign. . Common concept for Integer Math . Positive number . Basic concept, but not typically used . Negative number . Inverting numbers, twos complement . Two’s complement allows adding for signed and unsigned numbers . Basic concept is to invert/negate bits to produce negative. This allows numbers to be added together for expected results. » and »&gt; have been adapted to handle signed and zero filled shifting. . Technical helpers . Harvard CS50 minute 0 to minute 50 to provide background on some of the information below. . Algorithm in Jinja2 to limit Bits per row . 8 images per row by Kylie Scharf Modulo 8 algorithm add &lt;tr&gt; for every eight bits (code). . Research Helpers . CHAPTER 8 - Binary Addition and Two’s Complement Overview find by Val Wilson . Hacks . Data, Data Structures, and Algorithms work together. Data helps supply an interests/topic to an algorithm. It will be expected that you have a topic as you go through various algorithms. . Use data abstraction (ie data structures) in your lesson | Make sure you teach/learn elements from this blog as you learn algorithms | Add “Science” into your process (research, jupyter notebook, and ultimately running application) | Topics used in teaching, not listed in lesson/labs/homework need to be approved by Teacher. The topics above focus on data ideas from Unit 2 of AP Classroom. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/1.d/2.b/3.c/c4/4/2022/11/14/AP-binary_logic.html",
            "relUrl": "/1.d/2.b/3.c/c4/4/2022/11/14/AP-binary_logic.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Finals Week",
            "content": "Plans Week 12 . Finals Week Close the book on AP Study . Monday: Work Day | Tuesday, Wednesday, Thursday: MCQ Test and blog | Friday: No School | . Final Exam (3 points) . Summary of Points . 1.8 of 2 points for scoring above 50% | 1 point on blog | . Extra Credit Review and Makeups must be complete before EOD Thu . Posters is an example . Coding for Extra Credit . There are always opportunities to show understanding of coding. This weekend I was observing World-O-Meter. How would you do this with our group projects. . Step 1 - JavaScript document element updates . Below is a code segment that updates a clock on a page every second, adaptation would be to update data from API fetch on an interval, then updating all document elements after fetch. . // Clock Control // clockElement global element set for convenience let clockElement = document.getElementById(&#39;clock&#39;) // Execute clock function on load clock(); // Clock update executes on each interval set by timer function clock() { let date = new Date(); clockElement.textContent = date.toLocaleString(); } // Clock refresh timer, a reoccurring event setInterval(clock, 1000); . Step 2 - JavaScript update backend content . To make the updates document elements meaningful you would need to have an interval to update the Haha or Boohoo content. This could be done in same or different JavaScript timer. This would be calling appropriate fetch in add to the counters. Together, these would give the same effect as the World-O-Meter. . Step 2 (Python Option) - update backend content . Instead of having frontend update counter, you could have backend update the counter. The below could be adapted to purpose. . import threading # import threading def keepUpdating(): # build a function to run over and over # global variable setup global run try: run except: run = 0 print(&quot;Seconds:&quot;, run) # replace this line with updates to data run += 3 # this is update to global variable threading.Timer(3.0, keepUpdating).start() keepUpdating() # you need to call this function at application startup . Step 2 (Bash Option) - do updates on server . Update content using curl and scheduling on the system. To make a PUT request with Curl, you need to use the -X PUT command-line option. . $ curl -X PUT localhost:8080/api/like/1 . This command would need to be added to crontab or a bash script and crontab to run repeatedly. . $ crontab -l # Edit this file to introduce tasks to be run by cron. # # Each task to run has to be defined through a single line # indicating with different fields when the task will be run # and what command to run for the task . Automatic Deployment for Extra Credit . Change AWS Spring Deployment to be automatic Student Reference GitHub Actions .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/12",
            "relUrl": "/points/12",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Project Week 3",
            "content": "Plans Week 11 . N@tM Week . Monday: Day Off | Tuesday: Work Day | Wednesday: Work Day | Thursday: N@tM 6 to 7:30pm | Friday: Final Exam Open N@tM Schedule . Schedule for room and time on evening of event. . | 6:00pm Period 1 (A101), Mort 4 (A151) | 6:30pm Period 2 (A101), Yeung 4 (A151) | 7:00pm Period 3 (A101), Yeung 5 (A151) N@tM Day (12 points) . Summary of Points . | Theme, Presentation and Professionalism Status 1 pt x 4 (N@tM is required, make sure Teacher sees you for 1 minute prior to leaving) | Key Technicals BE + DB 1 pt x 5 | Key Technicals FE 1 pt x 3 | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/11",
            "relUrl": "/points/11",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Project Week 2",
            "content": "Plans Week 10 . Continue PBL - Project, checking issues, progress, . Monday: Tech Talk, Review Videos | Tuesday: Review Videos | Wednesday: Work Day | Thursday: Live Reviews | Friday: Live Reviews | . Live Review (3 points) . Summary of Points . 1 point for issues Show your planning process and what you have completed, discuss the problems you have encountered and how you solved them | . | 1 points for progress Show what you have accomplish in the last week, discuss what still needs to be completed and explain how you plan to hit your deadline | . | 1 poinit for commits Show that you have been making changes to your project | . | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/10",
            "relUrl": "/points/10",
            "date": " • Oct 24, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Project Week 1",
            "content": "Plans Week 9 . Focus on PBL - Commitment to your Agile Development process and tangibles. . Monday: Review CB 4.1 and Blog | Tuesday: Code, Code, Code, Live Review | Wednesday: Career Tech, Live Review | Thursday: Show FE to BE working, Script for Video | Friday: Code, Code, Code | . Team . Prepare for Teacher project audit. Also, analysis of the following will speed Scrum Team plan, work, improve quality, and make a better N@tM final. . API Frontend to Backend Overview . Show demo of work in progress. . Must Using API across multiple systems Create a HTML Frontend table or view fetching from Backend using an Flask API | Show Flask API using RapidAPI | . | Impressive/Extra show Debugging in video | . Scrum Master . Describe Program Purpose and Function. Also, highlight key system used to track, collaborate and review software. . Identify and Apply a Software Development process. Describe your Software Development Life Cycle | Describe how you plan, track sprints, track features, track milestones, and assign versions. | Highlight Agile process: research, design, coding, testing, review, repeat. | . | Define and analyze systems and software requirements. Define Computer Systems you have or will develop. | Indicate Tools or Automation you will use improve tracking requirements (ie Project/Scrum Board). | Define strategies that enable Team to target the specific needs of the customer (ie Product Owner). Describe meetings, demos, and how you collect feedback. | . | Test and Demo Software during each Sprint Consider using GitHub Issues to support this process. | Develop and describe expectations of each feature. | Use feature, expected outcome, and the minimal amount of code each feature. | Document accomplishment with tangible evidence. | Have feature reviews, demos, and obtain feedback (team and/or customer) | Update and derive new features and tasks for next step in Software Development Life Cycle | . | My suggestion is this person helps with Frontend development | . Frontend Developer . Describe Frontend designs and coding techniques. . Create and implement an effective frontend between humans and technology Show frontend design artifacts (wire frames) | Describe any consideration you have made for customer requirements. | Indicate accommodations you have made for English Language Learners or those with Disabilities | Show any screens that are currently developed. | . | Describe Code and Styles Frontend development HTML, Markdown, JavaScript | Cards, Tables, Blogging | . | Comments. Be sure to illustrate developers comments in code and how this will facilitate current and future understanding of the key portions of system. | . DevOps Engineer . Describe the technical systems and processes used to ensure the ability to do continuous updates and integration of software. . Describe software and programming tools Identify authoring tools (IDE’s, Docker, GitHub) used | Describe and/or show visuals of interactions and integration of programming languages, protocols, and data within project. For instance, deployed systems of Docker Images, Nginx, DNS hosting the application. | Describe and/or illustrate key Web Applications, APIs, and dependency systems that will be required to complete this system (Diagram). | . | Describe GitHub branch management and sociology used to ensure ability to perform continuous builds and integrations. GitHub projects | Branching Strategies | Deployment processes and automation | . | Describe how to validate and test the complete system | My suggestion is this person helps with Backend development | . Backend Developer . Describe backend coding and requirements. . Develop data, data types, databases, and APIs. Identify authoring tools (IDE’s, Postman) used. | Describe and/or illustrate key data types, data structures (Lists, Dictionaries), objects, files, or databases that will be used (Flow Chart/UML). | Describe use of Lists or Dictionaries, database, tables, attributes, records, and systems of access (JSON, Lists, Dictionaries). | . | Comments. Be sure developers use comments in code to facilitate current and future understanding of the key portions of system. | . Hacks (Video 2). Recommend… Minimize talking, minimize mouse movements, and share Tangibles. . Make a less than 4 minute video. Each individual should talk in video, code, and make their part of the video. Consider crossing over to other tables and share methods and methodologies of those working on similar roles. . Scrum Master should make sure all things come together. | DevOps should ensure there is a working project to Demo at all times. | Everyone should complete their part(s). | Everyone should help other Team Members when struggling. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/9",
            "relUrl": "/points/9",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Javascript Web Page using an API",
            "content": "The code below holds the info that is being generated into an HTML table. . Key things to know: . &lt; table &gt; creates a TABLE | &lt; tr &gt; creates a ROW | &lt; th &gt; makes the text a column HEADER | &lt; tbody id = &quot;results&quot; &gt; defines an element id, to be used within JavaScript | . &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Joke&lt;/th&gt; &lt;th&gt;HaHa&lt;/th&gt; &lt;th&gt;Boohoo&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- javascript generated data --&gt; &lt;/tbody&gt; &lt;/table&gt; . Constant variables are declared here with keyword const . Key things to know: . The document object &quot;result&quot; represents table body in the HTML above. | If you want to access any element in an HTML page in JavaScript, you always start by accessing the document object. In this case, we are accessing &quot;result&quot; and defining a &quot;resultContainer&quot; | In the code, in following cells, document elements are created and organized for each Joke, each is added to the &quot;resultContainer&quot; as a row in the table body. | Accessing the api is done using the variables url and options, this is setup to fetch the Jokes from the backend | . // prepare HTML defined &quot;result&quot; container for new output const resultContainer = document.getElementById(&quot;result&quot;); // keys for joke reactions const HAHA = &quot;haha&quot;; const BOOHOO = &quot;boohoo&quot;; // prepare fetch urls const url = &quot;https://flask.nighthawkcodingsociety.com/api/jokes&quot;; const like_url = url + &quot;/like/&quot;; // haha reaction const jeer_url = url + &quot;/jeer/&quot;; // boohoo reaction // prepare fetch GET options const options = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // prepare fetch PUT options, clones with JS Spread Operator (...) const put_options = {...options, method: &#39;PUT&#39;}; // clones and replaces method . The below code uses a function called fetch to gather the data from the backend. . Key things to understand: . The &quot;url&quot; &quot;response&quot; is checked in case the site is down and returns an error | On successful fetch, the code places each Joke in the HTML table body using a &quot;for&quot; loop and creating document elements from each &quot;row&quot; of the fetched &quot;data&quot;. | The creation of each Haha and Boohoo &quot;onclick&quot; &quot;button&quot; is also done in the same loop. | Updates to backend are setup to occur with each onclick, each click calls the &quot;reaction&quot; function | . // fetch the API fetch(url, options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&#39;GET API response failure: &#39; + response.status); return; } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); for (const row of data) { // make &quot;tr element&quot; for each &quot;row of data&quot; const tr = document.createElement(&quot;tr&quot;); // td for joke cell const joke = document.createElement(&quot;td&quot;); joke.innerHTML = row.id + &quot;. &quot; + row.joke; // add fetched data to innerHTML // td for haha cell with onclick actions const haha = document.createElement(&quot;td&quot;); const haha_but = document.createElement(&#39;button&#39;); haha_but.id = HAHA+row.id // establishes a HAHA JS id for cell haha_but.innerHTML = row.haha; // add fetched &quot;haha count&quot; to innerHTML haha_but.onclick = function () { // onclick function call with &quot;like parameters&quot; reaction(HAHA, like_url+row.id, haha_but.id); }; haha.appendChild(haha_but); // add &quot;haha button&quot; to haha cell // td for boohoo cell with onclick actions const boohoo = document.createElement(&quot;td&quot;); const boohoo_but = document.createElement(&#39;button&#39;); boohoo_but.id = BOOHOO+row.id // establishes a BOOHOO JS id for cell boohoo_but.innerHTML = row.boohoo; // add fetched &quot;boohoo count&quot; to innerHTML boohoo_but.onclick = function () { // onclick function call with &quot;jeer parameters&quot; reaction(BOOHOO, jeer_url+row.id, boohoo_but.id); }; boohoo.appendChild(boohoo_but); // add &quot;boohoo button&quot; to boohoo cell // this builds ALL td&#39;s (cells) into tr (row) element tr.appendChild(joke); tr.appendChild(haha); tr.appendChild(boohoo); // this adds all the tr (row) work above to the HTML &quot;result&quot; container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + url); }); . The below code uses fetch to update backend data using &quot;put_options&quot;. The purpose is to update Hahaa and Bohoo counters in backend. . Key things to understand: . The &quot;url&quot; &quot;response&quot; is checked to verify update occurred | The element id of button clicked is updated with the data returned from the API. | Note, the elemID is received as parameter. This data was setup when the button was created in former cell. | . // Reaction function to likes or jeers user actions function reaction(type, put_url, elemID) { // fetch the API fetch(put_url, put_options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&quot;PUT API response failure: &quot; + response.status) return; // api failure } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); // Likes or Jeers updated/incremented if (type === HAHA) // like data element document.getElementById(elemID).innerHTML = data.haha; // fetched haha data assigned to haha Document Object Model (DOM) else if (type === BOOHOO) // jeer data element document.getElementById(elemID).innerHTML = data.boohoo; // fetched boohoo data assigned to boohoo Document Object Model (DOM) else error(&quot;unknown type: &quot; + type); // should never occur }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + put_url); }); } // Something went wrong with actions or responses function error(err) { // log as Error in console console.error(err); // append error to resultContainer const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); } . Hacks . The code below relates to the rapidapi you worked with last week. . What are some similarities you see with the javascript for the jokes api? | In a blogpost, break up the code in cells like done above and try to describe what this code is doing. | . &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Time&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;td id=&quot;time&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_cases&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_deaths&quot;&gt;&lt;/td&gt; &lt;td id=&quot;active_cases&quot;&gt;&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Country&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- generated rows --&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;!-- Script is layed out in a sequence (no function) and will execute when page is loaded --&gt; &lt;script&gt; // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare fetch options const url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot;; const headers = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // fetch the API fetch(url, headers) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will have json data response.json().then(data =&gt; { console.log(data); console.log(data.world_total) // World Data document.getElementById(&quot;time&quot;).innerHTML = data.world_total.statistic_taken_at; document.getElementById(&quot;total_cases&quot;).innerHTML = data.world_total.total_cases; document.getElementById(&quot;total_deaths&quot;).innerHTML = data.world_total.total_deaths; document.getElementById(&quot;active_cases&quot;).innerHTML = data.world_total.active_cases; // Country data for (const row of data.countries_stat) { console.log(row); // tr for each row const tr = document.createElement(&quot;tr&quot;); // td for each column const name = document.createElement(&quot;td&quot;); const cases = document.createElement(&quot;td&quot;); const deaths = document.createElement(&quot;td&quot;); const active = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.country_name; cases.innerHTML = row.cases; deaths.innerHTML = row.deaths; active.innerHTML = row.active_cases; // this builds td&#39;s into tr tr.appendChild(name); tr.appendChild(cases); tr.appendChild(deaths); tr.appendChild(active); // add HTML to container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); }); &lt;/script&gt; .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/webfrontend",
            "relUrl": "/techtalk/webfrontend",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "CTE",
            "content": "Software and Systems Development Pathway . Students in the Software and Systems Development pathway prepare for careers related to computer science that involve the design, development, implementation, maintenance, and management of systems that rely on software programs to satisfy the operational needs of modern business organizations. Persons with expertise in systems development and programming are critical to support operations like electronic commerce, medical records management, retail sales and inventory management, digital entertainment, and use of energy. . Sample occupations associated with this pathway: . Computer Programmer | Software Developer/Applications | Information Security Analyst | Web Developer | E-Business/E-Commerce Specialist | . Key Ideas/Standards . Identify and apply the systems development process. . | Define and analyze systems and software requirements. . | Create effective interfaces between humans and technology. . | Develop software using programming languages. . | Test, debug, and improve software development work. . | Integrate a variety of media into development projects. . | Develop Web and online projects. . | Develop databases. . | Develop software for a variety of devices, including robotics. . | Develop intelligent computing. . | Hacks . Blog about your experience in this CTE class . What standards have we hit so far? Which assignment do they relate to? | What standards are you looking forward to learning more about? | What other careers can you benefit from being in this pathway? | .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/cte",
            "relUrl": "/techtalk/cte",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Computer System and Networks",
            "content": "The Internet . College Board . Internet, Word Wide Web, Local Area Network, HTTP, DNS, TCP, UDP, IP. Discussion focuses on Letters and Jig Saw puzzles as analogy for Source, Destination, and Packets. . Web browsers and servers use TCP/IP protocols to connect to the Internet. Common TCP/IP protocols are: . HTTP - Hyper Text Transfer Protocol, HTTPS - Secure HTTP . HTTP takes care of the communication between a web server and the clients web browser. HTTP is used for sending requests from a web client to receive a response from the server. Response could be HTML or JSON. . | HTTPS takes care of secure communication between a web server and a web browser. In our deployment process we used certbot to make HTTP communication secure all the time. . | . | TCP/IP - Transmission Control Protocol, Internet Protocol . TPC/IP messages are broken up into small independent “packets” and sent between computers via the Internet. . | IP is responsible for “routing” each packet to the correct destination. When an IP packet is sent from a computer, it arrives at an IP router. The IP router is responsible for “routing” the packet to the correct destination, directly or via another router. . | . | Network Layer - The wireless and physical layers that move bits and bytes “11010001” across the internet. . | . . Fault Tolerence . College Board . Know how to determine if vertex of graph has more than one connection. Multiple connections, in reference to a computing device, could be considered “Fault Tolerant”. Building “Fault Tolerant” systems makes the network or internet stronger. . Understanding Computer, Routers, Systems, and Purpose are a pre-requisite to understanding Fault Tolerance systems. Regarding College Board videos, for clarification, a Router is typically used to connect computers. Here is an illustration that is very similar to the key components we have used in this class and should be familiar to those who have done deployment. | . As we are at school, using an HTTP client we request a page via LAN or Campus Network. This Network has a router and an ISP router that directs us to the public internet. | DNS is used to translate https://nighthawkcodingsociety.com to an IP address, see What’s My DNS | This targets the Web Server, the request is directed through a router to the Server running Nginx, which intern directs request to Gunicorn application hosting the Flask Website. | . Fault tolerant “routing” and “systems” on the internet is achieved by having redundancy in routing paths and computer functions. Networks and Systems become stronger because of many routes and redundancy of function. This AWS picture shows load balancing, multiple zones, redundant equipment, standby and fail over equipment and paths. This is much more than just having multiple connections, there is A LOT of planning in making fault tolerance. This is why there is such a rise in companies like AWS, Azure, Google Cloud, etc. | . . The path the TCP/IP packet will follow might be different from other packets, for instance from the same HTTP communication. The routers in the network are responsible for the right addressing, depending on traffic volume, errors in the network, etc. Since the Internet is Fault Tolerant, there are many paths to a destination, similar to Google Maps providing alternate paths when we travel. Time can be seen with Ping. Routes and time can be see with TraceRoute command… | . MacBook-Pro-3:~ johnmortensen$ traceroute yahoo.com traceroute: Warning: yahoo.com has multiple addresses; using 74.6.231.20 traceroute to yahoo.com (74.6.231.20), 64 hops max, 52 byte packets 1 osync (192.168.1.1) 3.698 ms 2.227 ms 1.533 ms 2 142-254-184-101.inf.spectrum.com (142.254.184.101) 21.250 ms 16.529 ms 11.286 ms 3 76.167.26.181 (76.167.26.181) 35.013 ms 32.531 ms 45.001 ms 4 agg22.sndhcaax02r.socal.rr.com (72.129.1.142) 19.709 ms 26.443 ms 24.083 ms 5 agg22.tustcaft01r.socal.rr.com (72.129.1.2) 25.561 ms 22.516 ms 31.393 ms 6 bu-ether26.tustca4200w-bcr00.tbone.rr.com (66.109.3.232) 36.292 ms 209-18-43-72.dfw10.tbone.rr.com (209.18.43.72) 29.504 ms 37.647 ms 7 0.ae3.pr1.lax10.tbone.rr.com (107.14.19.56) 29.244 ms 22.536 ms 0.ae2.pr1.lax10.tbone.rr.com (107.14.19.54) 29.889 ms 8 xe-0-0-33-1.par2.lax.yahoo.com (216.115.96.14) 28.815 ms 21.496 ms 25.669 ms 9 unknown.yahoo.com (216.115.102.186) 20.551 ms 23.971 ms 35.320 ms 10 ae-9.pat2.pao.yahoo.com (209.191.64.246) 27.373 ms 27.639 ms 29.064 ms 11 ae-7.pat2.dnx.yahoo.com (209.191.65.9) 59.405 ms 67.980 ms 58.710 ms 12 ae-6.pat1.nez.yahoo.com (209.191.64.226) 74.793 ms ae-5.pat2.nez.yahoo.com (209.191.64.224) 81.188 ms 77.055 ms 13 et-1-0-0.msr2.ne1.yahoo.com (216.115.105.183) 87.602 ms et-1-0-0.msr1.ne1.yahoo.com (216.115.105.29) 78.726 ms et-19-1-0.msr1.ne1.yahoo.com (216.115.105.27) 78.340 ms 14 unknown.yahoo.com (98.138.97.37) 75.661 ms 76.450 ms et-19-1-0.clr1-a-gdc.ne1.yahoo.com (98.138.97.71) 81.867 ms 15 lo0.fab4-2-gdc.ne1.yahoo.com (98.138.51.3) 93.363 ms lo0.fab3-2-gdc.ne1.yahoo.com (98.138.51.2) 96.854 ms lo0.fab4-2-gdc.ne1.yahoo.com (98.138.51.3) 76.542 ms 16 usw2-1-lbd.ne1.yahoo.com (98.138.97.157) 78.076 ms 78.943 ms 75.405 ms 17 media-router-fp73.prod.media.vip.ne1.yahoo.com (74.6.231.20) 81.217 ms 77.895 ms 84.628 ms . Parallel and Distributed Computing . College Board . Single Core versus Multiple Cores allows allows parallel computing. Using multiple Cores allows a sequential job to be split up with minimum time being the length of longest job(s). What is best time for 30 seconds, 50 seconds, 40 seconds jobs on a two core computer? . Distributed Computing - Bitcoin mining is an example of distributed computing. A tough digital computing puzzle illustrates need for CPU/GPU power. A distributed ledger amongst multiple miners is verified to avoid fraud. The result of this distributed computing network is a new financial economy. | . . Parallel Computing - Chrome, the browser most of us use to run our Web Application is a great example of a multi process architecture. There are two primary types of processes in Chrome : the browser process and the render process. . Browser process interacts with information from internet. This has multiple functions: Web contents represents a tab within the browser. Render View manages all IPC (Inter Process Communication), for instance the HTTP actions. . | Render process is responsible for constructing a web page. Webkit is the engine and contains WebCore which constructs DOM (layout) and the JavaScript interpreter. . | . | . .",
            "url": "https://nighthawkcoders.github.io/APCSP/5.a/c7.1/c9.3/2022/10/17/AP-computer_systems_networks.html",
            "relUrl": "/5.a/c7.1/c9.3/2022/10/17/AP-computer_systems_networks.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Internet Connections",
            "content": "Cancelled . Plans Week 8 . Discussing the internet, connection using API, and work on final project . Monday: Live Review, Test Prep | Tuesday: Live Review, Career Tech | Wednesday: Code, Code, Code | Thursday: Code, Code, Code | Friday: Code, Code, Code | . AP Prep . Big Idea 4.1 . Blog about the videos and questions on this section in AP Collegeboard | Create a diagram to show computer system and networks | . API Frontend to Backend Overview . Using API on multiple systems . Complete debugging of python flask | Create a html table in your fastpages using an API | Discuss plans to incorporate the given code into your group project | . Final Project Progress . Check in on final project . Present completed elements, issues, and next steps of your project | . Live Grading Presentation.  . We will follow 3 to 4 team review format. . Observers will grade up to .9/1 X 3 on each of the elements mentioned above (2 individual and 1 team). Be sure to total up to 2.7/3 | Observers will note anything that was completed that is not mentioned in the outline. This needs to be tangible!!! If student met 2.7 standard, then extra items can make score 2.7+. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/8",
            "relUrl": "/points/8",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Deployment Files",
            "content": "Communication on Machines, Project, Port, Docker Image, and Nginx . It would be nice if there were some standards published. Here are some ideas. It takes about 15 minutes to plan or many hours to fix. . P3 MORT: http://nighthawkcodescrums.gq/ . Period | Table | Port | Project | image_nm | nginx | subdomain | . 3 | 1 | 8031 | T31_ |   |   |   | . 3 | 2 | 8032 | T32_ |   |   |   | . 3 | 3 | 8033 | T33_ |   |   |   | . 3 | 4 | 8034 | T34_ |   |   |   | . 3 | 5 | 8035 | T35_ |   |   |   | . 3 | 6 | 8036 | T36_ |   |   |   | . 3 | 7 | 8037 | T37_ | _v1 |   |   | . P4 MORT: http://nighthawkcodescrums.gq/ . Period | Table | Port | Project | image_nm | nginx | subdomain | . 4 | 1 | 8041 | t41_ |   |   |   | . 4 | 2 | 8042 | T42_ |   |   |   | . 4 | 3 | 8043 | T43_ |   |   |   | . 4 | 4 | 8044 | t44_ |   |   |   | . 4 | 5 | 8045 | T45_ |   |   |   | . 4 | 6 | 8046 | T46- |   |   |   | . P4 YEUNG: http://nighthawkcodingteams.cf/ . Period | Table | Port | Project | image_nm | nginx | subdomain | . 4 | 1 | 8041 | T8041_sane |   |   |   | . 4 | 2 | 8042 | T8042_ |   |   |   | . 4 | 3 | 8043 | T8043_ |   |   |   | . 4 | 4 | 8044 | T8044_ |   |   |   | . 4 | 5 | 8045 | T8045_ |   |   |   | . 4 | 6 | 8046 | T8046- |   |   |   | . P5 YEUNG: http://nighthawkcodingteams.cf/ . Period | Table | Port | Project | image_nm | nginx | subdomain | . 5 | 1 | 8051 | T8051_ZestyYeung |   |   |   | . 5 | 2 | 8052 | T8052_udderly_delectable |   |   |   | . Notes from CSA . Please replace “web” in docker-compose with “web_t#” to ensure each container has a unique name &amp; replace “_v1” w/ “_t#_v1” in docker-compose.yml . Example GitHub Project Clones from Mr Yeung’s P4 and P5 . ubuntu@ncs-cf:~$ pwd /home/ubuntu ubuntu@ncs-cf:~$ ls T8041_sane T8044_MVQN T8047_lash T8051_ZestyYeung T8054_Scrum_Daddys T8057_CASA T8042_TAAL T8045_peacock T8048_united-rice-cubes T8052_udderly_delectable T8055_Sport T8058_time T8043_FriendshipTable T8046_dogs T8049_thedreamteam T8053_Flask_Swag T8056_berries T8059_lyntax .",
            "url": "https://nighthawkcoders.github.io/APCSP/2022/10/10/PBL-deployment_files.html",
            "relUrl": "/2022/10/10/PBL-deployment_files.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "System to System APIs",
            "content": "API Frontend to Backend Overview . This blog expects an understanding of RapdiAPI and using Python for request and response to obtain data. Additionally, it is shows that access to data can occur across Web Applications. Key takeaways from this blog… . Review API Terms | Flask/Python to provide API to simplify access for JavaScript Frontend developer. API credentials are hidden | Cache and calling RapidAPI or other APIs less | Access Control, firewall issues in Backend | . | FastPages/JavaScript handles formatting of data. | Understand Fastpages server &lt;--&gt; Flask Server &lt;--&gt; RapidAPI Server | Flask/Python Code . The Flask/Python Code has been heavily commented. Additionally, the file can be run, tested, and debugged. The lecture that goes with this will required students to step through debugging session as they review the code. . VSCode Project: flask_portfolio | Python File: api/covid.py | . The biggest learnings in Backend, in this code, versus Jupyter Notebook… . Blueprint for covid.py, the interaction and registration with main.py | The use of updateTime(), to only call API every 24 hours | Being able to Debug main tester method, this is critical to speeding development. | Understanding the API resources and how they are run as a service through the Web Application Set Breakpoint in covid.py file. | Run Server in Debug, select to right of play button an pick Debug. | Access API through browser, this will stop at selected breakpoint. | . | . Fastpages/JavaScript Code . The JavaScript Code has been documented and featured in the Fastpages site. The lecture that goes with this blog will share how to debug the JavaScript using the Chrome Browser. . VSCode Project: APCSP | JavaScript/Markdown File: 2022-07-10-PBL-rapidapi.md | . The biggest learning in Frontend, in this code, will be the interaction between HTML and the JavaScript. This is called the Document Object Model (DOM). . In this example. an HTML table is setup and JavaScript is used to Create and Update Element IDs in the Table. This is similar to the JavaScript table made in the Python Jupyter notebook, the big difference is the DOM syntax. | The concept of for loop is the same, though the syntax for (const row of data.countries_stat) and keywords are different. | Visual shows Inspect on a Chrome Browser. Load correct source, set breakpoints and reload page. Code is in center and data is on the right in illustration. This can reorient according to size of Source window. | . . Hacks . The big focus on of this hack is for students to adapt the project(s) to something that is helpful to the Scrum Teams final project. . Requirements System to System. Your team project needs to have a Frontend and Backend that are distinct projects. | Distribution of Development between Frontend and Backend developers. As you divide work and systems, I would suggest Scrum Master and Devops Engineer join either Frontend or Backend. | A Teacher suggestion is to start by using these files very closely! Make very small changes while incorporating API specific to the team. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/5.a/c4.2/c7.2/2022/10/10/PBL-api-system-2-system.html",
            "relUrl": "/5.a/c4.2/c7.2/2022/10/10/PBL-api-system-2-system.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "Big Idea 4 'The Internet'",
            "content": "The Internet . To date, with deployment individuals and teams have been very active Computing Systems and Networks. Here are some key elements that have been a part of the students Internet experience… . HTTP/HTTPs protocol. Think about elements in videos and experience so far in class that relate to this College Board topic. | DNS. Where is this show in the College Board materials. Think about Domain Name Service provider and places where you configured or used a Domain. Also, identify a Sub Domain and how it is different than a Domain. Include in discussion usage an purpose of https://www.whatsmydns.net/, A record and CNAME. | IP Address. Try to describe at least 6 IP addresses you use daily. Try using and understanding https://www.whatsmyip.org/. | Observe Internet Traffic. Try Linux tools bandwidth tools Article | Finish up with OSI. Try to make it real, according to what we have done. | Hacks . Show individual, pair, and team knowledge of Systems and interactions of Systems. . Review Big Idea Unit 4.1 videos and questions | Produce a Blog showing idea in ths Blog thinking about Systems and Devops so far in your experience. This blog will also show how you are planning and taking notes for College Board and PBL topics. | Electronic and Wall diagrams are highly recommended. These should be incorporated into blog(s). | .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/internet",
            "relUrl": "/collegeboard/internet",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "API",
            "content": "Plans Week 7 . Fixing errors and introduction to APIs . Monday: Live Review, Test Prep | Tuesday: Live Review, Career Tech | Wednesday: Career Tech | Thursday: Human Prep | Friday: Code, Code, Code | . AP Prep Multiple Choice . Code Corrections . Make changes to the Error Testing code to get the expected outcomes | Continue to add AP exam pratice problems into your blog | . API . Implementing API . Add an example of API to your submenu | . Github Fastpages Blog . Build a plan for your final project . Key objective is to show Program Design | Create an outline for the design of your project, do not forget the 6 college board criteria | . Live Grading Presentation.  . We will follow 3 to 4 team review format. . Observers will grade up to .9/1 X 3 on each of the elements mentioned above (2 individual and 1 team). Be sure to total up to 2.7/3 | Observers will note anything that was completed that is not mentioned in the outline. This needs to be tangible!!! If student met 2.7 standard, then extra items can make score 2.7+. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/7",
            "relUrl": "/points/7",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Virtual Private Networks",
            "content": "What Are VPN’s? . Virtual Private Networks, or VPNs establish a protected network connection when using public networks. VPNs encrypt your internet traffic and disguise your online identity. This makes it more difficult for third parties to track your activities online and steal data. . How Does A VPN Work . A VPN hides your IP address by letting the network redirect it through a specially configured remote server run by a VPN host. This means that if you surf online with a VPN, the VPN server becomes the source of your data. This means your Internet Service Provider (ISP) and other third parties cannot see which websites you visit or what data you send and receive online, and which can only be accessed if one’s VPN gets hacked; however, that is extremely unlikely to happen because VPN’s are very securely encrypted. A VPN works like a filter that turns all your data into “gibberish”. Even if someone were to get their hands on your data, it would be useless. . Setting Up A VPN (MacOS) . Navigate to your browser and search for a VPN and follow the websites directions for installation | Go to “System Preferences” and then “Network” | Click on the plus sign in the bottom left corner and use the drop-down menu to choose your VPN | Fill in the details for your chosen VPN in the fields “VPN Type” and “Service Name” | Create a new VPN network and fill in your “Server Address,” “Remote ID” and “Local ID” | Enter “Authentication Settings” and add your username and password | Click “OK” and Connect your VPN | Setting Up A VPN (Windows) . Navigate to your browser and search for a VPN and follow the websites directions for installation | Move into “Settings” and click on “Network” and then “VPN” | Click “Add a VPN” and fill out the fields for “Server Name,” “VPN Type” and your account information, which should be shared by the VPN provider you chose | Save your VPN | Go back into “VPN,” click on your newly added account and press “Connect” | Using A VPN . There are a host of different reasons to use a VPN. Below, I have listed a few reasons to sue a VPN . Make public Wi-Fi more secure | Protect your mobile devices | Hide your IP address | Data Privacy From Your Internet Service Provider | Data Privacy From the Apps and Services You Use | Access to Any Content in Any Place (Streaming shows that are on other countries Netflix) | Les likely to get hacked | . Recommended Software (Free) . Proton VPN Free | Privado VPN | Windscribe | Atlas VPN | Hide.me | Betternet (500 MB per day, as long as you don’t overuse data for one day which is extremely unlikely to happen) | . Recommended Software (Paid) . ExpressVPN (~$9/month) | SurfShark ($5/month) | NordVPN ($3.69/month for 2 years) | ProtonVPN ($6/month) | IPVanish ($3.33/month for the first year, then $7.5/month) | .",
            "url": "https://nighthawkcoders.github.io/APCSP/tutorial/vpn",
            "relUrl": "/tutorial/vpn",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "Deployment",
            "content": "Plans Week 6 . Learning to deploy on AWS. . Monday: Live Review, Test Prep | Tuesday: Live Review, Career Tech | Wednesday: Career Tech | Thursday: Human Prep | Friday: Code, Code, Code | . AP Prep Multiple Choice . We will now formally check to see if you are answering the MCQ on collegeboard. . Create a blogpost with proof that you have completed the questions. Will be checking 1.1 - 1.3 | Include any questions/difficulties you had with the problem sets | . AWS Deployment . Learn how to deploy on AWS . show the output of your curl command when you are done | make a change and show the change made in the browser | . Live Grading Presentation.  . We will follow 3 to 4 team review format. . Observers will grade up to 1.8/2 on deployment and 0.9/1 on AP prep. Be sure to total up to 2.7/3 | Observers will note anything that was completed that is not mentioned in the outline. This needs to be tangible!!! If student met 2.7 standard, then extra items can make score 2.7+. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/6",
            "relUrl": "/points/6",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Flask/Python Deployment Guide",
            "content": "Deployment Overview . Deploying a Web Application enables a Server and Web Application to be available to users on the Internet. Development Operations (DevOps) is understanding the tools and service used to enable the Web Application on the Internet. This process can use many different cloud services, as well as choice of many different tools. Here is an overview of what is covered in this procedure. . EC2: Amazon Web Services is a cloud computing platform that the PUSD district has provided for their students to serve our Web Application. | GitHub: The leading open platform to share a code across the Internet. | Docker and docker-compose: Used to host a Web Application. A Docker container prepares an environment that contains the Web Application code and all the dependencies (requirements.txt for Python) Docker is an open platform for developing, shipping, and running applications. | Nginx: In order to find a Web Application on a server, there needs to be a process that listens for the Web Application request and directs it to the Web Application service. Nginx is an open source software for web serving, reverse proxy, caching, load balancing, media streaming, and more. | Certbot: Web traffic on internet is reliably served over Secure Hyper Text Transfer Protocol (https). Certbot is a free, open source software tool for automatically using Let’s Encrypt certifications. | DNS: Natively, the web works off of IP addresses. Domain Name Services (DNS) allows the assignment of a friendly name to a Web Server. This name is built into Nginx/Certbot configuration files. Freenom is the cloud service described in this blog and has been used to register the nighthawkcodingsociety.com domain. | . Key/Values required as you go through these procedures . Listed are Keys, you need to obtain “values” specific to your Web Application setup. It is important that you recognize the sample “values” as you work through these procedures, then replace them with the “values” that are specific to your Web Application use case. . GitHub HTTPS link: | IAM user: | EC2 name: | EC2 Public IPs: | DNS Name: | DNS Subdomain name(s) | Docker Port: | docker-compose, proxy pass Port: | docker-compose, docker Image name: | Nginx server file(s): | . Server Setup and Initial Deployment . Development Operations (DevOps) begins with server setup. . Amazon Web Services (AWS): Electric Cloud Compute (EC2) Setup . Preparing and AWS EC2 instance is the process of creating a cloud computer. This process starts by logging into your AWS IAM user, searching for EC2. . To get started, launch a new AWS EC2 instance to learn process and understand how to work with Linux. here are some key considerations. Choose an Amazon Machine Image (AMI), the class will be using Ubuntu you should check on last verified version with a Teacher before proceeding | When it comes to picking memory or disk it is VERY important to pick Free Tier. As stated, this will only be used for testing and then it will be disposed for cost efficiency. | When presented with access dialog for http and https, make sure you check these boxes. Remember you are making a Web application that will run over http and https. | Name the security group (.pem) file after your self or team. It may be necessary to use SSH to access your EC2 instance. | The remainder of the steps you can use the defaults, refer to AWS documentation for guidance: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html | At the end of this process you need to “Connect to Instance”. This will provide you a terminal like experience. | . | . Deployment Process . Deployment begins with terminal connections. It is necessary to run commands to setup files to enable your Web Application to run on the Internet. . Connect to EC2 through cloud . Connect to an Ubuntu EC2 instance on AWS and then begin the system and software setup. . Select your machine and press “Connect” at top middle. | On next screen ensure things are lined “EC2 Instance Connect” and press “Connect” at bottom. | Only if this fails you will need to connect from our Anaconda terminal, we need pem file so place it in your home directory. | Either connection should work at home, school WIFI may be blocking, I have been trying to get this open. A Hot spot or VPN will solve connection errors. | . Update, Upgrade, and Install packages . Terminal commands are shown, these commands will be run from Terminal after you connect to your EC2 instance. It is advised that you try to comprehend and learn these commands as you go through these procedures. Understanding steps is how you become a DevOps Engineer. . These commands update and then upgrade packages in your system. . $ sudo apt update; sudo apt upgrade $ sudo apt install docker $ sudo apt install docker-compose -y $ sudo apt install html2text $ sudo apt install python3-pip nginx $ sudo pip3 install virtualenv . Clone and Change Directory to project location . This command moves your Web Application code onto you EC2 cloud computer. The example GithUb HTTPs Link is demonstration is: https://github.com/nighthawkcoders/flask_portfolio.git. . $ cd $ git clone https://github.com/nighthawkcoders/flask_portfolio.git $ cd flask_portfolio . Clone needs to be repeated for each Web application on the EC2 instance (Team repository and each individual repository). If repo is named the same use option parameter at the end of clone command git clone https://github.com/nighthawkcoders/flask_portfolio.git flask_portfolio_john, then cd flask_portfolio_john | . Test Web Service . These steps will require you to understand a few new commands that will not be part of final deployment process. However, these commands will help you understand machine dependencies and validate your requirements.txt for completeness. . $ cd ~/flask_portfolio $ virtualenv -p /usr/bin/python3 webapp $ source webapp/bin/activate $ pip install -r requirements.txt $ python main.py . Failed result. If you get a result that looks like the below, your requirements.txt needs work. In this instance, I would need to add flask to the requirements.txt. | . (webapp) ubuntu@ip-172-31-1-138:~/flask_portfolio$ python main.py Traceback (most recent call last): File &quot;main.py&quot;, line 2, in &lt;module&gt; from flask import Flask, render_template ModuleNotFoundError: No module named &#39;flask&#39; (webapp) ubuntu@ip-172-31-1-138:~/flask_portfolio$ . Correct result. A successful result will look like the following. At this point we will type “ctrl+c” and then at prompt “deactivate”, as we will now build and run a Docker File to deploy in more automated fashion. | . (webapp) ubuntu@ip-172-31-1-138:~/flask_portfolio$ python main.py * Serving Flask app &#39;main&#39; (lazy loading) * Environment: production WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead. * Debug mode: on * Running on http://127.0.0.1:5000 (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 710-199-540 . Create Dockerfile to run Web Service . A Dockerfile is a configuration used to run the Web Service. This is placed in a file called Dockerfile. It is best to add this to VS Code and pull it, or you can update in place with nano, vi, or vim editor and use command line commands to push it into your repository. The Dockerfile should be considered Code! . Edit the Dockerfile $ sudo nano Dockerfile . | Insert the Dockerfile commands, note that they are similar to Bash commands performed earlier. Follow prompts on screen to save file when complete, look for Key/Value (GitHub HTTPS link) that requires change for your project. FROM docker.io/python:3.9 WORKDIR /app # Update environment and install python and pip RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install -y python3 python3-pip git # Copy repo you updated with clone or pull COPY . /app # Install project specific dependencies RUN pip3 install --no-cache-dir -r requirements.txt RUN pip3 install gunicorn # Setup args to run 3 workers and run on port 8080 ENV GUNICORN_CMD_ARGS=&quot;--workers=3 --bind=0.0.0.0:8080&quot; # Allow port 8080 to be accessed by system EXPOSE 8080 # Run Web Application in production style CMD [ &quot;gunicorn&quot;, &quot;main:app&quot; ] . | . Create docker-compose file share Web Service . A docker-compose file is a configuration used to share your Docker Web Service and resources with the Linux system. This file enable Linux to have access to the container and the persistent data application via the /volumes location. . Once again it is best to add the docker-compose.yml in VS Code and pull it. You can edit it on the machine itself using vi, vim, or nano. | The image: needs to have unique name for each application on server (ie flask_john_v1) | The ports: left value 8086 needs to be unique for each application on server (ie 8087:8080, 8088:8080, etc) | Change device: to match path to volumes directory of your project. Verify this location is correct typing ls /home/ubuntu/flask_portfolio/volumes this should list files sqlite.db uploads | . Edit docker-compose.yml $ sudo nano docker-compose.yml . | Insert the docker-compose.yml Keys/Values. version: &#39;3&#39; services: web: image: flask_port_v1 build: . ports: - &quot;8086:8080&quot; volumes: - persistent_volume:/app/volumes volumes: persistent_volume: driver: local driver_opts: o: bind type: none device: /home/ubuntu/flask_portfolio/volumes # replace just flask_portfolio . | . Running Docker using docker-compose.yml . At this point, it is best to review complete files on GitHub and for Docker and docker-compose: https://github.com/nighthawkcoders/flask_portfolio. Review the Key/Values mentioned in this document. Make sure your Docker and docker-compose files a personalized to your project. . Ensure install of docker, docker-compose installed from earlier procedures $ sudo apt install docker $ sudo apt install docker-compose -y . | Make sure you are in project directory $ cd ~/flask_portfolio/ . | Run docker-compose $ sudo docker-compose up -d . | Output from docker-compose. When running this command, docker-compose will run all the Docker steps and build a Web Application running in a Docker container, a virtual environment. Creating network &quot;flask_portfolio_default&quot; with the default driver Building web Step 1/9 : FROM docker.io/python:3.9 &gt; d0ce03c9330c Step 2/9 : WORKDIR /app .... LOTS of STEPs and OUTPUT ... Successfully built 68d68ad9699b Successfully tagged flask_port_v1:latest WARNING: Image for service web was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`. Creating flask_portfolio_web_1 ... done . | . Verifying Web Application via Docker commands . Here is a look at some of the commands behind the scenes. None of these are required to get things working, but show the results of the Docker and docker-compose.yml files and commands. . docker-compose ps View the running Web process, “ps” is a linux command or option that provides information related to the processes on a system. Look at name and ports in relation to outputs of the docker-compose process and settings in docker-compose.yml file. $ sudo docker-compose ps Name Command State Ports -- flask_portfolio_web_1 gunicorn main:app Up 0.0.0.0:8086-&gt;8080/tcp,:::8086-&gt;8080/tcp . | docker ps View a more comprehensive list of all the docker processes on the system. In this process reports, many of the alternate projects running on this AWS server are show (ie your Team Members). You should be able to identify your IMAGE and PORTS, as they should be unique according to your docker-compose.yml file. $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 749a93bc11ce flask_port_v1 &quot;gunicorn main:app&quot; 45 minutes ago Up 45 minutes 0.0.0.0:8086-&gt;8080/tcp, :::8086-&gt;8080/tcp flask_portfolio_web_1 89155782b853 java_springv1 &quot;java -jar target/sp…&quot; 6 days ago Up 6 days 0.0.0.0:8085-&gt;8080/tcp, :::8085-&gt;8080/tcp spring_portfolio_web_1 9415d6397d2e python_cspv1 &quot;gunicorn main:app&quot; 2 weeks ago Up 2 weeks 0.0.0.0:8082-&gt;8080/tcp, :::8082-&gt;8080/tcp nighthawk_csp_web_1 4bf324458bf6 python_laxv1 &quot;gunicorn main:app&quot; 5 weeks ago Up 5 weeks 0.0.0.0:8084-&gt;8080/tcp, :::8084-&gt;8080/tcp lax_web_1 7a6dff6425e9 python_ctev1 &quot;gunicorn main:app&quot; 5 weeks ago Up 5 weeks 0.0.0.0:8083-&gt;8080/tcp, :::8083-&gt;8080/tcp cte_web_1 abd77b8e77af java_csav2 &quot;java -jar target/cs…&quot; 5 weeks ago Up 5 weeks 0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp nighthawk_csa_web_1 . | docker images This lists all of the docker images, or containers, that are used to serve the process shown above. The flask_port_v1 is the REPOSITORY is named in docker-compose.yml. The IMAGE ID is container for the running Web application. $ sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE flask_port_v1 latest 68d68ad9699b 51 minutes ago 1.01GB java_springv1 latest e85a584b1836 6 days ago 523MB python_laxv1 latest 713c84a30d3b 5 weeks ago 1.16GB python_ctev1 latest 1608eaee06c7 5 weeks ago 1.18GB python_cspv1 latest b9bb27be863b 5 weeks ago 1.12GB java_csav2 latest 4055a9fd5ea7 5 weeks ago 570MB python 3.9 d0ce03c9330c 7 weeks ago 915MB alpine latest e66264b98777 8 weeks ago 5.53MB openjdk 16-alpine3.13 2aa8569968b8 17 months ago 324MB . | docker volume ls This list volume names are the locations where application stores files that that the developer wants to keep. The volume name is specified in the docker-compose.yml file. $ sudo docker volume ls DRIVER VOLUME NAME local flask_portfolio_persistent_volume local nighthawk_csa_persistent_volume local nighthawk_csp_persistent_volume local spring_portfolio_persistent_volume . | . Testing localhost endpoint . Verify everything is working with your docker configurations. . Local Test of Web Application Endpoint. This should return HTML related to the home page of your Web site. If this fails, you need to review Docker and docker-compose configurations. Failed to connect means you need to review your port assignments in docker-compose.yml and the docker-compose ps outputs above. $ curl http://localhost:8086 . | More readable view of Web Application Endpoint. This requires sudo apt install html2text. This output is a form of Web Scrapping, as it pull text out of the HTML and makes it easier for us to read and identify the content. $ curl http://localhost:8086 | html2text . | Congrats. If you are to this point you are successfully running your Web Application with Docker and verifying that it is running with Curl. | . Test preparation for Docker Web Application using IP for Internet Access . Each student scrum team will perform Nginx test and verify Group Web Project is working on EC2 instance. This step is can only support a single Web Application at a time. . This Step is dependent on… . EC2 Public IPs: 3.233.212.71 | Docker Port: 8086 | . Enable Nginx to retrieve default Web Application using IP Address from internet request (Reverse Proxy)! . Install Nginx on Ubuntu servers $ sudo apt install nginx . | Go to location of Nginx server configuration files $ cd /etc/nginx/sites-available . | Open editor to Create your own “Nginx test configuration”. $ sudo nano test . | Edit your own Nginx server configuration making modifications to: IP Address: 3.233.212.71 | docker-compose, proxy pass Port: 8086 | . | . server { listen 80; listen [::]:80; server_name 3.233.212.71; location / { proxy_pass http://localhost:8086; # Simple requests if ($request_method ~* &quot;(GET|POST)&quot;) { add_header &quot;Access-Control-Allow-Origin&quot; *; } # Preflight requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Origin&quot; *; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Authorization, Origin, X-Requested-With, Content-Type, Accept&quot;; return 200; } } } . Activating Nginx configuration . Activate/enabled Nginx server configuration: nginx configuration file can be called what you want it to be. $ sudo ln -s /etc/nginx/sites-available/[your config file] /etc/nginx/sites-enabled[your config file] $ sudo nginx -t . | . | If there are errors, something is wrong… Perhaps you are missing semicolon at the end of server)name or proxy_pass lines. | Perhaps link to file in sites-enabled is bad as a result of bad syntax in ln -a command. There are two directories /etc/nginx/sites-available and /etc/nginx/sites-enabled. | The 1st is for preliminary editing, the second is for activation. Perform ls in /etc/nginx/sites-enabled and make sure all the names look correct. | Correct by rm of mistake in /etc/nginx/sites-enabled without deleting original file in /etc/nginx/sites-available. Then repeat ln -s command. | . | . | If there are no errors, restart NGINX so the server to activate /etc/nginx/sites-enabled files: $ sudo systemctl restart nginx . | . Testing HTTP endpoint . When completing this section, you will show that the Internet is resolving your Web application and port from an IP address (aka reverse proxy). . Verify AWS Web application again. Make sure curl is still working on local machine. Make sure endpoint you placed in Nginx test file match. $ curl http://localhost:8086 . | Now test public IP on the internet. Go to a browser anywhere in the world and type your IP address: http://3.233.212.71 . Note. Address is Unsecure and you are using IP address versus Domain. | Timeout problem. This means something is wrong with EC2 Public IP. | Nginx Default page. This means Nginx is working, but something is wrong with you Nginx test configuration. | Broken Gateway. This means Nginx is working, but something is wrong with Web Application endpoint on machine. This requires you to look at port configuration OR restart Docker. | . | . Congratulations. If you have arrived at this point you now have capability to access your team Web Application from the Internet. Hurray!!! . Final preparation the Docker Web Application using DNS for Internet Access . There are additional steps to this preparation. We need to direct the internet to the AWS server running the Web Application, this is done using Domain Name Service (DNS). After being directed to the Web Server, the server needs to respond to the HTTP (Hyper Text Transfer Protocol) request. The proxy of HTTP to your Web Application is manged by Nginx. Finally, we will Secure HTTP (HTTPS), with a utility called Certbot. . DNS provider and setup . Each student scrum team is required to learn how to obtain a DNS provider and setup an independent domain. . A picture is included to show key elements in setting up a domain with a DNS provider. The nighthawkcodingsociety.com is using Freenom as its service provider. As you build your own DNS endpoint, you will need to obtain your own IP address mapped to a Domain. . This Freenom illustration is dependent on… . DNS Name: nighthawkcodingsociety.com | DNS Subdomain name(s): battleship.nighthawkcodingsociety.com. cowboys.nighthawkcodingsociety.com | . A minimum configuration will have the two “A” type definitions using you Public IP address. These two are resolved with a single Web Application. The “CNAME” type is used for subdomains, these will resolve to a different Web Application. . Setup DNS mapping to your Public IP address now!!! This is needed to complete Nginx and Certbot configurations below. You will not be able to proceed until you have setup ‘A’ record. . . Open editor to Create your own “Nginx Web Application configuration” for your group project. This looks very similar to test configurations, but the change is the Domain names. These Domain names must be created through DNS provider and you must setup ‘A’ entries in DNS for them to work. For clarity, the name nighthawk should reflect your application name, domain or subdomain. The name needs to be unique for each web application (ie john_nighthawk for john.nighthawk.com). $ sudo nano nighthawk . | Edit your own Nginx server configuration making modifications: DNS Name(s): nighthawkcodingsociety.com www.nighthawkcodingsociety.com | docker-compose, proxy pass Port: 8086 | . | . server { listen 80; listen [::]:80; server_name nighthawkcodingsociety.com www.nighthawkcodingsociety.com; location / { proxy_pass http://localhost:8086; # Simple requests if ($request_method ~* &quot;(GET|POST)&quot;) { add_header &quot;Access-Control-Allow-Origin&quot; *; } # Preflight requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Origin&quot; *; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Authorization, Origin, X-Requested-With, Content-Type, Accept&quot;; return 200; } } } . Or, or in addition, edit your own Nginx server configuration making modifications to subdomain file (0 to many). These Domain names must be created through DNS provider and you must setup ‘A’ or ‘CNAME’ entries in DNS for them to work: DNS Name(s): flask.nighthawkcodingsociety.com | docker-compose, proxy pass Port: 8087 | . | . server { listen 80; listen [::]:80; server_name flask.nighthawkcodingsociety.com; location / { proxy_pass http://localhost:8087; # Simple requests if ($request_method ~* &quot;(GET|POST)&quot;) { add_header &quot;Access-Control-Allow-Origin&quot; *; } # Preflight requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Origin&quot; *; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Authorization, Origin, X-Requested-With, Content-Type, Accept&quot;; return 200; } } } . Activate/enabled Nginx server configuration: nginx configuration file: nighthawk $ sudo ln -s /etc/nginx/sites-available/nighthawk /etc/nginx/sites-enabled $ sudo nginx -t . | . | If there are no errors, restart NGINX so the server is an endpoint to the internet: $ sudo systemctl restart nginx . | . Testing HTTP endpoint . Before finishing, this is a good opportunity to review everything you have done. . Make sure curl is still working on local machine. | . $ curl http://localhost:8086 $ curl http://localhost:8087 etc . Now test unsecure HTTP endpoint on the internet. Go to a browser anywhere and type your DNS domain: http://nighthawkcodingsociety.com or http://flask.nighthawkcodingsociety.com. Timeout. This means something is wrong with EC2 Public IP. | Nginx Default page. This means DNS is working, but something is wrong with you Nginx configuration. | Broken Gateway. This means Nginx is working, but something is wrong with Web Application endpoint on machine, if this fails something is wrong with Web Application. This requires you to look at Docker and docker-compose configuration. | . | . Certbot install and configuration . Each student scrum team will learn Certbot on on AWS EC2 test server, establish working https web application. The final configuration will be on AWS server managed by Teachers or Student DevOps Engineers. . $ sudo snap install core; sudo snap refresh core $ sudo snap install --classic certbot $ sudo ln -s /snap/bin/certbot /usr/bin/certbot $ sudo certbot --nginx . Saving debug log to /var/log/letsencrypt/letsencrypt.log Plugins selected: Authenticator nginx, Installer nginx Which names would you like to activate HTTPS for? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: nighthawkcodingsociety.com 2: csa.nighthawkcodingsociety.com 3: csp.nighthawkcodingsociety.com 4: flm.nighthawkcodingsociety.com - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate numbers separated by commas and/or spaces, or leave input blank to select all options shown (Enter &#39;c&#39; to cancel): Cert not yet due for renewal You have an existing certificate that has exactly the same domains or certificate name you requested and isn&#39;t close to expiry. (ref: /etc/letsencrypt/renewal/nighthawkcodingsociety.com-0001.conf) What would you like to do? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: Attempt to reinstall this existing certificate 2: Renew &amp; replace the cert (limit ~5 per 7 days) - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 2 Renewing an existing certificate Performing the following challenges: http-01 challenge for nighthawkcodingsociety.com http-01 challenge for csa.nighthawkcodingsociety.com http-01 challenge for cso.nighthawkcodingsociety.com http-01 challenge for flm.nighthawkcodingsociety.com Waiting for verification... Cleaning up challenges Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_society Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_csa Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_csp Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_flm Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: No redirect - Make no further changes to the webserver configuration. 2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for new sites, or if you&#39;re confident your site works on HTTPS. You can undo this change by editing your web server&#39;s configuration. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 2 Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_society Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_csa Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_csp Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_flm - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Your existing certificate has been successfully renewed, and the new certificate has been installed. The new certificate covers the following domains: https://nighthawkcodingsociety.com, https://csa.nighthawkcodingsociety.com, https://csp.nighthawkcodingsociety.com, and https://flm.nighthawkcodingsociety.com, You should test your configuration at: https://www.ssllabs.com/ssltest/analyze.html?d=nighthawkcodingsociety.com https://www.ssllabs.com/ssltest/analyze.html?d=csa.nighthawkcodingsociety.com https://www.ssllabs.com/ssltest/analyze.html?d=csp.nighthawkcodingsociety.com https://www.ssllabs.com/ssltest/analyze.html?d=flm.nighthawkcodingsociety.com - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/nighthawkcodingsociety.com-0001/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/nighthawkcodingsociety.com-0001/privkey.pem Your cert will expire on 2022-03-06. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the &quot;certonly&quot; option. To non-interactively renew *all* of your certificates, run &quot;certbot renew&quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let&#39;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le . Update Deployment, this process is after you change code . This procedure is a very short, as much of the deployment performed is persistent on your EC2/Ubuntu. . Goto Project directory . Check your docker processes. Make sure git has nothing to commit. . $ cd ~/flask_portfolio $ sudo docker-compose ps Name Command State Ports -- flask_portfolio_web_1 gunicorn main:app Up 0.0.0.0:8086-&gt;8080/tcp,:::8086-&gt;8080/tcp $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES ee3fd0edfdcd flask_port_v1 &quot;gunicorn main:app&quot; 6 weeks ago Up 6 weeks 0.0.0.0:8086-&gt;8080/tcp, :::8086-&gt;8080/tcp flask_portfolio_web_1 $ git status On branch main Your branch is up to date with &#39;origin/main&#39;. nothing to commit, working tree clean . Shutdown process and update source . Stop docker processes and git pull . $ sudo docker-compose kill # run ps on docker-compose and docker and you should observe changes Killing flask_portfolio_web_1 ... done . At this point your server is down, look at it from browser . 502 Bad Gateway . Update code . $ git pull # dialog will look as follows remote: Enumerating objects: 42, done. remote: Counting objects: 100% (42/42), done. remote: Compressing objects: 100% (23/23), done. remote: Total 33 (delta 17), reused 24 (delta 9), pack-reused 0 Unpacking objects: 100% (33/33), 7.42 KiB | 474.00 KiB/s, done. From https://github.com/nighthawkcoders/flask_portfolio f0b6ba1..def0da9 main -&gt; origin/main ... These are the files you changed ... model_jokes.py | 4 ++-- requirements.txt | 8 ++++- . Rebuild and Restart Web Application . Force rebuild of docker container. This can take a couple of minutes. . $ sudo docker-compose build --no-cache Building web Step 1/9 : FROM docker.io/python:3.9 &gt; d0ce03c9330c Step 2/9 : WORKDIR /app &gt; Running in 3f705fefc681 Removing intermediate container 3f705fefc681 &gt; 9c6ebd23dcb1 ... Build steps 1 through 9 ... Step 9/9 : CMD [ &quot;gunicorn&quot;, &quot;main:app&quot; ] &gt; Running in 9ca595a79669 Removing intermediate container 9ca595a79669 &gt; 54ca7ab064b4 Successfully built 54ca7ab064b4 Successfully tagged flask_port_v1:latest . Run docker-compose . $ sudo docker-compose up -d Recreating flask_portfolio_web_1 ... done . Now server is up, test in Browser for recent change . Python Home Page . Good Examples . git clone Plan what your name will be on shared server and this can be different than repo name by using 4th argument. . git clone &lt;git_project&gt; avaflaskproject # identifiable name . docker-compose.yml (sudo docker-compose up -d) . docker-compose.yml Setup before you clone, this needs to be versioned controlled. There are 3 edits! . services: web: image: flask_ava_v1 # identifiable name for shared machine build: . ports: - &quot;8089:8080&quot; # port distinct from others volumes: - persistent_volume:/app/volumes volumes: persistent_volume: driver: local driver_opts: o: bind type: none device: /home/ubuntu/avaflaskproject/volumes # name consistent with repo . Docker PS . sudo docker ps Verification shows practice of easy to identify owners and ports. At this point it is very clear to see who owns Ports. . CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6f4572c00f22 flask_shruthi_v1 &quot;gunicorn main:app&quot; 3 hours ago Up 3 hours 0.0.0.0:8083-&gt;8080/tcp, :::8083-&gt;8080/tcp flaskpython_web_1 0dd6254cf662 flask_ava_v1 &quot;gunicorn main:app&quot; 17 hours ago Up 17 hours 0.0.0.0:8089-&gt;8080/tcp, :::8089-&gt;8080/tcp avaflaskproject_web_1 . Nginx IP test file (sudo systemctl nginx restart) . nginx IP address test file There are 2 edits. Notice the Public IP address on screen. Identify that with configuration. Also, what application will run on the IP address? . . Nginx sites-available (cd /etc/nginx/sites-available) . available directory names Notice names and how they can be identified. This is were you work on configurations. . ubuntu@ip-172-31-18-94:/etc/nginx/sites-available$ ls ava_nighthawk default shruthi_nighthawk test . Nginx file published to work with a domain (nano ava_nighthawk) . nginx domain name file This is identical to test file, but now it is working off of the domain versus the IP address. . server_name ava.nighthawkcodingsociety.com; . Nginx sites-enable (cd /etc/nginx/sites-enabled) . enabled directory names Notice how names point back to sites-available. This is setup with ln -s command. Whose file still needs to be published. . ubuntu@ip-172-31-18-94:/etc/nginx/sites-enabled$ ls -l total 0 lrwxrwxrwx 1 root root 34 Sep 28 21:31 default -&gt; /etc/nginx/sites-available/default lrwxrwxrwx 1 root root 44 Oct 2 20:19 shruthi_nighthawk -&gt; /etc/nginx/sites-available/shruthi_nighthawk lrwxrwxrwx 1 root root 31 Oct 4 00:48 test -&gt; /etc/nginx/sites-available/test .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/deploy",
            "relUrl": "/techtalk/deploy",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "GitHub and Git Sociology",
            "content": ". GitHub and Git . GitHub.com was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chaco. GitHub is a subsidiary of Microsoft since 2018 (kind of ironic with Git quote below), but GitHub is not Git it helps manage the server or backend. . Linus Torvalds invented Linux and about 2005 invented Git. Quotes by Linus: . “Talk is cheap. Show me the code.” | “Most good programmers do programming not because they expect to get paid or get adulation by the public, but because it is fun to program.” | Microsoft isn’t evil; they just make really crappy operating systems. | . In our environments, Git is local and it works with GitHub/Git is in the cloud. Together these tools together have become an industry standard since about 2015. Formerly in industry we used tools like (ClearCase and Perforce), before the 90s we had home brewed systems. Kind of like making smart backups of files. . Terms and Usage . A brief review of key commands and concepts. . A “git clone” makes a local Git repository (decentralized) from the cloud server (GitHub/Git). | A .git directory contains a local database (see illustration) that keeps track of local changes. | A “git commit” makes a child snapshot of the original parent on the local database. Git commits over time are a series of Secure Hashing Algorithms (SHA’s). This is the math behind a git snapshot. | The .gitignore file tells .git to ignore certain files in directory tree (ie files constructed from source or derived files, like ipynb files that turn into md files). | The “git push” command moves files from local system back to cloud server (GitHub). However, often a merge is required as the decentralized system can have many simultaneous contributors. Students will experience this when they share a repository. | To minimize conflicts, Developers use Git branches and/or GitHub Forks to push code to an isolated locations on the server/cloud. This simply delays the inevitable merge, but has benefit of keeping developers branch of project stable. | Pull requests is common process used to merge code from isolated Fork back to the primary GitHub repository. | A “git rebase” is a common command for Developer on an isolated Git branch to update their environment from the “main” branch. Often this is done prior to a “git push” back the “main” branch. | . Project Based Learning . In Project Based Learning, it is required that you have a policy on Contributing Guidelines. Many student have already experienced problems of merging and managing change, by editing code GitHub directly, while editing code on VSCode locally. This will be an every day occurrence when starting a GitHub/Git sociology. Thus, teams need to create a policy to communicate how Scrum Team or Others should contribute to your project. . GitHub and VSCode | . Hacks . Any sociology questions within team need to be answered with a Blog, A Scrum Master working with other Developers should establish the Github administration/sociology policies: . What is the main repository for your project? | Did you create a .gitignore to avoid committing files that ‘don’t belong in version control? Look at this tool for guidance. | Do you have a requirements.txt file to manage dependencies introduced to your Code Base? | Have you established Issues as part of your Development process? Creating Issues | Have you considered making Pull Requests to track development? Create Pull Request | Have you considered forks or branching techniques with pull requests? Link Issue to PR | Are you managing Issues on a Project Board/Scrum Board like Kanban? Tracking Issues | .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/github",
            "relUrl": "/techtalk/github",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "Big Idea 1 'Program Design'",
            "content": "College Board Big Idea 1 . Program Design and Development (Unit 1.3) . Lightly Review Videos and take notes on topics with Blog | Establish specific purpose of your program, brain storm and brain write ideas. Everything should be blogged. | Determine requirements (what you are going to do) and constraints (what you are not going to do), consider time and requirement to share project at the beginning of November | Describe the impact of your project. Think about the positive and potentially negative aspects of the project. | Use Agile Development process to manage the programming process (plan and make steps), use Issues and Kanban/SCRUM Board | Be sure to figure out some preliminary roles in team for design, development, deployment and test within your team, make sure roles are highlighted in your Issues and SCRUM Board | Be sure to acknowledge sources and inspiration used in establishing and creating your project | . . Project Planning . Teacher/Student need, Educational Study or Simulation, Campus Club, Campus Interest, Business Interest, Charitable Organization, etc. Of course, the greatest interest is Student Interest. The project will not work if only one student is interested. - Program Purpose and Function. Think about inputs, outputs, UI, and data that will be in the program. - Be sure to pick something that you don’t burn out on after a couple of weeks. If you are a couple days into something and it is not working it is best to change. - IMO, it is much more interesting to work on something that has 3rd party interest or that you design something with intention to acquire a 3rd party interest. Working on something to acquire accolades is a big motivator. . Begin a GitHub code base with Team. Some of ideation may come in playing with code. This could also be done in Jupyter Notebooks. | Data Abstraction. UML is pictured in article. Think about how data will be formed and managed. | Managing Complexity. Think about frontend and backend portions of the system. | Procedural Abstraction. Design some of the key objects of the system. Think about the key elements of User Design. This should help you divide work amongst team. Effectually, you will be creating the sub systems of the system in this design effort. | Algorithm Implementation. The key aspects of your project and its algorithms must be considered, prototyped early. This will help you understand capabilities of team and some of the longer/research required activities. | Testing. Be sure that you are performing iteration and testing as you go. Do not stack things up or integrate infrequently. Develop, Integrate, Test weekly!!! Also, think about the things that needs to be tested. Think about how to put data into the system auto magically to ensure quality is produced and everything is easily validated. | . Teacher Needs . PBL. Concept/Idea in CSP Education. This could be achieved using Blogging and Jupyter. Some have said, it is possible to pass the AP exam in 1 month of study. This would be 30 lessons / 1 hour lessons; of course there are likely limits on time in producing content. . Highlight all Big Ideas from CB. | Remake CB site to be Student Friendly, More Code, and less Video. | The Web Site covers key topics from CB, also includes Mini-labs, and thus should be interactive. The code and visuals should teach more than the words. | FRQs could be challenges or hack-a-thon activities that could enhance a Test Prep sessions. | . PBL. Concept/Idea around Classroom Management. Build data for a series of classroom needs. This could be CompSci, but these requirements are for me. . A system were students can do administration. Users and Passwords. A single source for all projects to minimize duplication of data across periods and transitions during year. Graduation year would be a big key, to active or alumni. | Access through accounts RESTful API | User Setting and Attributes for students to be self updated | . | Attributes Name, Grad year, and some other basics (birth day without year) | Password integration with Email | GitHUB ID, Slack ID | Track student history Track All GitHub projects for the user through Year (Tri 1,2,3) | Track all Period through year | Roles of Development for User through Year | Scrum Teams and other students worked with | Pull sources like GitHub commits | Runtime project that are alive | . | Integration with GithUb pages, ability to Comment on assignments | . | Backup of Data to JSON | Restore Data from JSON | . Hacks . Now is time to transition to Design and Development. Designs are required and must meet Teacher Approval. If you get negative feedback act quickly. Designs should be put together around a Blog. . Brain Write. The process of just elaborating on ideas and sharing them with your team. | Wire Frame, Concept. Before coding start to outline what the project will look like. | Modeling or UML. Before coding what data will you need. Think about data behavior, data interaction, or data description. Modeling and UML help with visualization. | . Additionally, some development of Concepts can/should occur. This should be focused on frontend or backend concepts. . Frontend. Wire Frame development is better than coding, at early stages. But if you have clear idea and can articulate it in HTML, CSS, and/or JavaScript. | Backend. Jupyter notebooks is a great way to thing about data and outputs. Often a console program can help you imagine data as well as interaction. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/design",
            "relUrl": "/collegeboard/design",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "UI Starters",
            "content": "Plans Week 5 . Focus UI design - Coming up with individual / team design screens using HTML/CSS/JS fragments. . Monday: No School | Tuesday: Live Review, Test Prep | Wednesday: Live Review, Career Tech | Thursday: Human Prep | Friday: Code, Code, Code | . HTML Python/Flask project (Individual) . Review W3Schools and Bootstrap to come up with individual design elements. Use different elements in the following locations. . Change or personalize index.html page | Change or personalize stub menu and stub.html. Rename according to interests. | . HTML Fastpages project (Individual) . Review W3Schools and JavaScript lesson to come up with individual design elements. . add new _pages with submenu | have a link from submenu to Jupyter Notebook that shows personal usage of Jupyter JavaScript kernel | have a link from submenu to a regular Post that uses HTML fragments and JavaScript data to build a table | . Team Project . Build or Draft a couple screens to introduce your final project idea. . Key objective is to show Program Purpose | One screen should be Fastpages blog either _notebook or _post highlight purpose of project and roles within the SCRUM team. | One screen should be Flask of Fastpages HTML/CSS/JS that engages observers into program purpose | . Resources . Refer to these resources to speed your introduction to Frontend Development . Fundamentals of HTML using W3Schools | Flask/Python Frontend uses template engine called Bootstrap | Fastpages uses theme called minima | Fastpages blog | . Live Grading Presentation.  . We will follow 3 to 4 team review format. At the review session, there will be an approval for the Trimester 1 project. . Observers will grade up to .9/1 X 3 on each of the elements mentioned above (2 individual and 1 team). Be sure to total up to 2.7/3 | Observers will note anything that was completed that is not mentioned in the outline (for instance a Twitter Card that works with Fastpages). This needs to be tangible!!! If student met 2.7 standard, then extra items can make score 2.7+. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/5",
            "relUrl": "/points/5",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "Agile Methodology",
            "content": "Agile Methodology . . Agile software development uses practices such as pair programming, test-driven development, stand-ups, planning sessions, and sprints. Agile includes the 12 Principles expressed in the Manifesto for Agile Software Development. . . Roles . To ensure transparency during the sprint the Team should meet daily at the daily scrum ( sometimes called a standup). As adaptation for classroom, Team should have a standup meeting for weekly plans, should have assignments for tasks, assignments for integration and deployment. . Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. | DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, managing dependencies (requirements.txt), AWS deployment are some of the key functions that impact velocity. | Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are … Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. | Backend Developer: Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. | . | . Workload . When planning there is an expectation of time. . Individual in Class Time. You should expect 3 to 4 hours of productive classroom work each week. | Individual at Home Time. To maintain pace in this class, you should consider a 2 hour coding or design session (weekly) outside of class time. | Sprint Calculation Time. 5-6 hours of coding or planning per week per individual, or 20-24 hours per team. If we had a two week Sprint this would be 40-48 hours of work. | Key to success. Make great use of time in class. Pair share programming typically provides three time dividend over individual programming when in class and you are learning something new. | . Issues . Sprint cadences have ideas/issues that are broken into short term work units called tasks. . Scrum Board / GitHub Project / Kanban Style . The Scrum Board contains issues that are assigned to individuals, each of these issues will have tangible deliverable links (code/video/…). Scrum Team will use Scrum Board to understand everyone’s ideas and efforts. This includes individual tasks. Use GitHub Projects add Issues to the board. Issues are placed in columns on a Scrum Board (Kanban) to represent progress. The below columns have been successful in our academic environment. . To do/backlog | In progress | Complete | Deployed | Reviewed/Done | Sprint . Sprint is a period of time that Team uses to plan work and execute work. This includes planning, research, development, deployment, and test. Typically, sprints will be 2 weeks or longer in the classroom. Anytime a sprint lasts longer than a week, there will be a weekly Review Tickets (formative assessment) and concluding with an end of Review Ticket (summative assessment). Sample sprint follows… . Week 1 Monday - Sprint Objectives, Scrum Team Planning | Tuesday - Test Prep Tuesday (Student Led) | Wednesday - Code, Code, Code | Thursday - Tech Talk (Teacher) | Friday - Code, Code, Code; Teacher 1 v 2, formative review | 2 hours outside of class for project work | . | Week 2 Monday - Sprint Crossover Grading, Scrum Team Planning | Tuesday - Test Prep Tuesday (Student Led) | Wednesday - Code, Code, Code | Thursday - Tech Talk (Teacher) | Friday - Code, Code, Code; Teacher 1 v 4 including Demos/Review Ticket/Peer, summative review | 2 hours outside of class for project work | . | . 7 Important Transferable Skills . Assessments / Reviews . During Teacher reviews meetings ( 1 v 2 pair, 1 v 4 team), the pair or team will provide Teacher with a Review Ticket. The Review Ticket will be completed, it should reference Tasks Completed and Self/Crossover Score(s). Canvas and/or Points Blog should be used as a guide to completing a review ticket, make sure you account for everything. Make sure a Point total is a the TOP of ticket, as points are important to you! All assessments will be looking for these 7 elements in your work… . Creativity Creativity doesn’t necessarily mean you paint or draw or sculpt well. Creativity in education and workplace, in many cases, presents itself in terms of how you approach tasks and solve problems, Do you do both inside and outside of the box for solutions? Or, do you stick to a planned system? If you solve even the smallest problem, you’ve demonstrated creativity. This skill scales up: Big problems are enlarged small problems; small problems scaled up are big problems. Conceptualize problems and solutions | Display foresight | Make connections | Make intelligent inferences | Synthesize ideas and data | . | Critical thinking Solving complex or abstract problems requires critical thinking, especially when the problems are critical. Not only that, but critical thinking skills also enable the discovery of deficiencies that could cause less than optimal results. The ability to take a step back and look at things more critically and say ‘Where might we have to have gotten this wrong?’ or ‘How might we be able to improve this?’ is critical thinking. If you can articulate this skill you will stand out! | Critical thinkers head off problems before they arise. And if they do surface, they take them head-on. | . | Communication Effective communication is the crux of everything you do. It doesn’t matter how creative or intelligent you are, or how many computer languages you know: If you can’t communicate well, your other skills are meaningless. Students are encouraged to talk about how they were able to bring their teams together. Verbal skills. How do you address an audience in terms they can understand. | Listening skills. Learning and understanding without defensiveness. | Writing skills. You need to be able to write in such a way that non-experts will understand. | Technological communication skills. You should be able to discuss highly technical hard skills in a way appropriate to your audience. Communication details are not the same for all audiences. | . | Collaboration through Leadership Leadership skills generally encompass communication, problem-solving and managing conflict, relationship building and being able to get people on your team on board with a mission or project. Leaders are big-picture thinkers who take various interests into account when making major decisions. Leaders are responsible for: Delegating responsibility | Demonstrating effective time management | Initiating new ideas | Major decision-making | Managing conflict | Managing groups | Multitasking | Teaching and mentoring | . | Collaboration - Teamwork Individuals that work well with others. This is a important category mentioned in early school. But it applies to High School, College and adults. Trust is the major difference between working alone versus working in groups. And trust can be hard: Some people are skeptical by nature or want to work through an entire project lifecycle solo. But placing trust in an active, dynamic team provides more than just project completion. Teamwork — a sense of community — elevates spirits and improves productivity. Accepting responsibility | Making and implementing decisions | Managing time wisely | Meeting both short- and long-term goals | Organizing | Setting and meeting deadlines | . | Researching Research is not a process performed by Teacher, Boss, or some upstream process. Everything you do in Technology requires research. Research is a key part of the lifecycle: changing plans, fluctuating results, and roadblocks require research before anyone can take action. Conversing with team members is a form of research: If you’ve asked a peer’s opinion on a technical matter, you’ve performed research. Analyzing information | Brainstorming solutions | Delineating needs and requirements | Extracting information from data | Gathering information | Forecasting possible roadblocks | Setting goals | Solving problems | . | Technical We live in a tech-heavy world, and you need to understand the tech your project requires. Try to stay current with the many technical advancements on your project. Make sure that play with the different softwares and platforms that are part of your environment. Be knowledgeable and speak to the technical things that you are learning. Being easy to work with | Quick to learn | Glad to learn | Failing and always willing to try new things | Willing to open new doors in case of a drastic oversight | . | Hacks . Key deliverables of this Tech Talk… . Build your own ‘Agile Methodology Diagram’, identify members and Team Member roles | Create a Scrum Board as a weekly output of Team Stand-up Meeting | Build an individual Issue and place it on the Scrum Board, repeat each week. The issue can point to Blog post(s) | Add to PBL vocabulary on your Fastpages / GH Pages | . .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/agile",
            "relUrl": "/techtalk/agile",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "Big Idea 1 'Program Purpose'",
            "content": "College Board Big Idea 1 . Program Function and Purpose (Unit 1.2) . Become familiar with Pseudo Code and style of questions. . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Hacks . Now is a good time to think about Program Function and Purpose of your teams final project… . Do we have final project ideas for a PBL Web Project? | Are we considering a project that is best for our educational purpose? | Is the project going to hold team members interest for 8 weeks? | Does the project have potential for someone to use it beyond the 8 weeks? ie Customer or Sponsor needed? | Does the project have potential to be used for Create Performance Task submission? | .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/purpose",
            "relUrl": "/collegeboard/purpose",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "Python Web Server Project",
            "content": "Plans Week 4 . Focus on running Python and Fastpages local Web Servers. Additionally, students will start process of making videos to show work. . Monday: Live Review | Tuesday: Test Prep - Collaboration | Wednesday: Tech Talk - Python and Fastpages local servers | Thursday: Human Day - Focus and Habits | Friday: Code, Code, Code | . Points will be awarded on these elements . Running a Python Web server locally . Follow Tech Talk and setup your own Python GitHub repository. . Clone GitHub repository and prepare VSCode for editing and running project. | Show your Python project running locally. Discuss local IP address and Port used to run server locally. | Show process of local edit, save, and refresh of impacted page on Web Server. | . | . Running Fastpages Web server locally . Follow Tech Talk and setup your Fastpages to run locally. . Ensure proper usage of .gitignore file of ipynb and docx files | Show your Fastpages project running locally. Discuss local IP address and Port used to run server locally. | Show process of local edit, save, and refresh of impacted page on Web Server. | . | . Live Grading Presentation.  . On Live grading day you will show a 1 minute video that shares how you can run, edit, change Python and Fastpages Web servers. . Show both servers running on your machine simultaneously. | Make an edit on each server in VSCode and show reflected change using Browser. | Show making a permanent change (Commit, Sync) on VSCode. | Show GitHub change list and show delta of change on GitHub Web Page | On Fastpages show initiated Action from change | On Fastpages show GitHub pages reflected change using Browser | . Live Review. Review ticket and playing a Video. 3 Teams/Tables will observe all other members. Approx. 12 - 1 minute videos. . Videos should incorporate something you took away for Focus and Habits in the Review Ticket, Video, or personal Blog. Perhaps something that shows Collaboration could get you and team toward 3 points. | It is suggested that you Create a YouTube channel, if you don’t have one. Videos should be placed in YouTube or Google Drive. NOT in GitHub, NOT in Slack. | Make sure you have a Team review ticket with all Video links. The twelve people watching should have a place to comment on each individual. | Be prepared to present fast, be quick, we think you should show everything in under 5 minutes for a Team of 4. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/4",
            "relUrl": "/points/4",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post73": {
            "title": "Flask/Python Web Application",
            "content": "Flask/Python Web Application . Next up is making a Web Application from a completely customizable framework and language. This project will focus on building a standalone Web Application. The intentions are to use this framework for Group work and backend work. At the conclusion of this article this project will only be run locally. Ultimately, this project will be hosted on AWS. . Flask is the Web Application Framework. | Python will be the Backend Development languages. | Jinja2 is the Web Template language, that work well with Flask and Python. | HTML, CSS, JavaScript will support frontend work built into the Flask project. | The external Fastpages/Github Pages project will use the Flask/Python project for backend services, like persistent data or databases (ie SQL). | . Setup Flask/Python Project . Start Flask/Python GitHub repo from a Template. Setup VSCode project to run python. Make a change and push to GitHub. . Generate your own copy of repository GitHub: https://github.com/nighthawkcoders/flask_portfolio/generate | “Copy” https address of newly Generated repository, use screen that looks like this: | Open terminal and goto your vscode directory: cd ~/vscode | Clone new GitHub project by run git clone &lt;paste/replace with https address&gt; | Run VSCode project code &lt;replace with name of project&gt; | In VSCode type Shift-Command-P or Shift-Control-P to select your Python Interpreter | Select Python that is in Conda environment | In VSCode terminal install project dependencies: pip3 install -r requirements.txt | Select main.py from VSCode navigator and press ▶️ in upper right corner. An alternate method is type python3 main.py in terminal. Observe terminal output, this sample illustrates a good outcome. | In terminal output you can shift-click on http://127.0.0.1:5000/, or goto Browser and type: 127.0.0.1:5000 | Navigate the site, look for things to change. | . Hacks . Try a little bit of customization and make sure you are able to run, edit, and push. Most changes should update while server is running . Conclude setup activity by pushing a minor change to Stub.html. This will verify GitHub support with VSCode. Click for VSCode guide for version control | Stub.html lines of code to for simple change | . | . &lt;div class=&quot;px-5 py-5 mx-auto&quot;&gt; &lt;h1 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Stubby Body&lt;/strong&gt;&lt;/h1&gt; &lt;p class=&quot;text-secondary&quot;&gt;Put your name here&lt;/p&gt; &lt;/div&gt; . Group/Collaboration activity. Share a GitHub project. . Make a team project, make each person as a Collaborator through GitHub settings. | Each member take the HTML file under the Project menu and customize it to point to individuals material (aka Fastpages). | GitHub gotcha when Collaborating on a Repo. Remember to Pull before you Push/Sync. The repository will be updating while your copy is isolated. Pull or Rebase gets you back on track with the shared branch of code. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/5.a/c7.1/2022/09/12/PBL-python_flask.html",
            "relUrl": "/5.a/c7.1/2022/09/12/PBL-python_flask.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post74": {
            "title": "Fastpages local server",
            "content": "It’s often useful to test pages locally before deploying, as it can save time and be helpful for testing quick changes/debugging. In this blog we’ll learn how to deploy fastpages locally using Docker. . Overview of steps . Download Docker desktop | (For Windows) Set up Docker with WSL | Run make server in repo directory | Click in terminal or type localhost link show (ex. http://127.0.0.1:4000/{repo name}) to view your Fastpages Blog site. | 1. Installation . Docker is a lightweight method to build, deploy, run, update and manage containers. Download Docker desktop from following links: . Windows: https://docs.docker.com/desktop/install/windows-install/ Mac: https://docs.docker.com/desktop/install/mac-install/. . Now, each time you want to make server, you need to start Docker desktop or make sure it running. Make sure you do this before building locally! . 2. (For Windows) Set up Docker with WSL . For Windows, to set up Docker with WSL use https://docs.docker.com/desktop/windows/wsl/. . (Optional) Download Docker extension in VSCode . VSCode has an extension too make it easier to manage docker containers and images directly in your IDE. To download, go to the Extensions tab of VSCode (left bar, or Ctrl+Shift+X), search “Docker” and download the extension from Microsoft. You should now see a docker icon on the left bar, which you can click on to see your Docker connections. . 3. Using VSCode Terminal, run: make server . In the local repository, make sure you are cd’ed to the base/root directory (i.e. where the Makefile is). For Ellen that was the ap-csa-fastpages directory as pictured. For Mr M, cd ~/vscode/APCSA sets him in his APCSA repository, here the make server command will work if Docker is running. . . The Makefile contains common aliased commands for building and serving your fastpages locally. If you look inside the file or run make in terminal, you can see what docker commands it can run. . . Specifically, we are interested in the make server command, which will build the container the first time and start the Jekyll server. If you remember from APCSP, Jekyll is what powers Github pages behind the scenes. You can build your GitHub Pages site locally using Jekyll to preview and test changes to your site. . Special steps for Windows . The first time, you might get this issue: . . If that’s the case, make sure this setting is toggled on in Docker desktop settings: . . It should ask you to reload and if you run the command again it should work now. . 4. View blog . After running, look for link to run Server. For me, this was http://127.0.0.1:4000/{repo name}: . Server address: http://127.0.0.1:4000/ . Server running… press ctrl-c to stop. . Shift-click server address to launch in Browser. . Leave the server running!!! . Make edits in VSCode and save the file. On each save, watch terminal in VSCode to see updates and regeneration of WebSite. . Refresh or click to Web page of change and you will see updates almost instantly. Refer to VSCode terminal to see any error encountered when running your server. As indicated ctrl-c will stop the server, however, I have left it running for hours of edits, testing, and commits to GitHub. . Alert, when you are satisfied with local changes… you must ✔️Commit and Sync to GitHub. The local server is used to preview and test change prior to Sync. Only after Sync, will others be able to see your changes. . . Add to .gitignore . A side effect of building locally is that it converts all the .ipynb and .docx files to .md. This means that some files will have duplicates after building – one in .ipynb or .docx, another in .md form. . To avoid duplicates masters when pushing to github, add the md generated files from to the .gitignore. This can be done by right clicking md file when preparing commits. Below is a sample .gitignore. The 1st three lines should be universal to all fastpages projects, the other files are specific to your project. . # Ignore from local build settings.ini Gemfile.lock images/copied_from_nb/ _posts/2022-08-15-AP-anatomy.md _posts/2022-08-22-HM-anthony_and_sahil.md _posts/2022-08-22-TT-darkmode.md _posts/2022-08-22-AP-primitives.md _posts/2022-08-22-TT-bash_tutorial.md _posts/2022-08-29-AP-using_java_objects.md _posts/2022-09-05-AP-boolean_ifs.md _posts/2022-09-19-TT-js_tutorial.md _posts/2022-09-26-TT-rapidapi.md . Resources . https://github.com/fastai/fastpages/blob/master/_fastpages_docs/DEVELOPMENT.md .",
            "url": "https://nighthawkcoders.github.io/APCSP/c7.1/2022/09/12/PBL-fastpages-docker.html",
            "relUrl": "/c7.1/2022/09/12/PBL-fastpages-docker.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post75": {
            "title": "Focus and Habits",
            "content": "Psychology and the Good Life, by Laurie Santos . This video is very relevant to students. Laurie Santos is a professor at Yale has produced one of the most popular classes of all time at Yale (1 of 4 students take this class). . Teacher Notes . In my first watch of this video, right after 2021-2022 school year, these were my observations in improving the well being of Computer Science at Del Norte. . The Teacher needs to reduce academic stress on students. | The Teacher needs to convince Students to form habits of successful people, as discussed in the video. These habits need to be formed collaboratively between Teacher and Student. | Students need to strive to form an attitude of success for life. This takes effort and commitment. Similar to exercise analogies discussed in video. | In active discussions with Ms Naidu who taught at Del Norte in 2021-2022, we determined the biggest weakness in students our students is Collaboration, not Technical. | Laure Santos request that students be grateful for their current situation. | . Teacher Message . The AP Computer Science classes at Del Norte in 2022-2023 is structured to do most of the work in the classroom. Students, please prioritize the 4C habits: Collaboration, Communication, Critical Thinking and Creativity in classroom. Additionally, focus, ask questions, Code/Code/Code, and make mistakes. If you do these things, you are in danger of getting 90% on all your assignments. . Agile and Psychology of the Good Life . A lot of the methods in Agile, Sprints, and Scrums are helping to establish habits and focus. As Engineers, we need to learn to put concepts together! . Habit helpers: Stand-up meetings, Issues, Scrum Board, Review Tickets, Sprints | Focus helpers: Reviewing Issues, Pair Coding, Making mistakes, Fixing Bugs, Scrum accountability | Look at my interpretation of students history over the years. How could habits apply to you and your team(s) through 2023? | . Hacks . Watch and build a vocabulary about how to use the “Psychology and the Good Life” and maintain it on GH Pages. Think about glitches we have in our mind and how we adapt to those glitches. Here are some ideas… | Blog a note of gratitude to someone on campus and someone at home, record your experience in GH Pages. | Make a gratitude list in your Blog. | Think about some goals you should set. | Think about the goals in conjunction with happy people. | Start your own personal journey into Computer Science by using experience and inspiration from Anthony and Sahil, Bria | .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/focus",
            "relUrl": "/techtalk/focus",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post76": {
            "title": "Big Idea 1 'Collaboration'",
            "content": "College Board Big Idea 1 . Collaboration (Unit 1.1) . Make sure you can log in and have access to College Board materials. . Typically, I would say lightly review Videos. This topic is by Jason Han which is one of the CB Teacher I resonate with best. There is about 11 minutes of video and you need to understand Collaboration better. | Take notes on topics within your Blog. Highlight anything that sounds familiar. | Complete the assigned MCQ questions. | . Hacks . This week is a good time to form the official Scrum Teams for the end of the Trimester project. This will be our last opportunity for adjustment. At this time, it is probably best to consider the questions or underlying thoughts alluded to in the MCQ… . Is my group setup strictly on the basis of current friends and common interests? | Is my group setup with diversity in backgrounds, gender, and perspectives? | Is my group best equipped for the skill sets needed for success in classroom? | . Any changes that are agreed upon by the tables and retain balance of numbers will likely be accepted. .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/collaboration",
            "relUrl": "/collegeboard/collaboration",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post77": {
            "title": "Creative Development Sprint",
            "content": "Points Link . Creative Development - Week 3 . In the Student handout… College Board states that Students need to obtain knowledge and skills that can include, but need not be limited to, “the iterative development process, strategies for collaboration, the development of both data and procedural abstractions, and describing an algorithm’s purpose and explaining how it functions. A development process includes ideation, research, reflection, design, implementation, and testing your program. . Scrum Board planning, revising plans, incremental goals, and iterative development are proven methods toward achieving a successful delivery. | Pair Share team needs to work together to optimize delivery to Teacher. | Each student needs to become competent in HTML fragments, Jupyter Notebooks, and Python. | Each student needs to begin technical application of College Board requirements in “Unt 2: Data” and “Unit 3: Algorithms and Programming”. | . Weekly Schedule . Tuesday (makeup Monday): PBL review below; “Live Review” with pairs: show personal progress in ideation and prototyping. | Wednesday: Test Prep - Code.org AppLab, Finish live review | Thursday: Tech Talk - Discuss Create Performance Task. | Friday: Crossover Review last 15-20 minutes with crossover grading | . PBL Ideation . Start the process of Ideation, Design, Scrum Board building, and assigning Issues prior to coding. Ideation are early ideas. . One unique idea, aka something useful to your pair and/or something that helps you in school | Show case work and labs from TPT and TT. | A page that highlights YOU | In this ideation process, it is critical that you Review College Board Create Task project requirements. | . PBL Prototyping . The process of Ideation, Design, Scrum Board building, and assigning Issues prior to coding. Early ideas, followed by early coding (prototyping) helps lead Developers into the iterative processes of Development. . This should be done using Pair Programming. A driver and observer, then switching. | . PBL Code/Code/Coding . This is bringing Ideation and Prototyping into something that has function and purpose. . Issues and Coding should show progress to Create Performance Task requirements. | This is a Creative Development Sprint, it is not expected to be finished. However, it should show iterative progress. | . PBL Test . Projects should be tested. Test-driven development (TDD) is a software development process relying on software requirements (Issues) being converted to test cases before software is fully developed. . Test cases should be developed within Issue before software is fully developed. | Testing and reviews can be combined with crossover grading. | Self and crossover testing and grading should consider how your ‘Unique idea(s)’ matches your Issue(s). | Undoubtedly, after this phase, new Issues are created; these issues represent changes that were not obvious when you started. | . PBL Development . At this point in time… It should be obvious that Development and Coding are not the same thing. Answer the question, “what is development?” or “why do they call people that code engineers?”. . . Progressive learning objectives to become a Development Engineer versus a Coder. Students need to establish a Trimester Long self-evaluation progress sheet on these objectives throughout the term.. Each time you do a review ticket you should consider with of these you have improved on. Proficiency in GitHub Pages/Fastpages and Jupyter Notebooks. Learn how to keep notes, search, tag, and develop code fragments in a personal GH Pages project | Become Active in Classroom Development Methodologies like Pair Programming, Issue Definition, Scrum Boards, GitHub Code Management, Review Tickets, Video making, Lesson Presentation, and Live Grading | Establish skills in Fundamentals of Programming using Python and JavaScript. Understanding Code concepts like Sequences, Selection, Iteration, and Procedural Abstraction | Become fluent in Data Abstraction using Arrays in JavaScript, JavaScript Object Notation (JSON), and Python Lists and Dictionaries | Establish Developer Operations (DevOps) skills in GitHub, Visual Studio Code, Linux, Bash, AWS and other Deployment tooling | Learn how to build the Frontend (JavaScript fetch) and Backend (Python/Flask) Web components of a Web Server. Become knowledgeable in Web Server endpoints and working with JSON. | Develop understanding on how Binary works and how it is the language behind all languages and data. Examine this more in depth through the exploration of binary abstraction used in Images | Relate all of the above objectives to the College Board Big Ideas 1-5 and the Create Performance Task requirement. Start self-evaluation process on GH pages. Additionally, Teachers will administer CB competency via MCQ testing available on AP Classroom | . . . Hacks - Live Grade before Monday AM. . This is a big planning and prototype week, Build all things into Scrum Board. Individuals demonstrate progress on assigned Issue(s) and then complete Issue(s)with tangibles. . DO NOT show up to a review without a Issue(s), mostly referred to as a Review Ticket with links to Tangibles. NEVER state that you don’t have an Issue or Commit because you were helping someone else. This statement will get you a 70% grade at best. | Provide Crossover and Self grade at the top of the Review Ticket. Anyone who rates their work above 90% must have something completed outside of the requirements. | GitHub Page and Jupyter notebooks makes it easy to have a link to your own tangible(s) in a working document. | A high quality Issue will reflect Ideation, Prototyping, Code. It is very easy to take 5 minutes a day to update your Issue before embarking into work. This is called Daily Planning. In fact, Daily Planning will help with your classroom focus | A good way to progress above 90% is to show how you are becoming a Development Engineer. | . | Each Pair performs Review each week with crossover Pair, use review to see if Issue is complete Crossover must make comments and grade within their comment, if individual has not done a crossover grade with comments they will receive 10% reduction on their score. | Individual grade and Crossover grade at top of Review Ticket is required. Make sure you do math on any rubrics provided, grade yourself on everything in the Canvas assignment, it does not matter what the vocabulary is around points and ownership. | If you score yourself higher than the grade you received from Crossover, show how you made adjustment/corrections. | Individual will need to discuss grading and reflection/learnings from crossover grading during their presentation. | . | Each Pair programming partnership should be prepared to complete their review with Teacher in about 2 minutes. Focus is on Creative Development. Be prepared to talk and accept feedback. | Focus on Review Ticket, Demo, Issues(s) completed, Failures, and New Issues Created | Optimize time for where you are the same. | Individuals should each speak to their own differences | Think about your vocabulary!!! For instance, when you say development… know how it is different than coding. | . | .",
            "url": "https://nighthawkcoders.github.io/APCSP/week/3",
            "relUrl": "/week/3",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post78": {
            "title": "Creative Development Points",
            "content": "Points will be awarded on these key elements . AppLab Planning/Blogging  . It is important that you make a plan and make note of the steps you take during this process. Work with your partner(s) on process, but you will create your own Blog. . Create a blogpost with an outline of your AppLab project before starting to code.  | Add to or create a blogpost with your thinking and ideas for creating your app, this should be done individually. | This blogpost should help remind you of successes and failures made during your designing process, so be reflective of your work. It is better, if you show the adjustments you needed to make in the process. | . AppLab Creation . This point is earned for the app itself. Add links or screen captures of your created app in AppLab to your blog. . The example app is a quiz, so the expectation is you are able to create your own quiz. You and your partner should work together, but can have individual customizations. | For those looking for a challenge, you can create a more involved app with your partner, testing potential ideas for your create task. | . Create Performance Task Planning/Draft . After going through AppLab process … Now go through the process, with your partner, thinking about what type of App or Web Page you will create for the end of the Trimester Night at the Museum Project that meets College Board criteria. Try applying your AppLab project design and ideas to the Create Performance Task project. . Suggestion is to create a Jupyter notebook for design to be able to add code or markdown in design discussion. | What are all the technical requirements for the project? What can you design now? | What do you need to learn to complete the Create Performance Task design process? What resources do you have available to start on the design journey? | . Live Grading Presentation.  . Each individual needs to perform their own AppLab work and updates.  However, we would like you to work on the design and solving problems as a pair.   On preliminary design and planning for Create Performance Task, work can be shared… . AppLab project runs with no errors and provides score at the end. Show all features in your app. | AppLab project has Blog in each individuals Fastpages that points to their AppLab project and contains design work according to hack guidelines. | Base off of AppLab project experience. Start to Brain Storm/Idea write a Create Performance Task Planning/Draft showing initial thoughts/purpose for a project, things you know how to do, things you need to learn. Plan to continue to use this blog to fill in future week to fill in the gaps. | Every time requirements Create Review Ticket.  Crossover grades, Crossover Comments, and Blog(s) used during week. | Be prepared to go fast, but show everything we should be under 5 minutes.  1 minute per person. | Jupyter Notebooks contain Markdown cells with comments to support code. | . | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/3",
            "relUrl": "/points/3",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post79": {
            "title": "Program Design with App Lab by Code.org",
            "content": "AppLab . App Lab is a programming environment where you can make simple apps. Design an app, code in JavaScript with either blocks or text, then share your app with Teacher or Student Peers. The big limitations of App Lab, that makes it simple, is that the HTML and CSS are not available to developer/student coder, thus it is not directly transportable to an independent Web server. . To start, please create a code.org account and click the link . Exploring App Lab . Go ahead and take a look at the interface, discuss with a partner what features you see. | . Console . In the code toolbox click variables and look at: console.log(“message”) Drag this into your workspace. You can change the message if you would like . The message does not print in the app. Where does it print? | Why would it be useful to have a print statement that the user does not see? | . Elements . Make sure you are in design mode and select the elements to drag into the app. Take a look at the changeable attributes of each elements. You can use the workspace to change these manually or you can try to change the attributes with a line of code. . In the code toolbox click UI controls. There are multiple functions that can affect the elements. Go ahead and play around with the different elements and see what you can do. Share something interesting you found with your partner. | How can you keep track of all the elements you created? | . | . Development and Design Activity . Here are some key requirements for this Activity… . Design and Development activity will start by reviewing a running example application | After review students will design a quiz, 3 question at a minimum. Be sure that a Development design is ready before you start coding | After design students will explore the App Lab programming environment | Students will then work in Pair Programming format and alternate in roles of Driver and Navigator. | At conclusion, pairs will go through a series of reviews. | . Review Running Example . This is an example of an incomplete program. . What could you do to improve this program? | . Design . Come up with your own idea for 3 question quiz. You will be creating your own quiz with a partner on a topic of your choice. The most important thing you do before coding is to PLAN. Make an outline of the quiz you would like to create before you do any coding, do this in your Blog!!! . When you are done: Share your program with the class here | Class programs can be found here | . | . Hacks . The Hacks on this assignment is described in the information above. . Blog your “design”, “successes”, discoveries, challenges. For “design”, and “successes” try to blog according to Create Performance Task skills and rubric. Program Purpose and Function | Data Abstraction | Managing Complexity | Procedural Abstraction | Algorithm Implementation | Testing | . | If you finish your quiz early, try coming up with a different concept or idea for an app you think could work within App Lab. Remember to make a plan before you start any coding. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/applab",
            "relUrl": "/techtalk/applab",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post80": {
            "title": "How I got a 5!",
            "content": "EXAM PREPARATION . TAKE THE NOTES! I know the Collegeboard videos are not the most interesting thing and a lot of them cover topics you may already know from class, but just taking simple notes may come in handy when you need to review towards the end of the tri. Also taking notes is very helpful for remembering overall concepts which means LESS REVIEW NEEDED LATER! | TRY ON THE QUIZZES AND PRACTICE TESTS! They are great practice, and searching up the answers is definitely not the way to go. | QUIZ AND TEST CORRECTIONS! They are a great way from you to learn the information if you didn’t learn it from the video. | BUT MOST HELPFUL (FOR ME)…Khan Academy Videos! I found that these videos were super helpful when I needed to review something really fast, but didn’t want to go to collegeboard. I really thought the videos/assignments on the internet were very effective for me. I think its a great resource to use just to review the topics that you are super confused or just want more clarification about. . They’re videos are super quick and straight to the point, which was good for relearning topics I already knew but needed a refresh on. For example, bits and binary was something that I couldn’t remember from the beginning of the year, and the videos helped me remember the basics. | They have assignments/articles for each topic that basically restate the information in the videos but more visually. The unit that covered data security and encryption is a good example of combining the videos and articles, and they definitely helped me understand public and private keys more. | Their practices are also pretty quick and straightforward if you are looking for extra resources other than the quizzes and practice tests. I used the practice tests about the internet because that was something I was not understanding just from Collegeboard practice. | . | THE EXAM . PAY ATTENTION TO THE QUESTIONS ON THE PRACTICE TESTS! The questions are very similar to what is on the exam. If you know them from the practice exam then you can save up on time from checking your work after you finish. | STARTING TIMING YOUR PRACTICE TESTS! The ones we were given in class were 50 questions. Once you get the hang of the first couple of practice tests, start giving yourself around a hour or an hour and a half to finish all 50 questions. This is gonna help you with pacing and with working under the pressure. | TAKE YOUR TIME! The test is 2 hours for 70 MC. You have time to double and even triple check your answers if you work at a good pace. With that being said don’t stress about not having enough time because you definitely do. | CREATE TASK TIPS . READ OVER THE INSTRUCTIONS CAREFULLY! Make sure that you are including each specific element in your project. It might be helpful to make a checklist with everything and check each item off as you are completing it with your project. I found myself having to review the guidelines a lot because there would be little things that I was forgetting, but doing so definitely made my project stronger. | REVIEW THE PAST EXAMPLES FROM COLLEGEBOARD! Seeing what ideas got lower scores guided me and I knew what to avoid including in my own project. Additionally, the good examples gave me some ideas of how other people included the required lists, iteration, and other items in a creative way. Though these examples might inspire you, make sure that you are coming up with your own idea and not directly copying. I looked at example A and B because those examples got all the points rewarded, so I looked at those for what to include and how much to write for my response. | I looked specifically at examples I and H because they both lost a bunch of points, so I made sure not look at what they did wrong and fix those error in my response. | . | CITE YOUR SOURCES! If you use code from somewhere else, dont forget to make notes throughout giving credit to the original creator. Even something as small as a loop needs to be cited if its from somewhere else. But definitely try to code everything yourself because it’s good practice and you learn a lot through actually working through the bugs in your project. | DON’T MAKE A BASIC GAME! This one is more subjective, but a lot of people were telling me that if you make something basic/generic like hangman or tic tac toe you are not going to get a good score. I think just try to be as creative as possible and make sure that your project has a geniune purpose because that’s an important part of the create task. Also please don’t do a GPA Calculator, its so overdone :) | REVIEW THE SCORING GUIDELINES! Don’t just assume you are meeting each requirement, check the guidelines. They let you know exactly what they are looking for, so its another great way to double check your work. | CODE IT ALL AT ONCE THEN REVIEW EACH SECTION! This is also more subjective, but I found it super helpful to code a basic idea of what my create task would look like and all the functionality in one sitting. Then as the deadline approached, I spent a day working through each sections, adding new functionality that reflected the requirements, and refining the code I already created to be more effcient. This was more helpful for me because I had way more time to refine the code and make it way better than that initial draft. | ADD COMMENTS TO THE CODE AS YOU GO! This is something that I wish I did because I ended up forgetting until the last days before the submission. It was not fun having to organize my code and add comments to each line right before the deadline. Adding comments to each section after you write the code is definitely ideal because you can remember exactly what the purpose is. | SPEND A DAY REARRANGING THE CODE! This was important for me because the order that my code was in only made sense to me. But obviously I’m not the one grading, so I spent time going through and arranging my code in a way that I thought would make sense to a random person going through it line by line. | MY CREATE TASK PROCESS LINKS . INITIAL ROUGH DRAFT . FINAL DRAFT . LINK TO VIDEO RUNTIME . Hacks . Students should create a Sprint Backlog. Here are some focus… | Educational zone(s), how to prepare for AP Classroom (MCQ) | Interest/Fun zone, unique idea(s) for create task | Blogging and Review zone(s), showing what you did and how | .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/bria",
            "relUrl": "/collegeboard/bria",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post81": {
            "title": "College Board Create Performance Task",
            "content": "Learning Create Performance Task, 30% of grade on AP exam . Each time we engage in Code/Code/Coding it is an opportunity to think of the possibility of fulfilling the Create Performance Task requirement. But, this is a student project and responsibility is on you. To be thinking and preparing is a mindset, one that Del Norte CompSci Teachers advise as we proceed through topics. Thus, we are getting and early start by using this Pair Share project as an iteration through the entire process, as that is the foundational principle behind PBL. . Teacher will help as directed by College Board… . Provide instruction, practice, and feedback related to content and skills that will help students succeed on the performance task. This can include, but needs not be limited to, the iterative development process, strategies for collaboration, the development of both data and procedural abstractions, and describing an algorithm’s purpose and explaining how it functions. | Brainstorm problems that programming can address or brainstorm special interests that students want to incorporate when developing a program. | Assist students in defining their focus and choice of topics without making selections for them (e.g., by asking questions). | Review the performance task directions and provide multiple opportunities to practice and discuss the entire performance task and individual prompts of the task. | Explain the role the teacher can and cannot play in providing students with assistance during the actual performance task; teachers should encourage students to take advantage of the opportunity to get assistance and feedback from teachers and peers during practice. | Review the scoring guidelines with students to help them understand how their work will be assessed. Teachers should remind students that the scoring guidelines align to the prompts in the performance task, so they must respond to all the prompts in their attempt to obtain the highest score possible. | . Disclaimer. Del Norte Computer Science Teachers are not experts in College Board scoring guidelines. It is best to look for examples of performance task submissions at high, medium, and low levels on College Board Web Site. Any grades you receive on any project in class may differ from scoring of the performance task by College Board. . General Requirements, from CB Exam Description . Prior to the official administration of the Create performance task, students need practice implementing programs that first include sequencing, then incorporate selection and iteration, and finally use procedures and lists. While collaboration on ideation and program design and development during the Create performance task is not required, it is encouraged. . You will be provided with a minimum of 12 hours of class time to complete and submit the following: . Final program code (created independently or collaboratively) | A video that displays the running of your program and demonstrates functionality you developed (created independently) | Written responses to all the prompts in the performance task (created independently) | . Del Norte Computer Science Principles Teachers are requiring students to do collaborative ideation, program design, prototyping and pair programming on these early activities that we grade in class. . Create Performance Task Skills and Rubric Breakdown (Out of 6 Points) . Note: There is no partial credit (0 or 1 point for each section). AP Computer Science Principles Exam is a through-course performance task that assesses Computational Thinking Practices 1, 2, 3, and 4 across six rubric rows. . Row 1: Program Purpose and Function . Assesses students’ ability to explain how a code segment or program functions. (Skill: Code Analysis) | For 3a, make sure to differentiate between program purpose and function They are defined in the scoring guidelines | . | . Row 2: Data Abstraction . Assesses students’ ability to use abstraction to manage complexity in a program. (Skill Abstraction in Program Development - data) | . Row 3: Managing Complexity . Assesses students’ ability to explain how abstraction manages complexity. (Skill Abstraction in Program Development explain complexity) | Be specific about how the program manages complexity in the context of your own program | . Row 4: Procedural Abstraction . Assesses students’ ability to use abstraction to manage complexity in a program. (Skill Abstraction in Program Development - procedures/functions) | Must be a student-developed procedure | . Row 5: Algorithm Implementation . Assesses students’ ability to implement and apply an algorithm. (Skill Algorithms and Program Development) | . Row 6: Testing . Assesses students’ ability to investigate the situation, context,or task. (Skill Computational Solution Design - testing) | . Collaboration Rules, from CB Q&amp;A . Collaboration happens when two or more students are actively engaged in the development of a program. Some examples of acceptable ways to collaborate are as follows. . 2 students who are writing the entire program together, perhaps using pair programming. | 2 or more students who have divided a larger, more complex program into different separate parts, each writing their own part and then assembling the pieces into the finished program. | Student(s) giving feedback on an independently or collaboratively written program. | Student(s) providing debugging assistance to another student or collaborative group of students. | . Del Norte Computer Science Principles Teachers want to see all of these prescribe methods of collaboration utilized. . Collaboration without Plagiarism, from CB Q&amp;A . If students are combining independently written program code with another student, they should cite that the program code is written by a collaborative peer. To protect the anonymity of the collaborative peer, students simply state that the portion of program code was written by their collaborative peer, rather than putting the names of themselves or their collaborative peer in the program code. . When completing the Create performance task, students will need to add substantial revisions and additional functionality when starting with preexisting program code. Simply changing an image in a game or the names of variables is insufficient. . Del Norte Computer Science Principles Teachers have zero tolerance for plagiarism. Misrepresenting your own work and not attending class (without makeup) are the only ways to get less than 70% in the class. Plagiarism is 0%, being in class is 50%, any individual effort with attendance gets 70%. The biggest jeopardy to getting a bad grade in the class is getting a 0%, the only possibility of such is plagiarism or missing class without makeup. . Additional Resources . 2021 Scoring Guidelines and Scored Create Task Examples Please note, these scoring guidelines were for 2021. Please check the CollegeBoard website in case there is an updated version. | . | AP Computer Science Principles Course and Exam Description Create Performance Task Verbs Explanation (pg 175 of Course/Exam Description) | . | The CollegeBoard AP Computer Science Principles Course includes videos scoring Create Task Examples Scoring examples | . | CollegeBoard’s Tips on the Create Task Information on written responses starts here | . | . Hacks . Start an outline on how you will prepare for the Create Performance Task project. . Review How I got a 5, by Bria | Establish a personal or pair Scrum Board with active and future Issues | Start a design that _post that can be reviewed to see if it meets the basicCreate Performance Task requirements. Be sure to pick something that you don’t burn out on or is not overly common. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/create",
            "relUrl": "/collegeboard/create",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post82": {
            "title": "Data Abstraction Points",
            "content": "Points will be awarded on these three key elements . Python Tech Talk . It is important that you create your own InfoDb.  This must be a data capture of your own interest.  The Jupyter page should include.  There must be a pair element in the programming. . Cell focused on InfoDb database definition.   | Function(s) that focus on printing your InfoDb according to your data abstraction and data definition requirements | Independent cells that show your data work with For loop, For loop with index, While Loop, and Recursion | The page needs Markdown and Code cells. Markdown sections should describe objective and purpose at the beginning, as well as describe each of the Code cells.  Additionally, each Python cell should contain comments. | Add a little flair for that extra appeal. An idea, is to add Input to adding records to InfoDb (combining learnings from last lesson). Don’t show up with a straight copy, this will not be meeting expectations. | . HTML/Markdown Fragments.  . As we are learning Lists, this week I believe it is very important for each student to build a Table.  This can be done in markdown or html.   This should have individual look, collaboration is OK, but you must have a distinct table. . This to be something “Productive”. | This requires you to use {{ }} liquid syntax somewhere in the table.  Please make sure you comment source of this key/value. | . Live Grading Presentation.  . Each individual needs to perform their own work and updates.  However, I would like you to work with the same InfoDB as your pair.   In presentation, consider the following… . Each individual contains two looping algorithms in their own repository.  All four are covered between pair. | Be sure to discuss your HTML/Markdown table and any additional flair | Every time requirements Create Comment in Blog.  Crossover grades, Crossover Comments, and Blog(s) used during week. | Be prepared to go fast, but show everything we should be under 5 minutes.  1 minute per person. | Jupyter Notebooks contain comments and Markdown cells | Output of Jupyter code is required | . | .",
            "url": "https://nighthawkcoders.github.io/APCSP/points/2",
            "relUrl": "/points/2",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post83": {
            "title": "Data Abstraction in Python",
            "content": "Points Link . Data Abstraction - Week 2 . As you use Python, as with all programming languages, managing data is a key skill. Data abstraction is the reduction of a particular body of data to a simplified representation of the whole. Or in other words, something that is easier for the developer to understand. Data Abstraction, along with Procedural Abstraction, are the keys making successful programs. Data Abstraction is vital when sharing data amongst developers, sharing data across the internet, or working in technologies like BioMed, Data Science, etc. . Variables are a way to name, store, data and reference data. We have started working with variables in our last sprint. Lists and Dictionaries are variables with extended features for storing and retrieving data. Lists, think of [] square brackets, are a way of grouping data in an ordered sequence, and will be a big part of the requirement for the College Board Create Task project. All students will need to become proficient in lists to do well in the class and succeed in the AP exam. | Dictionaries, think of {} curly braces, are a way of grouping data into in key-value relationships. Dictionaries are similar to JavaScript Object Notation (JSON). Knowledge of Dictionaries and JSON is key to Web Development. | . | . Daily Plans Week 2 . Introduce some concepts in College Board: Big Idea 2 Data (All Sections), College Board: Big Idea Section 3.2 Data Abstraction. . Monday: Introduction for Week. “Live Review” with full Table (4s). Start review topics in College Board. Build your vocabulary blog. | Tuesday: Test Prep - Discuss Lists and Dictionaries | Wednesday: Tech Talk - HTML fragments, including behind the Scenes Layout, Code/Code/Code, Completing canvas assignment | Thursday: Human Day - Anthony and Sahil blogging interests and progress in CS. | Friday: Practice Pair Programming Habit of 20 minutes/20 minutes each having 1 commit on Wednesday and prepare comment for next weeks review. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/week/2",
            "relUrl": "/week/2",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post84": {
            "title": "HTML Fragments",
            "content": "HTML Fragments and Markdown . Building an entire Web Application frontend requires HTML, CSS and JavaScript. In our Fastpages/GitHub Pages a lot of the frontend design work has been done by using Fastpages and Minima theme. Jekyll takes our choice of layouts in our _config.yml file (theme: minima), along with our HTML and Markdown fragments and build a complete static website. . Review these Fragments . Table Fragments . In Fastpages you can build a table in HTML or Markdown. Building in markdown allows you to take advantage of Jekyll. . The index.html does markdown conversion and builds a table with blogs | The _posts/**pseudo_code.md file builds a table with Markdown | . Images . In Fastpages you can insert images in HTML or Markdown. The Teacher finds &lt;img&gt; easier to work with for embedding links when trying to control size. . See index.html for “img” usage | Lookup ![]() syntax for images in markdown guides | . Links . Look up &lt;href&gt; and []() syntax in both HTML and Markdown. These should become easy and familiar. . Tagging . Make sure to use tagging and make it provide a nice index into your information under “Tags” menu. If you have a page Week1, Week2, Week3, in a post, perhaps . toc: true layout: post description: HTML fragments are portions of code used in a greater coding system that enable functionality specific to the current page. Fragments in HTML are a way to abstract complexity. The greater coding system we use is GitHub Pages which uses Jekyll and Liquid to build and programmatically construct fragments into the larger web site. categories: [weeks] title: Week 2 - HTML Fragments . Web Page Layout . A complete HTML Web Application is typically made off of a Layout and a series of Fragments (sometimes called templates). . Web Page Layout. This illustration becomes important when you make your own layout and fragments using frameworks like Jinja2 (for Python) or Thymeleaf (for Java). | The design of GitHub pages allows us to change themes with the _config.yml file (theme: minima) key/value, change the value to a supported theme. But, on my tries it does not work because fastpages has added many features specific to minima. However, you can temporarily change to different look by changing the remote theme to the following location in your _config.yml | Minima theme, click on link for accurate syntax. Everywhere you see an “include” this layout is including a fragment to complement the page, things like CSS, JavaScript, headers and footers are included into the layout. Where you see “content”, this is the statement that includes page specific fragments we have designed added within the layout. You should associate all of this to “Procedural Abstraction”. | . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &quot;include head.html&quot; &lt;body&gt; &quot;include header.html&quot; &lt;main class=&quot;page-content&quot; aria-label=&quot;Content&quot;&gt; &lt;div class=&quot;wrapper&quot;&gt; &quot;content&quot; &lt;/div&gt; &lt;/main&gt; &quot;include footer.html&quot; &lt;/body&gt; &lt;/html&gt; . Dark Mode . I have seen several student customize CSS on their front page. This enables them to add color. In our fastpages project, there is a special way to customize. Look for the direct _sass, it has a minima folder. Inside this directory you will see many sccs files, this is the Sassy of customize your project. . Article and findings by Vunsh in CSA to customize to Darkmode | People have customized the dark-mode.scss file to alternate color schemes for different colors, for instance instead of black, I saw Saathvicka change to dark green | . Alert to Students . Students spending majority or large portions of time writing custom CSS will be counter productive to College Board goals and CTE goals for this class. Be aware that HTML style is important, but we are trying to focus more on utilizing framework (GitHub Pages) to maximize our success in the style area. Developers, particularly new Developers, need to ensure they are spending majority of time in the key technical of instruction. Pair Programming and Team Programming are aids in speeding up learning, these collaborative techniques are not intended to be used to defer key technical learnings to others!!! In our first week, I saw code that was not understood by the person asking questions. In 2021-2022 several students lost a grade (A down to B) at the end of the trimester because they were out of balance and were solely focused on CSS/style. . As an illustration, look at the minima them. Look at the analytics and work that went into it. Leverage off it, don’t recreate it! . Hacks . At the end of this week you should have your theme complements (try altering dark-mode), index.html alterations, a table, multiple external links, and multiple images in your site. . Take a screen shot of temporarily changing remote theme, analyze problems in sight after doing so. Blog your findings. | Time Box fragments are very important to show what you have done each week. I want to see cumulative personal history for the Trimester and for the Year. | You should be able to show how you have considered naming an Tagging to help you find materials under categories. | You should be able to show how you have considered search and how you are able to find key elements in your site. | Advanced and part of what would be considered Coding…. Look at how blog or tags is displayed, look at adding data to _config.yml. Look at liquid, put all this together to make a table or time box the lazy programmer way. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/html",
            "relUrl": "/techtalk/html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post85": {
            "title": "Introduction to Python",
            "content": "Points Link . Introduction to Python - Week 1 . Introduction to Python sprint is a time to learn and obtain basic skills needed to Code a little bit. . Learning basics of Python | Learning how to Check setup work using Bash | Capturing notes and coding while building a Fastpages/GitHub pages and a yearlong individual notebook | Establish positive PBL habits: a focused mindset in the classroom, establishing work habits to achieve success. | . Daily Plans Week 1 . Discuss some concepts in Big Idea 3 Algorithms and Programming. Always Code/Code/Code in classroom when schedule allows! Practice Pair Programming Habit of 30 minutes/30 minutes/1 commit each and start of “Personal Computer Plan”. Here is a resource that can help you do a Python Overview, though use Jupyter Notebook and VSCode instead of the suggested IDLE. If you use this resource, try to create something that looks similar to their website; this will teach you how to design based off of what you see. . Monday: “Live Review” with pairs: show personal progress in setting up tools with Teacher. Doing checks with Bash Jupyter notebook. | Tuesday: Test Prep - Discuss Anatomy of Python. | Wednesday: Tech Talk - Fastpages, Jupyter Notebooks, Markdown : Tour of working on _posts and _notebooks. | Thursday: Tech Talk - Focus and Habits, video frm Yale. | Friday: Code/Code/Code - Pair Programming in Jupyter Notebook. | . Points and Tangibles . Points (see canvas), live reviews will be scheduled in class on Monday of next week. Everything will be crossover graded using a “Review Ticket” Individual/Pair _posts: “Personal Computer Plan” | _posts: “Focus and Habits” video from Yale | _notebooks: “Anatomy of Python” | _posts: “Review Ticket” | . | . | .",
            "url": "https://nighthawkcoders.github.io/APCSP/week/1",
            "relUrl": "/week/1",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post86": {
            "title": "Fastpages Frontend Development - Tour of GitHub Pages",
            "content": "Tour of Fastpages . . GitHub Pages is a static site hosting service that takes files straight from a repository on GitHub,runs the files through a build process, and publishes a website. Fastpages is built on top of GitHub pages. Fastpages automates the process of creating blog posts, so you don’t have to manually run conversion scripts. This tour begins by looking at Explorer in VS Code. There are three automations to a GH Pages / Fastpages website... . _notebooks: jupyter .ipynb files. This allows building block of markdown, python, java, javascript into a jupyter notebook. | _posts: markdown .md files. This supports frontend web design with markdown, html, and javascript. | _word: word .docx files. This allows you to save Microsoft or Goggle documents into a docx format. Saving these directly to _word folder will streamline steps. | . Read more or review files in the fastpages README.md . . Resources . There are many resources, tutorials, and reference for building pages with HTML and Markdown. On these subjects, I would say learn it when you need it. Right clicking on Chrome provides View Page Source on any link on the Web. The APCSA/APCSP projects have many examples within these projects. Here are a couple of Web links I often find through google or refer to when looking for ideas … . HTML on W3Schools | Markdown Cheat Sheet | . Home Page . The Home page is sourced by the index.html file. This is the file to personalize and customize your Fastpages home page. BTW, index.html is the standard name for your web sites landing page. GH Pages / Fastpages builds allows you to mix Markdown and HTML within the index.html file. . Sub Pages . Look under _pages folder within the Navigator. In this directory, there are several .md files. These allow a combination of HTML and Markdown. Observe that this project has prefix of 01, 02, 03 on the .md files allows control the order of menus from left to right… . 01_search.md: This provides a very cool search on the site. The search.md is renamed but the contents are untouched from fastpages project. | 02_tags.md: This provide a very cool tagging system that is related to the “categories: categoryname” that are seen at the top of all the GH Pages / Fastpages _posts. This tags.md is renamed but the contents are untouched from fastpages project. | 03_about.md: This page is left for your individual customization, similar to index.html | Developers can add .md file of choice and order according to preference. | . Images . Look under images folder and you will see files added to support the site. Some are for customization of the site others are for pages. . Site: favicon.ico, logo.png | Pages: agile.webp, apcsp.png | . GH Pages YAML files . The _config.yml has many strings and preferences that are specific to the site. The file is full of comments that describe what can be changed and what should remain untouched. Note, the .yml files will be seen again as we begin to deploy our own site with Docker. . Hacks . Personalize index.html file and build your own Fastpages / GH Pages for personal use throughout the year. . Add _pages/notes.md or _pages/vocab.md, insert between tags.md and about.md. Use this area to capture idea and terms throughout the year. | Add some personal study or work pages. Consider how you will use these in conjunction with notes/vocab pages, search, and tagging. Publish _notebook file | Publish _post file with image | Publish _docx file from Google Doc source | . | . Extra Credit . Consider re-designing and using your home page for this class and for other subjects, other than Computer Science. The searching and tagging features are very powerful and could help recall notes from any class. .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/fastpages",
            "relUrl": "/techtalk/fastpages",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post87": {
            "title": "VSCode Download with WSL",
            "content": "Instructions to Download Visual Studio Code Remote - WSL . Windows is the number one desktop operating system. However, Linux is a preferred standard for many developers. Using WSL you can develop in a Linux-based environment, use Linux-specific tool chains and utilities, and run and debug your Linux-based applications all from the comfort of Windows. This gives the developer on Windows the best of both worlds. . Download WSL . This section of the document is intended to get the WSL distribution of Ubuntu installed on you Windows PC. . Open a PowerShell. Enter WSL installation command at Prompt: wsl --install . | If you receive error the required operation requires elevation You will need to perform wsl install command again, but 1st elevate permissions using command: start-process PowerShell -verb runas | As it states in output in shell, you will need to reboot your computer. My suggestion is to select Restart or if available Update and Restart. | After booting up there are several things that could occur A Command or PowerShell prompt could automatically pop up prompting you for a username. Choose a username and password to create an account. | Some other event may occur. Make sure you establish password when requested. Verifying or take action in Command or Powershell, try these as C: Users &lt;username&gt;… | . Type wsl --list, you should see Ubuntu | If no Ubuntu, Type wsl --list --online, then use wsl --install -d Ubuntu | After success | . | After WSL install, verify the following before you continue: Open Command or Powershell, Run as your own user account. | . Type wsl, this should put you in a different looking prompt. From C: Users &lt;username&gt; to &lt;username&gt;@MSI: | If you ever need to elevate permission for installation sudo wsl, followed by your computer password. - Observe that drive changes from C: to /mnt/c when you change prompt from native Windows to WSL. | . | Download Visual Studio Code . Installing Visual Studio Code (VSCode) with the Remote extension lets you use the WSL as your full-time development environment right from VS Code . Install VSCode, Download VSCode Windows Version | When prompted to Select Additional Tasks during installation, be sure to check the Add to PATH option so you can easily open a folder in WSL using the VSCode code command. | Install the Remote Development extension pack | Opening up VSCode with WSL . Open a WSL terminal window (using the start menu item or by typing wsl from a command prompt / PowerShell) | Navigate to a folder you’d like to open in VS Code Here are some useful commands for our work cd ~ # takes you to your personal directory on Windows mkdir vscode # creates a folder to clone your repositories ls # views the content of the directory you are currently on cd ~/vscode # changes the directory to path for vscode files git clone https://github.com/nighthawkcoders/APCSP.git # clone repo cd APCSP # changes the directory to path for APCSP repos assets code . # opens APCSP in VSCode cd .. # changes the directory to the previous/parent directory git config --global user.email mygmail@gmail.com # tell git your email git config --global user.name mygithub # tell git your github id . | Type code . in the terminal. When doing this for the first time, you should see VS Code fetching components needed to run in WSL. This should only take a short while, and is only needed once. | Opening up VSCode with WSL terminal . Here is sample of steps with WSL equal to shay These steps will need to be adapted to your environment. . These two commands help git to understand your identity shay@MSI:/mnt/c/Users/ShayM$ git config --global user.email shay@gmail.com shay@MSI:/mnt/c/Users/ShayM$ git config --global user.name shay . | These commands clone a repository and load VSCode for work shay@MSI:/mnt/c/Users/ShayM$ mkdir vscode shay@MSI:/mnt/c/Users/ShayM$ cd vscode shay@MSI:/mnt/c/Users/ShayM/vscode$ git clone https://github.com/nighthawkcoders/APCSP.git Cloning into &#39;APCSP&#39;... remote: Enumerating objects: 8306, done. remote: Counting objects: 100% (2360/2360), done. remote: Compressing objects: 100% (723/723), done. remote: Total 8306 (delta 1312), reused 2305 (delta 1262), pack-reused 5946 Receiving objects: 100% (8306/8306), 16.27 MiB | 1.11 MiB/s, done. Resolving deltas: 100% (4360/4360), done. shay@MSI:/mnt/c/Users/ShayM/vscode$ cd APCSP shay@MSI:/mnt/c/Users/ShayM/vscode/APCSP$ code . Installing VS Code Server for x64 (6d9b74a70ca9c7733b29f0456fd8195364076dda) Downloading: 100% Unpacking: 100% Unpacked 2416 files and folders to /home/shay/.vscode-server/bin/6d9b74a70ca9c7733b29f0456fd8195364076dda. shay@MSI:/mnt/c/Users/ShayM/vscode$ . | . Setup Observation . VSCode with WSL shows a WSL indicator in the bottom left corner of Window. . Resource . Read more on WSL and VSCode VSCode doc .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/vscode-wsl",
            "relUrl": "/techtalk/vscode-wsl",
            "date": " • Aug 15, 2022"
        }
        
    
  
    
        ,"post88": {
            "title": "Tool Setup Sprint and Pair Programming",
            "content": "Points Link . AP CSA COURSE OUTLINE . Methodology. Project Based Learning (PBL) | AP Classroom. The 10 Units of AP Computer Science A | Code.org curriculum challenges | . | Key Principles Leaning to Code Mini Labs on PBL, AP, and Code.org challenges | Programming, Algorithms, Databases, and APIs | Team and Individual Project will highlight all 5 Big Units, either academically or in interest fashion | . | Succeed on Exam Work with AP MCQs and Create Performance Task | Work with Code.org segments to complement Test Prep | Student led Paper FRQs and MCQ analysis exercises | . | Preparing for Internships, “Real World” Follow practices to becoming a software engineer | Collaboratively Build, Deploy and Host Web Pages | Establish “Real World” Scrum Team projectsPreference with Customer/Sponsor | Follow Agile methodology using GitHub, Issues and Projects tools | . | Become a Blogger Build individual GitHub Pages Web Site to _post Notes and Learnings | Learn to publish and share what you have learned | . | . | . “Real World” Projects . You, your pair, and your Scrum Team will collaboratively Build, deploy and host Web Site. This Web project contains Technicals learned throughout the Trimester. This will be done in increments. Each Monday an assignment will be given and the next week it will be under Live Review. . Feature Considerations for Project Project Requirements A fun zone, unique idea(s) | Educational zones that capture every key learning objective | A location that highlights individuals, jobs, and technical capabilities (About Us) | . | Project Technicals Managing PBL Requirement for Project (Issues, Scrum Board) | Use of “Python Functions and Classes” in backend. | Use of “JavaScript” or “Jinja2” in frontend | Data Structure exchange between frontend and backend “SQL” or “MongoDB” | . | . | Individual GitHub Pages considerations for Big Ideas 1 - 5 Each week we will be studying Big Ideas in Collage Board Test Prep and PBL Tech Talks | GH Pages should be used like notes to capture PBL, Python, JavaScript key learnings each week! | BTW, using GH Pages will make you Code and Blog at the same time. Jupyter Notebooks using Python and Markdown will enable running code in notes, the Teachers like running code! Jupyter Notebooks can also do JavaScript, Bash and other languages. | . | . Establish PBL and Comp Sci attitude . Watch a video How I Would Learn To Code . Attitude. An Agile mindset is not knowing the answer, making lots of mistakes and performing iteration. A successful grade is dependent on making mistakes, research, asking questions, and iteration. | Suggestion. Please bring a personal laptop to class daily. The Internet and AP Classroom web site will be considered a text book. | Requirements. Everything will be distributed electronically. All code you develop will be delivered to the Cloud. No paper! | Grading guidelines. There will be key technical objectives which will require producing tangibles. Essentially, it is impossible to be late with work if you work consistently attend class, work in class and turn in progressive tangibles each week. Thus, failure to have work will result in a 10% deduction. Additionally, late work must be defended in office hours. High “A” is very tough to achieve, something beyond the given tangible requirements. Something that exhibits an unforced desire to learn and Code/Code/Code. | Low “A” is consistency in producing tangibles toward Team Project and Individual GH Page according to Issues and Scrum Board plans. Plans must be consistent with key objectives and technicals. | “B” is having flaws in consistency or tangible shortcomings, but mostly on track. A flaw would be mostly working code, attempts, but incomplete. | “C” is a lack consistent effort, lacking tangibles. Lack of producing working Code. | Below “C” is composed of Slash/Slash/Slash offenses. Lack of attendance, disruptive behaviors, doing work from other classes during CompSci class time, paper visible in class, and turning in tangibles that you can’t represent in live review. | Zero is a result of plagiarism. The Teachers will likely miss first offense of plagiarism, thus any offense will result in an inquiry on previous work. Remember this is an effort based class. | . | . Assignments and Work . Assignments mostly Due either Friday or Monday at the start of class (canvas is official record for point guidelines and synergy for points received) Live Grading, all grading is complemented by Self/Crossover assessments. Teachers are passionate about quality crossover reviews. This a big part of your personal learning. Taking a review lightly is taking your grade lightly, as poor review will cause a reduction in your own points. | Always prepare Review Ticket (GH Issue) using canvas assignment as a guide | . | Trimester starts with 5 point seed (highly engaged +, extra activities +, distracted -) | There will be about 50 points per trimester, we will save a big chunk of points for the last few weeks of Trimester. Don’t get comfortable, keep working your CompSci muscles. | . PBL Sprint 0 / Week 0 . Learning outcome. Getting adapted to the Agile mindset used in Computer Science. Additionally, getting introduced to GitHub and showing usage of VSCode. Building a personal and running Fastpages/GitHub Pages. . Wednesday - “Introduction Sprint”. Pick pair share partner, Pick crossover pair, Establish team of four. Based off of modulo mathematics (remainder) there can only be 3 teams of 5 maximum. Spend some time talking and getting to know each other. Consider key roles in Project Teams as Scrum Master (Issues, Scrum Board), DevOps (GitHub, Deploy, .gitignore, requirements.txt), Frontend Developer (HTML, Jinja2, Javascript), Backend Developer (Flask, Python) | Thursday - Review “Tools and Equipment”. Bringing your laptop. Setup Fastpages and Tools and push code to your Repo and track updates of Fastpages to deployment. | Friday - Start with Pair Share coding. Spend 25 minutes at keyboard finishing installation and performing fastpages coding, while Pair Share observes and consults. Next 25 minutes Pairs reverse roles. | . Equipment, accounts and tools . A laptop, that you bring to class every day with the Development Tools installed on it. | GitHub Account, VSCode will be used to push/pull changes. GitHub is where we store and share code in the cloud, think of Google Docs but for Code. | GitHub Pages will be used to host your personal web site, notes, and experiences. Building pages will teach Markdown, HTML Fragments, and JavaScript. | Jupyter Notebooks will be used in conjunction with GitHub Pages to build running Python Code in your Technical Notes. | Slack Account, install App on Laptop, get used to reading announcements. Slack is the tool will use for messaging, we have been averaging 50K messages per year. | Python is the key language you will be using in this class. Flask, Jinja2, HTML, CSS, JavaScript are the key supporting technicals you will be using to enhance your learning. | VSCode is the code editor we will be using in this class. VSCode is more than and editor, this type of tool is often called an Interactive Development Environment (IDE). | AWS is used for deployment, an AWS account will be provided by Teacher. AWS Cloud Computing and Servers will be used to Deploy and Support projects on the internet. | .",
            "url": "https://nighthawkcoders.github.io/APCSP/week/0",
            "relUrl": "/week/0",
            "date": " • Aug 15, 2022"
        }
        
    
  
    
        ,"post89": {
            "title": "Tools and Equipment",
            "content": "Tools and Equipment make Development Easy . Learning Development tools, working with Projects, is the key to a rapid entry into Code/Code/Coding. A Computer, Git, and an Code Editor are the starting points for coding. Add Jupyter Notebooks (computational documents) and you bridge Computer with Data Science. The beauty of Jupyter is that it creates a computational narrative, a document that allows code and data with visual analysis, hypothesis, and conjecture. . Computers using either MacOS, Windows, or Linux are requirements for the course. | GitHub, is Git hosted in the Cloud. It is the defacto hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere in the world. Think of it as the Google Docs for Coders. Version Control is the task of keeping a software system of many versions and configurations well organized. | Version Control History of files and changes in Version Control System (ie GitHub) is very important! Ultimately, any Coder will break things or delete things! Looking at older versions and configurations at a microscopic detail is sometimes the only way to unwind bugs. | . | Visual Studio Code (abbreviations VS Code, VSCode or VSC) is a powerful Code Editor. VSCode performs a lot of magic and automation behind the scenes to make your Code/Code/Coding life easier. There is a back-in-the-day story hear, but short version is VSCode qualifies, IMO, to be called and Integrated Development Environment (IDE). It allows you to Edit files, Build your Code, and Pull/Push Code from and to the GitHub. FYI, VSCode is new to APCS this year, the former IDE’s used in CompSci classes include XCode, Eclipse, and IntelliJ. | Jupyter Documents (.ipynb) is a document format for creating and sharing computational documents. These documents allow you to compute segments of Python or Java code as you are taking notes. These are new to AP CS this year, but are viewed as very powerful in gaining a quick understanding of coding concepts. Jupyter documents are often called “notebooks”. | . Equipment, accounts and tools . A laptop, bring a laptop to class every day with the Development Tools installed on it. Computers issued by the School, ie Chromebook, are not effective because of the restrictions placed on adding software by PUSD. If you have any problems obtaining a Computer where you can install software!, please attend Office Hours immediately | GitHub Account, VSCode will be used to clone/push/pull changes. GitHub is where we store and share code in the cloud, think of Google Docs but for Code. | GitHub Pages will be used to host your personal web site, notes, and experiences. Review GitHub concepts 2-min https://www.youtube.com/watch?v=phGdqJB6ep0 | Jupyter Documents will be used in conjunction with GitHub Pages to build running Java Code in to your Technical Notes. Review Jupyter basics 6-min https://www.youtube.com/watch?v=3jZYC9rGrNg | Slack Account, install App on Laptop, get used to reading announcements. Slack is a messaging tool similar to Discord, the first year we had 35,000 message in a class. | Python is the key language you will be using in this class. Flask, Jinja2, HTML, CSS, JavaScript are the key supporting technicals you will be using to enhance your learning of coding. | VSCode is the code editor we will be using in this class. VSCode is more than and editor, it is called and Interactive Development Environment (IDE). | Anaconda is the environment manager. Conda is an open-source package and environment management system that runs on Windows, macOS, and Linux. | Homebrew for MacOS installs packages (Java, Python) you need for Development that Apple did not include. | Apt for WSL Ubuntu installs the packages (Java, Python) you need for Development that Ubuntu did not include. | AWS Account for cloud computing and deployment, account access will be provided by Teacher. AWS Cloud Computing and Electric Cloud Computing (EC2’s) will be used to Deploy and Support projects on the Internet. | . GitHub Account . Follow instruction https://docs.github.com/en/get-started/signing-up-for-github/signing-up-for-a-new-github-account Use your own personal/permanent email… NOT SCHOOL!!! GitHub belong to you. | . MacOS 1st Time Developer . Python2 install on MacOS . Install Python2 | . VSCode install on MacOS. . Install VSCode | . Anaconda install on MacOS. . Download for MacOS: Anaconda | Run Install: Answer yes to questions | . Homebrew install on MacOS . Copy and Paste to Install from Terminal Homebrew Copy bash ... curl ... command using copy box on website | Launch terminal from search bar | Paste bash ... curl ... command into Terminal … | Make sure command starts, this should provide feedback/output in terminal and could take a long time, like 10-min, there could be a prompt in the middle, at about 5-minutes. Follow any on screen instructions provided in terminal output to finish. | . | Homebrew installs a tool called “brew” which helps add and manage developer packages on MacOS. | . At this point, the next task is to prepare for Jupyter Notebooks and Kernels. You must start a new Terminal. Now the Terminal prompt should be prefixed with (base). If not, you need to go back to Anaconda install. . Open new Terminal. If your prompt is not looking like this you need to back up. (base) iMac:~ jmort1021$ . | . Key Packages needed on MacOS . Close and Start a new terminal, run each command in Terminal $ brew list # list packages $ brew update # update package list $ brew upgrade # upgrade packages $ brew install git # install latest git $ brew install python # install python3 for development $ python --version # version of python3 installed $ brew install java # openjdk install . | . Windows 1st Time Developer . VSCode install using WSL. Windows users have option to have best of Windows and Linux while developing within VSCode. . Install VSCode using WSL. | Required review, become familiar with Windows WSL development | . Anaconda install on WSL. . Try the exact commands in WSL Command / Powershell. | Only if there is a wget error… To find the latest Linux-x86 distribution scroll to the bottom of this page: https://www.anaconda.com/products/distribution. Change wget and Anaconda3 command based on new link. PS C: Users UserName&gt; wsl # Windows prompt to WSL command $ cd /tmp $ wget https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh $ chmod +x Anaconda3-2022.05-Linux-x86_64.sh # Answer yes to all the prompts $ ./Anaconda3-2022.05-Linux-x86_64.sh . | . At this point, the next task is to prepare for Packages, Jupyter Notebooks, and Kernels. You must start a new WSL Command / Powershell. Now the WSL prompt should be prefixed with (base) from Anaconda install. If not, you need to go back to Anaconda install. . Open Command / Powershell. If you are not looking like this you need to back up. PS C: Users ShayM&gt; wsl # Windows prompt (base) shay@MSI:/mnt/c/Users/ShayM$ cd ~ # WSL prompt (base) shay@MSI:~$ # WSL home, best place to install files . | . Key Packages needing update on WSL Ubuntu . In a WSL Command / Powershell install Python3 $ sudo apt list # list packages $ sudo apt update # update package list $ sudo apt upgrade # upgrade packages $ sudo apt install python2 # install python2 for package dependencies $ sudo apt install python3 python3-pip # install python3 and pip3 for development $ python --version # version of python3 should be shown $ sudo apt install default-jdk default-jre # java install $ java --version # java runtime version $ javac --version # java compiler version $ sudo apt install unzip # unzip utility . | . Jupyter Install and Kernels (MacOs and WSL) . Install Jupyter and check kernels . (base) id:~$ conda --version (base) id:~$ conda install jupyter # install jupyter (base) id:~$ jupyter kernelspec list # list installed kernels Available kernels: python3 /home/shay/.local/share/jupyter/kernels/python3 . Install Bash kernel. . (base) id:~$ # start in home directory (base) id:~$ pip install bash_kernel # download bash kernel Collecting bash_kernel Downloading bash_kernel-0.7.2-py2.py3-none-any.whl (15 kB) Requirement already satisfied: pexpect&gt;=4.0 in ./anaconda3/lib/python3.9/site-packages (from bash_kernel) (4.8.0) Requirement already satisfied: ptyprocess&gt;=0.5 in ./anaconda3/lib/python3.9/site-packages (from pexpect&gt;=4.0-&gt;bash_kernel) (0.7.0) Installing collected packages: bash-kernel Successfully installed bash-kernel-0.7.2 (base) id:~$ python -m bash_kernel.install # install kernel Installing IPython kernel spec (base) id:~$ jupyter kernelspec list # list kernels Available kernels: bash /home/shay/.local/share/jupyter/kernels/bash python3 /home/shay/.local/share/jupyter/kernels/python3 . Install JavaScript kernel. Output not shown, answer y or yes to questions. . (base) id:~$ conda install nodejs # node is framework for JavaScript kernel (base) id:~$ npm -version # node package manager comes with nodejs (base) id:~$ npm install -g ijavascript # get the kernel (base) id:~$ ijsinstall # install javascript kernel (base) id:~$ jupyter kernelspec list # list kernels Available kernels: bash /home/shay/.local/share/jupyter/kernels/bash javascript /home/shay/.local/share/jupyter/kernels/javascript python3 /home/shay/.local/share/jupyter/kernels/python3 . VSCode Fastpages Project . Start Pages/Fastpages from GitHub Setup Instructions . Recommended Video - 27 minutes | Verify GitHub pages is running | Clone and Open project in VSCode (base) id:~$ mkdir -p vscode # make a vscode directory (base) id:~$ cd vscode # change to the directory (base) id:~$ git clone https://github.com/nighthawkcoders/APCSP.git # change to your repo (base) id:~$ code . # open VSCode projects in directory . | Push a minor “markdown” change and Verify on GitHub https://code.visualstudio.com/docs/editor/versioncontrol#_git-support | Verify “markdown” change on GitHub Pages | Create a new Jupyter notebook and publish to _notebooks directory https://code.visualstudio.com/docs/datascience/jupyter-notebooks VSCode Marketplace and Extensions . | . . Visual Studio Code claims to provide just the tools a developer needs for a quick code-build-debug and version control cycle. It provides a Market Place for enhancements and more complex workflows. Before adding extensions, clone projects and see what is requested or added. Here are some extension that were added through that process or that I have added... . In marketplace there are several extensions for Python, Python Intellisense, Python Extension Pack | Jupyter: This supports build jupyter ipynb files from within VS Code | Code Spell Checker: Got to have it when building documents, particularly if you spell and typo like the Teacher | IntelliCode: Got to have it when creating a code file, it will sense type of code by extension. Also, it help with syntax as you are coding. | . Review Details in Marketplace for better explanation of purpose of the things explained above. There is a lot more! As you need Git help look at things like Git History and GitLens. Or, perhaps you enjoy Vim and want Vim emulation for editing, their is an extension for that. Later, there may be interest in AWS Toolkit or Deploy extensions. We will learn more about Marketplace Extensions as we do more. . . VSCode for Python Extensions . VS Code https://code.visualstudio.com/docs/languages/python Install Python, Python Environment Manager, Python Extension Pack, Pylance | Install Jupyter, Jupyter Keymap | Install IntelliCode, IntelliCode API Usage Examples | Windows machines install WSL Remote Development | . | . Hacks . Students need to demonstrate all these tools running to Scrum Team and then the Teacher. Problems need to be worked out quickly. Before asking Teacher ask 3 other students. Do not delay in Tool Setup task, there will be no late makeup for points!!! Tool and Equipment setup is like attendance, without Tools and Equipment you are effectually absent. . Provide a comment on this page to show Tool success | Hint. Make a simple comment “Working on it”. This can be edited by clicking on Time Stamp of post; at this point you will see triple dots (…); clicking dots provides an Edit option; clicking Edit takes you to a friendly “Markdown editor”. Enjoy this editor, my suggestion is build your entire message in thi editor and/or build personal message in Fastpages / GitHub pages “_post” and share the following. Share link to personal Fastpages / GitHub pages running on github.io. My suggestion is to change index.html to show it is really yours. | Share link to a new page (_posts) in your Fastpages project show use of Markdown and/or HTML fragments. You will need to learn special date requirements of a file as well as a little Markdown or HTML. | Share link to your 1st Jupyter notebook (_notebooks) showing usage of Python: print (“Hello”) | Capture image/screen capture of Fastpages project showing use of an Integrated Development Environment (VS Studio) | Share link showing your GitHub insights. This is your personal activity of commit history. | . | .",
            "url": "https://nighthawkcoders.github.io/APCSP/techtalk/tools",
            "relUrl": "/techtalk/tools",
            "date": " • Aug 15, 2022"
        }
        
    
  
    
        ,"post90": {
            "title": "Student Scoring on AP Exam",
            "content": "History of CSA AP Exams . 2022 . Paper exam in Gym, MCQs . Energy in classroom was much improved over prior year. Ms Naidu and Mr Mortensen often had positive work sessions at the end of the day and we were always complementary to students effort. | Test Prep Tuesday was polarized between participating and not participating. Student Led sessions needed improve, perhaps more training by Teachers. In 2023 testing year, the plan is to lead Test Prep sessions at start of the year and look for students to provide valued participation in second half of Trimester 1. Extra Credit will likely be awarded for quality student led preparations during the year. | Students did very well on practice exams and on corrections of errors. Majority of class was in dark green after 2nd practice test. | Some students were trying to do minimum on College Board Create Performance Task (CPT). The people that received “4’s and 5’s” seem to have an extra mindset on CPT. It is my opinion that many scores dropped out of “5” range as a result of the CPT. But, this can’t be confirmed, but theory is based on high MCQ scores in practice sessions. | . . . 2021 . Pandemic and online exam in lock down browser, MCQs . Scrum Teams were standardized at 4 to 5 people, based on CSA experience. Connections in Scrum Teams were inconsistent throughout the year, a lot of black screens. | A few students took on Student Led Test Prep Tuesday and produced prepared lessons. | A few students seem to do most of the work in Scrum Teams. There were many mentions of this in teams that were more open to their internal problems. | Based off of inconsistent participation, scores did not surprise the Teacher. | Stats show there is no left in this graph, very successful class. | . . .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/history",
            "relUrl": "/collegeboard/history",
            "date": " • Aug 15, 2022"
        }
        
    
  
    
        ,"post91": {
            "title": "College Board Pseudo Code",
            "content": "Learning College Board Pseudo Code . Thousands of different programming languages have been created, and more are being created every year. College Board has designed a pseudo code, non operational programming language, to highlight concepts that it wants every student to learn. College Board pseudo code highlights instructions that are common for many languages. . BTW, instructions are translated into machine code for computers to execute. The notation we look at is supposed to be easy for the user and their application. For instance, many new languages are being popularized around data science. It is more important that a Data Scientist is successful in their task, than to learn syntax that is not familiar to their traditional workspace. . College Board is trying to remain neutral and build Computer Science Principles off of any language, thus the Teacher is left to pick the language(s) according to application and curriculum. . Exam Reference Sheet . Comparison of CB Pseudo Code to Python with descriptions . Command Vocabulary | Pseudo code | Python | Purpose | . Output | DISPLAY(expression) | print(expression, end=” “) | Displays the value of expression, followed by a space. Python defaults to newline, thus the end=” “ | . Input | a ← INPUT() | a = input(prompt) | Accepts a value from the user and returns it to the variable a. | . Assignment | a ← expression | a = expression | Evaluates expression and assigns the result to the variable a. | . Selection | IF (expression) | if expression: | Run commands in the code block associated with the selection | . Iteration n times | REPEAT n TIMES | for i in range(n): | Repeat commands in the code block associated withe the iteration n times | . Iteration expression | REPEAT UNTIL (expression) | while expression: | Repeat commands in the code block associated withe the iteration while expression is true | . List Assignment | list ← [expression1, expression2, expression3] | list = [expression1, expression2, expression3] | Assigns 3 values to list, value can be literal or expressions | . First index in List | list[1] | list[0] | Access the 1st element in the list[]. FYI, most programming languages start a zero. | . Last index in List | list[LENGTH(list)] | list[len(list) - 1] | Access the last element in the list[]. If you start at zero, last element is length - 1. | . Define Procedure | PROCEDURE name (parameter) | def name(parameter): | Create a procedure containing a sequence of programming instructions. | . Expression equals | a = b | a == b | Evaluate if assigned value of a equals assigned value of b | . Expression not equals | a ≠ b | a != b | Evaluate if assigned value of a is NOT equal to assigned value of b | . Pseudo IF Code Block using curly braces . a ← 1 b ← 1 IF (a = b) { DISPLAY(&quot;A equals B&quot;) } . Python IF Code Block using indent . a = 1 b = 1 if (a == b): # Python uses indent to establish code block, Teacher use tab key print(&quot;A equals B&quot;) . Suggestions for students . It is very important that you become fluent in “Command Vocabulary” and “Purpose” of the Pseudo Code versus Python comparison. During the year you will look at JavaScript which has same Command Vocabulary and Purpose. Others may take Java, you will see the same ideas again. . Start building Vocabulary and Purpose by Code/Code/Coding | Supplement you Code with comments and outputs using Markdown and Jupyter notebooks. This style allows you to code explore and learn as you go. | Use CB pseudo code as part of your definitions as you build your notebooks. | . Hacks . Build your own Notebook to highlight what you want to capture on pseudo code | Add a link in your Notebook to College Board pseudo code reference and other materials you find interesting by searching the internet | .",
            "url": "https://nighthawkcoders.github.io/APCSP/collegeboard/pseudo_code",
            "relUrl": "/collegeboard/pseudo_code",
            "date": " • Aug 15, 2022"
        }
        
    
  
    
        ,"post92": {
            "title": "USC Code.org Workshop Notes",
            "content": "Computer Science Principles Code.org . Monday Morning Session 9 - 11 am . . Code.org is sponsor. Lesson are from published Curriculum Guide. . Introduction is on equity. 50% girls in school should mean 50% enrollment in CSP | Follow up dates. Saturdays 10/15, 11/19, 1/28, 3/18 | Met Ken Toma (Canyon Hills, SD), Faith Yeaton (San Gabriel Academy, Pasadena area), Ms O&#39;Masters (Central Valley) | Worked with Sean Yeung who is new to my school :). I would like to see a lot of him this week. | Lesson 3 Plan What are 3 things you notice about the lesson plan? Circle and square patterns is a lite intro into binary. Number 7 and permutations of squares and circles are showing representations, which are leading to 1&#39;s and 0&#39;s that students will see in future. Group work is used, as one Teacher said in our session... &quot;to make sure the work gets done&quot;. | What are 2 things you have questions about? I believe 15-18 age group should be able to combine this with binary lesson in same amount of class time listed for this lesson plan (45 minutes). Elaboration on this would seem like a fall back for me for the few in my school that don&#39;t get binary directly. IMO, binary should be taught in detail when needed, my plan is to teach it through color codes and through binary calculator; the later inspired by Harvard CS50. IMO, in modern languages and frameworks we don&#39;t want to lead students down the binary grind until they get interested in CS or binary as part of an application solution. College Board seems to have delayed this to Big Idea 2 and teaches concepts around data abstraction and data compression. | What is 1 thing you are interested to find more about or are excited about when you look at this lesson? Since we are starting in a lesson, I would like to see 12 weeks or course vision. I feel like this is a very isolated and simple topic. Though, it is an easy thing for Teachers to get to know each other. Perhaps, for our event it is more about Collaboration from Big Idea 1 then Binary in Big Idea 2. | . | . . Monday Afternoon Session 1 - 3 pm . Binary Number System slide #99. The activity requires paper and Teacher thinks analog experience is important. Connect Circle-0 / Square-1. Teacher recognizes different experience level but thinks everyone should create flippy-do. Code.org vocabulary is last, but not to be ignored. . Relation is focussed on these concepts 0-9 are symbols for numbers in Base 10 | 0-1 are symbols for numbers in Base 2 | . | Make an adaptation to support Flippy-Do information: Binary Calculator | The 2048 game might be interesting development activity to relate to binary. | This is a general slide on all lessons slide #121. | Color Codes inserted into these lessons seems key to me, or some other purposeful element, encryption was mentioned by Teacher. In general, not seeing “why?” in Code.org lessons as we start… but the appear in the high level description. | . Compare Unplugged and Plugged Lessons. . What is teacher doing in unplugged lesson? encouragement, walking around, answering questions. Unplugged is not computer: Stand-up meeting, White Board Design | Let them Explore!!! Shared an idea of plugged lesson, shared a tool. Don’t lecture about it, as them what it does, what is happening? | . Teachers role is described as Lead learner. We may not know, but we can figure it out. My response to questions… . Lead learner allows diverse activities in classroom | Lead learner may provide completely different work for student with special interests or special needs. | Teacher (Jennifer) suggested she needs to build the computer science muscle, including suffer confusion. Student (Patrick) mentioned that students see straight into your capability. | Different rhythms for different students. | Blogging Platforms mentioned | Peer Feedback mentioned | Pair Programming mentioned | . Actions for inclusive classroom culture . Group thought it is more on capability versus culture | Student (Sonya) talked about doing multiple media types (paper, digital) | Student (Patrick) discussed audio and video slides for virtual | Student (Ken Toma) give everybody a voice. Suggested pair-share can provide that platform | . Async work . This video discusses a lot of what I believe in and will kickoff PBL well. I think it popped up by accident but it was cool https://www.youtube.com/watch?v=9s29LKfEFjQ | Watched the place, mostly it has a place to complete async activities and surveys. It says I am not enrolled when I attempt survey. | The Place introduced. | . Tuesday Morning Session 9 - 11 am . Module 2 Intro Slides . USC represented shared Web Site | Unit 1 Lesson 7. Played with B/W Widget, on building black and white images. Idea was good on 1st couple of exercises, it quickly seemed to become tedious. I am not sure how it would related to key concepts in CB and not happy with it in PBL (except if we add improvement or design elements). Interaction could be improved to maintain orientation of Hexadecimal to lines. Maybe coding improvement could be to preserve orientation and allow clicking on pic, binary, or both. This exercise in driver navigator would make a lot of sense. Worked with Jp Fletcher, Jason Mahoney, Manuel Hernandez | Unit 1 Lesson 8. Color Images Widget, I like this for the 1st lesson more. It seems like the stair step is not significant and perhaps this might provide more joy. Somewhat a combination of two lessons would make me happier, perhaps one black/white and then color would be good for interactive lecture. Using page: https://studio.code.org/s/csp1-2022/lessons/8/levels/2 04 02 18 FF0000 00FF00 0000FF 000000 FFFF00 FF00FF 00FFFF FFFFFF . | Course Framework page 16, computation thinking practices and big ideas. Learning objectives and essential knowledge. | Async was on Big Ideas, Computational Thinking practices,… In my experience I focus in on covering the Big Ideas. Students don’t seem to relate will to other weightings. Also, I focus on CTE principle of College Ready through test and Intern ready through PBL. If we teach them to build stuff a lot of the other things fall out. | . Tuesday Afternoon Session 1 - 3 pm . Kickoff was reviewing scavenger hunt. People generally have questions as new teachers. . Teacher (Katie) reviewed CB outline. My experience is by doing CB MCQs and PBL, the students think questions are easy/basic. | Next (Katie) covered the Code.org outline. Unit 1-3 cover Big Idea topics in 1, 2, 4. Units 4-7 cover Big Idea 3. | Some discussion on block coding vs scripted in Create Task Project. | . Transition to Unit 1 Lesson 9-10 Lossless/Lossy Compression. Widget Bubble 1 . Played with Text to Symbol compression, Ken Toma came up with multiple words. | Spoke on introduction, we instructed Patrick to look for associations to make this interesting. | Lossy compression had a reduction widget | Lossy compression had a pick quality slide voting | Summary on these, widgets and ideas are great for intro, but they don’t seem to have depth that I like in the lesson. I want people to learn how to do these. | . Async session had a video that shared review of things we missed in workshop versus code.org curriculum. This filled some gaps that I thought were missing in order that we followed. . How you interact with the World. | For tomorrow, there is talk of Internet Simulator / Messaging System that may be good illustration and complement to a Tech Talk. I wonder, do they provide code for these tools? That would be a great thing to teach students to make, it looks like it works over sockets because of instant refresh. | . Wednesday Morning Session 9 - 11 am . Internet Unit A new day of slides . Paseo Reflection . Strongly: identify Coach, Parent | Life Advantage: Being Chinese, Entrepreneur | Equity: Teacher, Coach/Teaching | Feel, Identity: Balance on sharing (ego heavy, selling short). Mental health and physical health are important on reflection, feeling selfish. Give people benefit in process of their evaluation. | . Network Challenge. This is the challenge that was familiar to classroom and Colin made this as an app a couple of years ago. . Two people share a line | Multiple connections from persons to lines | Teachers are holding a lot of stock in simplicity and activity. Though, Network are multiply connected to routers and not computers and Network design is complex. It should be clarified that most home computers have a single router. A,B,C,D,E should be conceptual. ISP typically have multiple paths and home networks do not. It is interesting that Group 4 used a hub, challenge #3; this tells me that people are going to think it is computers. | . IP Addresses and DNS. Started by making a series of appointments. Not much purpose of this other than addressing names and getting a response. Creating a packet of data (Monday, Cheanie) response (OK). . Async work . Mental pictures Blind spots, accept you have them and work on them. Female: delicate, caring family | Male: career, strong, powerful | . | Article summary is holding ourself accountable for bias, as I am sure I have some bias that is reflected in my work. However, I believe most of my personal bias has to do with classroom behavior of the individual. Other notes: sometimes students are looking for bias | Difficulty: those that have history (good or bad) in a year long classroom have difficult going good to bad or bad to good in my eyes. Certainly someone who starts great gets a lot of my respect and favoritism. | . | Digital information dilemmas, game companies can’t use Lebron James tattoos. There is so much copyright, I am not even sure I can take notes and represent pictures, but I do it. | . Wednesday Afternoon Session 1 - 3 pm . Network Simulator and Bias . Network Simulator would be really fun if code was available. I think I would like to mimic it for a development project. Students really resonate toward building this type of thing. It could be built on top of Logging and Image thing. | Bias discussion and my problems exists or are established on behavior. I have favorite students and even invite them into Nighthawk Coding Society. Or they invite themselves. | Student attitude may have something that needs exploration. | . Async work is mostly a couple of videos and ability to comment on the material. These are particularly good ideas and are somewhat built into GitHub pages. . We should have students comment on most of the lessons or the day after the lessons. This could be a great way to obtains some feedback in context. | Network simulator may be a tool that we could build in class, it would be an interesting project for a team that wants to code. | . After hours work. Because of discussion of awarding people on doing things conversation, plus many asking questions about how to score on doing things… I went back and updated hacks and worked with Sean on getting comments working on Tools Setup. IMO, this solves problem of presenting, providing what to do, and capturing in the same place. . Thursday Morning Session 9 - 11 am . Who Belongs in CSP? Thursday Slides . Unit 3 Bridge to programming units starting with Lesson 2 Design Mode, student work in AppLab | Stocks, has several rows and columns. It show a graph and has current price. If you click on a stock it takes you to articles written about the stock | . MSFT /graph 274.17 AAPL /graph 155.98 . Block coding tool is big focus. Pace is slow. | Design session introduced JavaScript commands. It showed onEvent with a function. There is kind of a confusing design and tool back and forth, mostly presenter and online issues. | . Async very quick example that seems to beg for me to say yes to intervention. But IMO, there are bigger fish to fry than someone knowing a stats answer. . BTW, we saw many mistakes presented in Networking lines game, but people were not speaking up. Sometimes it is best to let people just have an answer. | Debugging was topic in video. Positive “make mistakes message”, goes with grading comment made to have check boxes for points, not right or wrong. Learning is a process, everything does not need ot be corrected. | . Planning notes for an Application like the Birds sample, mostly use their code with minor adaptations… . - Stock Quiz - Start Screen Begin Button — 1 — What is most valuable stock on US exchanges? Apple (AAPL) and three wrong — 2 — What is Robin Hood darling stock in 21-22? Game Stop and three wrong — 3 — What is a good philosophy in market? Buy low Sell high and three wrong — Winner Screen — Congrats. Here are some tips before you go invest… Open, Close, Day High/Low, 52 week average — Wrong Answer Screen — Try again, wrong answer. You must get the right answer to continue (move on). . Thursday Afternoon Session 1 - 3 pm . Lab work. Best link for AppLab. My biggest observation was not about the lessons, it was about the cohorts and their Lab work. Many of them were with very excited about their creations. AppLab made some successful and really picked up their excitement. I think Wednesday was a downer for me and perhaps a lot of others and it carried with me into Thu. Today many spirits were lifted. . IMO, Tech success lifts spirits | Teacher cohorts like to see that they coded. AppLab example on QA’s seems to be very intuitive for new coders. I know students like a Quiz and they can lead into Data Analytics, so it is not a bad thing. | I was helping someone that was very new (Patrick) and he seemed to have some intuition about things like Label, Text Box, Button. | Less intuition on Sequencing and Events. Perhaps their should be a little intro to these structures, like placing code inside of events. Also, my view was a little difficult so it was difficult to be a great Pair Programmer as I should have caught some extra clicks in producing excess code. | Finally, Pair Programming is an interactive two brain process. It was weird to hear facilitator talk about Driver/Navigator as if Navigator is more in command position. | . Friday Morning Session 9 - 11 am . Saturday Oct 15, Dec 3, Jan 28, Mar 18 workshop days. . Equity in CompSci Classroom. Sindie talked about zero experience, not only the smart student. . Work load. (Asian, 50% Indian) Mental health is a bigger focus for this year (work load management, more in class work, but lots of information at the beginning of year) | Sonya parent pressure, grade 1st (Korean) Debugging the Gender Gap (video), “what does a coder look like?”. | Jason variety not just group work (Hispanic) | Patrick email: Patrick.davis@inglewoodusd.com | . Assessment changes . Here is instructors percentage guide | Many seem to NOT have a system for this as they don’t have a vision of what they will teach yet. | . CTE/Admin Report with focus on Pathway . Regarding CompSci Pathway, there are no standards. Districts and even schools pick. . My understanding is Districts pick their Curriculum Provider and it often requires Teachers to get a certificate. Code.org is fulfilling district/certificate requirements. Code.org is providing a completely closed platform with its own LMS and tools. | USC and UCSD attachments to Code.org are both using an ncsu.org. NC State system to aggregate teacher completion, for example async work must be captured in the tool. My thoughts are USC, UCSD, NC State are involved in some sort of grant program as an individual pops in and promotes on campus events and opportunities for teacher to get certificate that will help boost pay. There was a USC off campus host managing the class, they are giving Teachers some swag and hours toward certificate. Teachers at training had little and mostly no CompSci experience. | . CS Discovery is a Code.org brand. According to PLTW web site their brand is Essentials. . College Board Lists Curriculum Providers | From Code.org What is CS Discoveries CS Discoveries is designed to fit naturally between our CS Fundamentals courses and our CS Principles course | Computer Science Discoveries is an introductory computer science course for 6 - 10th grade students. | . | From PLTW.org the name is CS Essentials This lists Essentials, Principles, A, Cybersecurity | Principles description has Cybersecurity emphasis | . | . Of course College Board is another business which in turn is advertising groups like Code.org or PLTW.org. However, the are also list Apple which is listed as a provider of curriculum for CompSci Principles. This is kind of fun for me, as it goes back to my Intro year, but this content can be used for CS Principles. Develop in Swift AP CS Principles curriculum helps students build a foundation in programming using Swift—a powerful and intuitive open source programming language designed by Apple—while preparing them for the AP Computer Science Principles Exam. Students will get practical experience with the tools, techniques, and concepts needed to build an iOS app. They’ll learn about the impact of computing, privacy, and security on society, while exploring the technology behind their own activities through interactive stories. Develop in Swift AP CS Principles includes a student and teacher guide available for free on Apple Books. Downloadable Xcode and Playground project files are also available to support the curriculum activities . Back to CTE, the students and teacher. Teacher motivations can vary. My philosophy is teach content and test will fall out. Yesterday I had a Teacher in our breakout say to me… Bottom Line, I want all my students to get 100% on AP exam. End of story. But, I don&#39;t think the Code.org platform, the training I got, and me are going to make it happen. A Student was working with me yesterday and we were dialoguing on Slack. He was working with me on something wrt his internship that was related to certificate deltas between Windows and MacOS. I told the student about my Code.org training I don&#39;t really like the code.org method. My friend goes to a different school and took AP CSP using that curriculum. I personally was unimpressed with that I told the student that I was looking at a softer entrances into PBL I don&#39;t think code.org is the solution, coming from a student perspective. You might want to take a more traditional class approach by teaching everyday at the beginning, which is what students are used to. Then ease into PBL Also, yesterday I had several students working with me on next years classroom tooling. From this experience, all students had their own blogging and tooling platform. IMO, Student are the center. Thus, object should form around student. Not Code.org or LMS. This means they need their own tools and their own objects. This means an open platform to express their engineering . Summary. Sharpen the sword is a phrase used in habit of highly successful people. I learned a lot during the week from Code.org training and platform. Also, I got great exposure to many new teachers entering into Computer Science. I am happy that there is something for these people to grab onto. Also it helped me provide a lesson idea for Sean in our 3rd week (related to interest in block coding). But, for me this is a case of sharpening the sword, there is no intention to adopt the entire curriculum. I hope to continue with my existing approach to CSP curriculum: PBL, Open Platform. Sword sharpening includes: adding softer entries to topics, more traditional lectures in Trimester 1, build muscle for longer term PBL. .",
            "url": "https://nighthawkcoders.github.io/APCSP/workshop/code_dot_org",
            "relUrl": "/workshop/code_dot_org",
            "date": " • Jul 25, 2022"
        }
        
    
  
    
        ,"post93": {
            "title": "Calculator Starters",
            "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . 0 1 2 3 + 4 5 6 - 7 8 9 * A/C 0 . =",
            "url": "https://nighthawkcoders.github.io/APCSP/frontend/calculator",
            "relUrl": "/frontend/calculator",
            "date": " • Jul 19, 2022"
        }
        
    
  
    
        ,"post94": {
            "title": "Fetch of Python data using RapidAPI",
            "content": "| Overview | Covid19 RapidAPI | Jokes API | Users Database | User Login | . Review Frontend Code, Review Backend Code . Time All-time Cases Recorded Deaths Active Cases . | | | | Country All-time Cases Recorded Deaths Active Cases .",
            "url": "https://nighthawkcoders.github.io/APCSP/data/covid",
            "relUrl": "/data/covid",
            "date": " • Jul 10, 2022"
        }
        
    
  
    
        ,"post95": {
            "title": "Python Sign-in",
            "content": "| Overview | Covid19 RapidAPI | Jokes API | Users Database | User Login | . User ID: . Password: . Login . .",
            "url": "https://nighthawkcoders.github.io/APCSP/data/login",
            "relUrl": "/data/login",
            "date": " • Jul 10, 2022"
        }
        
    
  
    
        ,"post96": {
            "title": "Fetch of Backend Jokes",
            "content": "| Overview | Covid19 RapidAPI | Jokes API | Users Database | User Login | . Joke HaHa Boohoo .",
            "url": "https://nighthawkcoders.github.io/APCSP/data/jokes",
            "relUrl": "/data/jokes",
            "date": " • Jul 10, 2022"
        }
        
    
  
    
        ,"post97": {
            "title": "Database CRUD Operations",
            "content": "| Overview | Covid19 RapidAPI | Jokes API | Users Database | User Login | . Database API . User ID Name Posts DOB Age . Create API . User ID: . Name: . Password: Verify Password: . Birthday: . Create .",
            "url": "https://nighthawkcoders.github.io/APCSP/data/database",
            "relUrl": "/data/database",
            "date": " • Jul 10, 2022"
        }
        
    
  
    
        ,"post98": {
            "title": "Classic Snake Game",
            "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . Snake score: 0 . . Welcome to Snake, press space to begin . new game settings Game Over, press space to try again . new game settings Settings Screen, press space to go back to playing . new game Speed: Slow Normal Fast . Wall: On Off .",
            "url": "https://nighthawkcoders.github.io/APCSP/frontend/snake",
            "relUrl": "/frontend/snake",
            "date": " • Jul 8, 2022"
        }
        
    
  
    
        ,"post99": {
            "title": "Game of Life",
            "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . Remix of Game of Life . start step",
            "url": "https://nighthawkcoders.github.io/APCSP/frontend/life",
            "relUrl": "/frontend/life",
            "date": " • Jul 8, 2022"
        }
        
    
  
    
        ,"post100": {
            "title": "Graphing App",
            "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . Graphing grid .",
            "url": "https://nighthawkcoders.github.io/APCSP/frontend/graph",
            "relUrl": "/frontend/graph",
            "date": " • Jul 8, 2022"
        }
        
    
  
    
        ,"post101": {
            "title": "Grade Calculator",
            "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . Grade Calculator . Total : 0.0 Count : 0.0 Average : 0.0 Input scores, press tab to add new number:",
            "url": "https://nighthawkcoders.github.io/APCSP/frontend/grades",
            "relUrl": "/frontend/grades",
            "date": " • Jul 8, 2022"
        }
        
    
  
    
  
    
        ,"post103": {
            "title": "NBDEV/Quarto Installation Guide",
            "content": "Create new repository with nbdev . Documentation . For the most part the documentation is pretty straight forward. Here are some extra details that might be helpful: . When you initialize the repository, remember to use mkdir and do the commands in that directory. | You will be asked to generate a token for a password, you will need to make sure to give yourself repository permissions on the token otherwise the password will give you a 403 error when you run git push. More Info Here | . Install hooks for git-friendly notebooks . conda install -c conda-forge pre-commit . Note: this command took me a long time. . Install packages: . pip install -e &#39;.[dev]&#39; . This command is similar to make server: . nbdev_preview . Before commiting your changes to GitHub the developers recommend running: . nbdev_prepare . Transfer posts from old repository . In your new directory run: . $ quarto create-project --type website:blog . . Migrate posts and notebooks with these commands: *It is a good idea to delete all the markdown posts that were created by make server (the files you put into .gitignore) . $ cp -r ../blog/_notebooks/* posts $ cp -r ../blog/_posts/* posts . For me the .. is home/username and blog is replaced with the directory that the repository is called. . Do the same with images . $ cp ../blog/images/* posts $ cp -r ../blog/images/copied_from_nb/* posts/ . Migrate (changes the front matter) the transfered posts . $ nbdev_migrate --path posts . Note: . If you didn’t delete the markdown posts I specified earlier you will run into an exception error. You will need to manually remove these files in the posts directory. | Your front matter cannot have any empty values you will run into an exception for this reason as well. | . Creating a blog within a nbdev project .",
            "url": "https://nighthawkcoders.github.io/APCSP/nbdevinstall",
            "relUrl": "/nbdevinstall",
            "date": " • Jun 1, 2022"
        }
        
    
  
    
        ,"post104": {
            "title": "Intro to Computer Science Ideas",
            "content": "Intro Class Logistics (Del Norte desires title by end of meeting) . Idea is to have a course to focusses on freshman/sophomore classes. The purpose Computer Science and Software Engineering at Del Norte and PUSD, is to add to the beginning of the pathway that feeds into AP Computer Science Principles (CSP). Guide . 1st trimester course is Game Design | 2nd trimester course is Game Design with an App Focus | . Pathway . The Computer Science Pathway, including Trimester modifications required at Del Norte High School. . Preferred Grade | Course | Trimesters | Credit | Notes/Experience | . 9th or 10th | Computer Science and Software Engineering (CSSE) | 2 | UC G | Entry to pathway | . 10th or 11th | AP Computer Science Principles (CSP) | 2 | UC D or G | Requires CSSE or equivalent experience | . 10th or 11th | Data Structures 1 (DS1) | 1 | DS1/DS2 articulate | Part of CSP year and contract | . 11th or 12th | AP Computer Science A (CSA) | 2 | UC C or G | Requires CSP, DS1 or experience in Technologies taught in Del Norte program. | . 11th or 12th | Data Structures 2 (DS2) | 1 | DS1/DS2 articulate | Part of CSA year and contract | . Start with: . Scratch Introduction | Course Plans Introduction to tools (e.g. IDE and Github) | Fundamentals in Programming in selected language (C# or Scratch) | Agile Development Fundamentals, Pair Programming, | . | . Move on to main focus: . Create an Apple App using Xcode and Swift AND/OR | Unity Game Development Curriculum | . Certificate Programs . Certificates are available online and at many avenues (Udemy, LinkedIN, Apple, etc). Teachers could/should learn and then perhaps teach courses that are aligned to certificates by an organization like LinkedIn. This would enable Teachers and District to confidently state that their Teachers are current to CTE advisors. . LinkedIn Certification Programs for Development Engineering Methodology . Skills to assist in teaching Project Based Learning. . Github Issues . | Agile Development . | Devops Engineer . | . LinkedIn Certificates for Programming . Certificates to assist in teaching Intro to Programming, Computers Science Principles, Computer Science “A” development. . Intro Scratch . | Intro C# Developer . | Intro Swift Developer . | CSP Python Developer . | CSP - JavaScript Developer . | CSA - Java Developer . | . Accreditation, Articulation and Beyond . In discussion on titles, it seems vital to a High School Pathway that it leads beyond. A key contributor to increasing Del Norte student participation in Computer Science, ~100 tto ~240, is the introduction of Computer Science Principles. . Computer Science Principles has AP testing and UC accreditation as a 3rd Science, not just elective. | Computer Science “A” has AP testing and UC accreditation as a 4th Math, not just elective. | Data Structure 1&amp;2 with B or above graded will articulate to CS113 Data Structures. There has been movement by Emily Stephenson, Del Norte and Mira Costa College regarding articulation. This begins with students taking CSP/DS1 in Fall of 2022, it completes with students finishing CSA/DSP2 in Summer of 2024, receiving credit for CS113 – Data Structures. | Beyond College, it seems the other “Big Thing” that High School Computer Science can do is to prepare students for internships and jobs. Del Norte has been placing people regularly at Northrop Grumman (2 per year), UCSD Supercomputer (2 per year), Code Ninjas (2 per year). Additionally, I have 2 reports of students Teaching in CompSci Labs on campus (Harvard and Mira Costa College). Lastly, I have heard of a Purdue freshmen that is currently getting a Government clearance for internship in Summer 2023. An absolute key is having projects published on GitHub! The Purdue freshmen said the internship interviewer said “they reviewed projects on GitHub and new that he could code”. These opportunities seem to come because of Agile Methodology, Scrum, Python/Flask, Java/Spring, AWS, SQL, Linux, Anaconda, Docker, Nginx, GitHub. | . CS 113: Basic Data Structures and Algorithms Units: 3 Prerequisites: CS 112. Acceptable for Credit: CSU, UC Lecture 2 hours, laboratory 3 hours. Course Typically Offered: Fall, Spring, and Summer . The course uses topics of personal and social relevance to investigate the impact of computing through efficient algorithms and properly designed data structures. Students explore the software development process by developing effective solutions using industry-standard tools. Topics include searching, sorting, hashing, algorithm analysis, object-oriented design, collections, lists, stacks, queues, trees, sets, dictionaries, and graphs. C-ID COMP-132. | . Del Norte 2022-2023 Course Outlines and Student Projects . Del Norte Materials are all online and maintained in GitHub. Content produced is automatically deployed to a public Website. . Computer Science “A” Trimester 1 CSA Student Projects/Review Tickets - AT BOTTOM OF LINK | . | Computer Science Principles Trimester 1 CSP Student Projects/Review Tickets - AT BOTTOM OF LINK | . | . Please comment, requires GitHub sign-in .",
            "url": "https://nighthawkcoders.github.io/APCSP/csintro",
            "relUrl": "/csintro",
            "date": " • Jun 1, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Schedule",
          "content": ". Unit 7: Trimester 3 Data Structures . Trimester 3 is taught following college course requirements for CS113 Data Structures. Topics, using Python, include searching, sorting, hashing, algorithms, analysis, object-oriented design, collections, lists, stacks, queues, trees, sets, dictionaries, and graphs. These weeks will also include the a focus on preparations for the May 2nd Create Performance Task and the May 8th Exam. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 25 | - Week of 03-06, Data Compression and Image Lab | | | | . 26 | - Week of 03-13, Extracting and Using Data | | | | . 27 | - Week of 03-20, Space and Time Complexity | | | - Big Teams | . 28 | - Week of 03-27, Hashmaps | | | | . 29 | - Week of 04-03, Arrays | - Binary Math - Binary Math - Binary Math | | | . 30 | - Week of 04-17, Search and Sort | | | | . . Unit 1: Introduction to Tools and Resources . The initial weeks focus on introducing Tools, Pair Programming, and the AP Resources that we plan to use throughout the year. At the end of Weeks 0-3, students will be exposed to blogging with GitHub Pages; developing with Jupyter Notebooks, Python, JavaScript, HTML, and Code.org AppLab; working with AP classroom and becoming familiar with Create Performance Task project requirements. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 0 | - Tool Setup Sprint and Pair Programming | - College Board Pseudo Code | - Tools and Equipment | - Student Scoring on AP Exam | . 1 | - Introduction to Python | | - Fastpages Frontend Development - Tour of GitHub Pages | | . 2 | - Data Abstraction in Python | | - HTML Fragments | | . 3 | - Creative Development Sprint | - College Board Create Performance Task | - Program Design with App Lab by Code.org | - How I got a 5! | . . Unit 2: Introduction to Web Development . Websites are made up of several key parts: Frontend, Backend, Data and Deployment. The focus for these weeks is to enable students to perform the aspects of constructing and deploying a simple Website. Fastpages got us started on these concepts, but now we will start building a Website from the ground up. Once again, there will be a lot of learning focused tools and getting things working. But, by the end of the Unit, students will be ready to start many of the technical coding aspects of Web Development, having established a Deployed Website. On Nov 3rd our Trimester work will end with a project and student participation in Electives Department “Night at the Museum” (N@tM). . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 4 | - Python Web Server Project | - Big Idea 1 &#39;Collaboration&#39; | - Flask/Python Web Application - Fastpages local server | - Focus and Habits | . 5 | - UI Starters | - Big Idea 1 &#39;Program Purpose&#39; | - Frontend | - Agile Methodology | . 6 | - Deployment | - Big Idea 1 &#39;Program Design&#39; | - Flask/Python Deployment Guide | | . 7 | - API | | - API | - GitHub and Git Sociology | . . Unit 3: N@tM Project, Web, Systems, and Data . The beginning of Trimester 2 is focussed on Algorithms and Coding. Student need to build their own portfolio. That portfolio should focus on their interests in Python and JavaScript programming. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 8 | - Internet Connections | - Big Idea 4 &#39;The Internet&#39; | - Deployment Files - System to System APIs - Fetch of Python data using RapidAPI | | . 9 | - Project Week 1 | - Computer System and Networks | - Javascript Web Page using an API | - CTE | . 10 | - Project Week 2 | | - Grade Calculator | | . 11 | - Project Week 3 | | | | . 12 | - Finals Week | | | | . . Unit 4: Algorithmic Programming . Trimester 2 begins with student teaching and a focus on algorithms. Each week a “Student Team” has a teaching assignment supported by College Board materials. Additionally, the Teacher is providing Career Tech mini-labs that correspond to one or more topics for the week. Use the two things together as you improve your learning experience, Frontend blog and Jupyter Notebooks. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 13 | - Week of 11-14, Tri 2 Into, Tools and Issues | - Binary Logic and Abstraction | | | . 14 | - Week of 11-28, Student Teaching Week 1 | - Unit 3 Sections 5-7 - Unit 3 Sections 3-4 - Unit 3 Sections 1-2 | | | . 15 | - Week of 12-05, Student Teaching Week 2, Pop Live Reviews | - Unit 3 Sections 12-13 - Unit 3 Sections 9 and 11 - Unit 3 Sections 8 and 10 | | | . 16 | - Week of 12-12, Student Teaching Week 3, Pop Live Reviews | - Unit 3 Sections 17-18 - Unit 3 Sections 16 - Unit 3 Sections 14-15 | - Classic Snake Game - Game of Life | | . . Unit 5: Intro to OOP, Databases, and Backend Programming . Trimester 2 continues with student learning OOP and immediately applying it to Databases. Each week a “Student Teams” will be working on frontend and backend elements for their Create Performance Task (CPT). GitHub pages will be focus of instruction for frontend, OOP in Python will be instruction provided to create a database which will help exceed every CPT requirement. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 17 | - Week of 01-03, New Years Code Warmup | - Performance Task Scoring 1 | - UX, Midnight Theme and SASS | - Creative, Collaborative, and Quality Culture | . 18 | - Week of 01-09, FE and BE Intro Tech Talks | - Performance Task Scoring 2 | | | . 19 | - Week of 01-16, API and Database Intro | - Performance Task Scoring 3 | | | . 20 | - Week of 01-23, Half way CPT Classroom Presentations, MCQ Test. | - Big Idea 5.2 Digital Divide - Big Idea 5.1 Beneficial and Harmful Effects | | | . . Unit 6: Trimester 2 N@tM and finish CPT . Trimester 2 concludes with student presenting their CPT project at N@tM. Each person within “Student Teams” will have their own specialty within the student project that satisfied all their Create Performance Task requirements. Student should be able to talk about design, coding, and present features of their portion of the system. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 21 | - Week of 01-30, Scrum Board and Python Data Tools. | - Big Idea 5.4 Crowdsourcing - Big Idea 5.3 Computing Bias | | | . 22 | - Week of 02-06, Continuous Integration / Continuous Delivery starts. | - Big Idea 5.6 Safe Computing - Big Idea 5.5 Legal and Ethical Concerns | | | . 23 | - Week of 02-13, N@tM and complete classroom coding hours for CPT | | | | . 24 | - Week of 02-27, Performance Task Scoring, peer reviews | | - Flask Security using JSON Web Tokens (research reqd) | | . . Unit 8: Trimester 3 AP Weeks . Trimester 3 contains AP weeks, where activities will be focused on supporting students in test preparations. Day before a test can be used to study for exam in another class. Days that are not focused on test preparation will be focused on planning for year end project/portfolio. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 31 | - Week of 04-24, Computing Systems and Networks | | | | . 32 | - Week of 05-01, AP Week 1 | | | | . 33 | - Week of 05-08, AP Week 2 | | | | . . Unit 9: Trimester 3 Data Structures (continued) . Trimester 3 finishes with a focus on presenting accomplishments for the year at the year end Night at the Museum. These last 2 to 3 weeks will serve as the year end final exam. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 34 | | | | | . 35 | | | | | . 36 | | | | | .",
          "url": "https://nighthawkcoders.github.io/APCSP/schedule",
          "relUrl": "/schedule",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "Frontend",
          "content": "| Overview | Tutorial | Calculator | Binary | Grades | Graph | Life | Snake | . Frontend Web Development Overview . . Frontend web development is the development of the graphical user interface of a website, through the use of HTML, CSS, and JavaScript, so that users can view and interact with that website through a Browser. In this class, we will be using Fastpages on top of GitHub Pages to maximize our presentations, while minimizing our front-end coding. GitHub Pages deployment is performed through Jekyll, which regenerates the website automatically after each commit, tracking can be seen in Actions tab within GitHub. | HTML generation is performed through Liquid, a template language (similar to Jinja2 or Thymeleaf). | CSS style layout is provided by using Themes provided through GH Pages. Each page we make we assume the defined theme and insert our HTML fragments, local page style, and local page JavaScript. | JavaScript enables pages to have actions, fetch content, animate, etc | . . . Code in this Sub Menu . HTML, CSS, and JavaScript are the front-end of the Web. Many tools and languages complement development using markup, style and JavaScript. This section of the Nighthawk Coders CS website is providing some code samples. These are intended to spark your own PBL ideas. Each of these were generated after watching others teach or interacting with students. . Tutorial: This page is a FastPages _post. This page contains Markdown and HTML. Pull this file into VSCode and explore the fundamentals of making a content page. | Calculator: This calculator was inspired by Mr. Mortensen’s calculator that he built in Objective-C during his first year of teaching at DNHS (2019). It was recreated by former student Anthony using Fastpages, HTML, JavaScript, and CSS on this site in 2022. Creating a calculator helps developers to learn how to manage temporary data, manage presentation, associate input to calculator output, and work with logic | Visually it shows how math works within a language; specific functions, handling of strings, numbers, math, etc. | . | Binary: This example was created after watching Harvard CS50 by David J. Malan in 2020, he had built a machine to turn on and off lights/binary digits. My thought after watching machine, why not simulate that binary machine in software? Liquid is used to define a constant for the number of bits | JavaScript is used base 2, 8, 16 calculations | . | Grades: This grade calculator was created to show interaction of HTML and JavaScript to perform input. Additionally, it show how to add element to HTML Document Object Model (DOM). FYI, the IJavaScript kernel did not support input as of this writing. | Graph: This was created when a student named Bryant 2022 asked me the question “how would I plot data?” as described in an FRQ. JavaScript canvas is used to draw grid, axis, lines | . | Life: This was created by Nathaniel 2022 when I asked him about something interesting to show students in JS that relates to school. Built on Conway’s Game of Life (Wikipedia, Original) | Somewhat pure JavaScript, no canvas usage even though it has a grid. | . | Snake: This was interest of students in each of my 3 years, inspiration and some of the code came from a student named Nolan 2021. Contains menu and settings, as well as Grid | Uses JavaScript canvas and key events | . | .",
          "url": "https://nighthawkcoders.github.io/APCSP/frontend/overview",
          "relUrl": "/frontend/overview",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "API",
          "content": "| Overview | Covid19 RapidAPI | Jokes API | Users Database | User Login | . APIs in this Sub Menu . HTML, CSS, and JavaScript are the front-end of the API. Python and API resource definitions are used for RESTful API definitions. Abstraction of Frontend and Backend code, the exchange of standard data format (JSON), and guidelines for exchange (REST) is a technique that saves a lot of time between developers. Learning APIs is a highly recommended step for every developer trying to break into the world of tech. . Covid19: RapidAPI example. This is introducing APIs by accessing something that already exists. RapidAPI shows how many practice RESTful definitions. Almost any data source imagined can be accessed here. | Jokes: An introduction to Python RESTful API libraries. A Python List is used to make a Data Model, but persistence in this technique is limited, each time server is refreshed data is lost. This example is great for learning, but data is considered volatile. | Users: Another RESTful API library example. However, this backend establishes data persistence through the use of a database. This data if properly managed in deployment and migrated when changed can last forever. | . Web API Overview . . A Web API is an application programming interface typically for a web browser. Non-changing or Static Endpoints are used in interacting with the server-side Web APIs. RESTful Web APIs use HTTP methods to access resources via URL parameters, and use JSON for transmitting text between client and server. Server. In these examples, we will be using Python to define REST APIs. Python tools are very popular for building RESTful APIs | REST: Representational State Transfer. A set of guidelines on how to architect a network-connected software system. | Client-server: One guideline is a client and server must be decoupled from each other, allowing each to develop independently. | Layered system: The client may access the resources on the server indirectly through other layers such as a proxy or using authentication. This will be clarified by application and security requirements. | . Client. JavaScript is the frontend language used to consume data from the Python defined REST APIs. Fetch will be used to make HTTP requests, as well as handle HTTP response. There are four basic HTTP methods, they align with Create, Read, Update, Delete (CRUD). | GET =&gt; Retrieve/Read data | POST =&gt; Create data | PUT =&gt; Update data | DELETE =&gt; Delete data | . REST endpoints will have similarity from application to application. In planning APIs, for a Users system you can anticipate key methods. The Users RESTful APIs would likely contain these endpoints. | GET: /users =&gt; Get a list of users | GET: /users(id) =&gt; Get a single user | POST: /users =&gt; Create a new user | PUT: /users(id) =&gt; Update a user | DELETE: /users(id) =&gt; Delete a user | . Once a RESTful API receives and processes an HTTP request, it will return an HTTP response. Included in this response is an HTTP status code. Common status codes are shown. | 200 =&gt; OK, this response will then have the promise of JSON data | 400 =&gt; Bad Request | 404 =&gt; Not Found | 500 =&gt; Internal Server Error (aka bug) | . . . .",
          "url": "https://nighthawkcoders.github.io/APCSP/api/overview",
          "relUrl": "/api/overview",
          "date": ""
      }
      
  

  

  

  

  
      ,"page6": {
          "title": "About",
          "content": "This site is built with fastpages . Key Links . GitHub Repos: github.com/nighthawkcoders | AWS Deployments: csp.nighthawkcodingsociety.com | Slack: Join Link | 2021-2022 Archives: Fall, Early Winter, Late Winter, Spring | . .",
          "url": "https://nighthawkcoders.github.io/APCSP/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page8": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/page2/",
          "relUrl": "/page2/",
          "date": ""
      }
      
  

  
      ,"page15": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/page3/",
          "relUrl": "/page3/",
          "date": ""
      }
      
  

  
      ,"page16": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/page4/",
          "relUrl": "/page4/",
          "date": ""
      }
      
  

  
      ,"page17": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/page5/",
          "relUrl": "/page5/",
          "date": ""
      }
      
  

  
      ,"page18": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/page6/",
          "relUrl": "/page6/",
          "date": ""
      }
      
  

  
      ,"page19": {
          "title": "",
          "content": "Objectives . . This Conceptual Framework teaches College Boards 5 Big Ideas of AP Computer Science Principles, Python, JavaScript, and Web Site application development together in an integrated fashion. The purpose is to teach College Board requirements while adding languages, tools, frameworks, and methodologies that meet Career Technical Education (CTE) needs. The outcome is preparing the High School student for the AP Test and simultaneously building the skills required for Computer Science internships. . . Blogs .",
          "url": "https://nighthawkcoders.github.io/APCSP/page7/",
          "relUrl": "/page7/",
          "date": ""
      }
      
  

  
  

  
      ,"page21": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nighthawkcoders.github.io/APCSP/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}